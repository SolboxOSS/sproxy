!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACQUIRE_LIST	../include/util.h	274;"	d
AI_ALL	../include/util.h	40;"	d
AI_ASIO	../include/util.h	32;"	d
AI_BLOCK	../include/util.h	31;"	d
AI_COUNT	../include/util.h	38;"	d
AI_DRIVER	../include/util.h	28;"	d
AI_DRIVERLIB	../include/util.h	29;"	d
AI_ETC	../include/util.h	27;"	d
AI_INODE	../include/util.h	30;"	d
AI_IOCTX	../include/util.h	35;"	d
AI_MDB	../include/util.h	36;"	d
AI_OPENCTX	../include/util.h	34;"	d
AI_VOLUME	../include/util.h	33;"	d
ALIGN	../include/bitmap.h	17;"	d
ALIGNED_VALUE	../netcache/heaptrack.c	31;"	d	file:
ALIGN_UNIT	../netcache/heaptrack.c	30;"	d	file:
APC_APP_READ	../include/netcache_types.h	/^	APC_APP_READ          	= 1,  \/* application read 요청 *\/$/;"	e	enum:__anon59
APC_CHUNK	../include/netcache_types.h	/^	APC_CHUNK 				= 4,$/;"	e	enum:__anon59
APC_CLOSE_INODE	../include/netcache_types.h	/^	APC_CLOSE_INODE 		= 6,$/;"	e	enum:__anon59
APC_NULL	../include/netcache_types.h	/^	APC_NULL				= 0xFF	  \/* NULL *\/$/;"	e	enum:__anon59
APC_OPEN	../include/netcache_types.h	/^	APC_OPEN 				= 0,  \/* open context에 대한 event *\/$/;"	e	enum:__anon59
APC_OS_FREE	../include/netcache.h	/^	APC_OS_FREE=4$/;"	e	enum:__anon48
APC_OS_INIT	../include/netcache.h	/^	APC_OS_INIT = 0,$/;"	e	enum:__anon48
APC_OS_QUERY_FOR_MISS	../include/netcache.h	/^	APC_OS_QUERY_FOR_MISS=1,$/;"	e	enum:__anon48
APC_OS_QUERY_FOR_REFRESHCHECK	../include/netcache.h	/^	APC_OS_QUERY_FOR_REFRESHCHECK=2,$/;"	e	enum:__anon48
APC_OS_WAIT_FOR_COMPLETION	../include/netcache.h	/^	APC_OS_WAIT_FOR_COMPLETION=3,$/;"	e	enum:__anon48
APC_READ_CHUNK	../include/netcache_types.h	/^	APC_READ_CHUNK 			= 5,$/;"	e	enum:__anon59
APC_READ_TIMEOUT	../include/netcache_types.h	/^	APC_READ_TIMEOUT		= 7,	  \/* read-timeout *\/$/;"	e	enum:__anon59
APC_READ_VECTOR_DONE	../include/netcache_types.h	/^	APC_READ_VECTOR_DONE 	= 1,  \/* origin read요청 완료, 완료 post-action실행 필요 *\/$/;"	e	enum:__anon59
APC_RUN_VECTOR	../include/netcache_types.h	/^	APC_RUN_VECTOR 			= 3,  \/* run-queued, vector실행 요청*\/$/;"	e	enum:__anon59
APC_WRITE_VECTOR	../include/netcache_types.h	/^	APC_WRITE_VECTOR 		= 2,$/;"	e	enum:__anon59
ASIOE_CACHE_READ	../include/asio.h	20;"	d
ASIOE_CACHE_WRITE	../include/asio.h	19;"	d
ASIOE_INVALID_COMMAND	../include/asio.h	21;"	d
ASIOE_OK	../include/asio.h	17;"	d
ASIOE_OSD_DOWN	../include/asio.h	18;"	d
ASIOS_BIO_CPREP	../include/asio.h	69;"	d
ASIOS_BIO_INIT	../include/asio.h	66;"	d
ASIOS_BIO_LOCIO	../include/asio.h	70;"	d
ASIOS_BIO_PREP	../include/asio.h	67;"	d
ASIOS_BIO_REMIO	../include/asio.h	68;"	d
ASIOS_DISPATCHED	../include/asio.h	/^	ASIOS_DISPATCHED= 	3,$/;"	e	enum:__anon22
ASIOS_EOT	../include/asio.h	/^	ASIOS_EOT= 			6, \/* ir #29207 end of transfer *\/$/;"	e	enum:__anon22
ASIOS_FINISHED	../include/asio.h	/^	ASIOS_FINISHED=		7$/;"	e	enum:__anon22
ASIOS_FRARRIVED	../include/asio.h	/^	ASIOS_FRARRIVED= 	5, \/* ir #29207 first response arrived *\/$/;"	e	enum:__anon22
ASIOS_FREE	../include/asio.h	/^	ASIOS_FREE= 		0,$/;"	e	enum:__anon22
ASIOS_INIT	../include/asio.h	/^	ASIOS_INIT= 		1,$/;"	e	enum:__anon22
ASIOS_RUNNING	../include/asio.h	/^	ASIOS_RUNNING= 		4,$/;"	e	enum:__anon22
ASIOS_SCHEDULED	../include/asio.h	/^	ASIOS_SCHEDULED= 	2,$/;"	e	enum:__anon22
ASIO_ASYNC	../include/asio.h	/^typedef enum {ASIO_ASYNC = 0, ASIO_SYNC = 1} nc_schedule_type_t;$/;"	e	enum:__anon21
ASIO_BLOCK	../include/asio.h	165;"	d
ASIO_BLOCK_NO	../include/asio.h	164;"	d
ASIO_CMD_CASCADE	../include/asio.h	96;"	d
ASIO_CMD_FIRST	../include/asio.h	95;"	d
ASIO_CONTEXT	../include/asio.h	166;"	d
ASIO_EOV	../include/asio.h	51;"	d
ASIO_HANG_TIMEOUT	../common/asio_mgr.c	99;"	d	file:
ASIO_LIMITS	../common/asio_mgr.c	97;"	d	file:
ASIO_SYNC	../include/asio.h	/^typedef enum {ASIO_ASYNC = 0, ASIO_SYNC = 1} nc_schedule_type_t;$/;"	e	enum:__anon21
ASIO_TYPE_CONTEXT	../include/asio.h	47;"	d
ASIO_TYPE_VECTOR	../include/asio.h	48;"	d
ASIO_VALID_IO	../include/asio.h	168;"	d
ASIO_VALID_VECTOR	../include/asio.h	169;"	d
ASSERT	../include/ncapi.h	795;"	d
ASSERT	../include/trace.h	150;"	d
ASSERT	../include/trace.h	158;"	d
ASSERT	../netcache/ringbuffer.c	55;"	d	file:
ASSERT_ASIO_BLOCK	../common/asio_mgr.c	56;"	d	file:
ASSERT_ASIO_BLOCK	../common/asio_mgr.c	81;"	d	file:
ASSERT_FILE	../include/netcache.h	1336;"	d
ASSERT_FILE	../include/netcache.h	1351;"	d
ASSERT_LIST	../include/util.h	286;"	d
ASSERT_MH	../netcache/heaptrack.c	62;"	d	file:
ASSERT_OC	../netcache/diskcache.c	84;"	d	file:
ASSERT_PATHLOCK	../include/netcache.h	1343;"	d
A_LEAK	../netcache/util.c	/^A_LEAK(void *k, void *v, void *u)$/;"	f	file:
BASEDEC	../netcache/bitmap.c	250;"	d	file:
BATCH_BLK_CHECK	../common/blk_io.c	1024;"	d	file:
BCM_CHECK_FALSE_READ	../netcache/bc_mgr.c	131;"	d	file:
BCM_FATAL	../netcache/bc_mgr.c	122;"	d	file:
BCM_FREE_PAGE	../netcache/bc_mgr.c	129;"	d	file:
BC_LOCK	../include/block.h	30;"	d
BC_TRANSACTION	../include/block.h	43;"	d
BC_UNLOCK	../include/block.h	32;"	d
BC_UPGRADE	../include/block.h	31;"	d
BETWEEN	../include/netcache.h	63;"	d
BE_CACHE_FULL	../include/block.h	51;"	d
BE_CACHE_READ_IO	../include/block.h	49;"	d
BE_CANCELED	../include/block.h	52;"	d
BE_INVALID_IO	../include/block.h	53;"	d
BE_OK	../include/block.h	47;"	d
BE_OSD_BAD_IO	../include/block.h	54;"	d
BE_OSD_DOWN	../include/block.h	48;"	d
BE_RANGE_ERROR	../include/block.h	50;"	d
BITMAP_LAST_WORD_MASK	../include/bitmap.h	199;"	d
BITOP_MASK	../include/non-atomic.h	10;"	d
BITOP_WORD	../include/non-atomic.h	11;"	d
BITS_PER_LL	../include/bt_bitmap.h	9;"	d
BITS_PER_LONG	../include/bitmap.h	11;"	d
BITS_TO_LL	../include/bt_bitmap.h	11;"	d
BITS_TO_LONGS	../include/bitmap.h	13;"	d
BLK_INDICATE_ERROR	../include/block.h	318;"	d
BLK_INTRA_OFFSET	../common/blk_io.c	57;"	d	file:
BLK_INTRA_OFFSET	../netcache/blkio_lpmap.c	55;"	d	file:
BLK_NO	../include/block.h	17;"	d
BLK_NO	../netcache/blkio_lpmap.c	56;"	d	file:
BLOCK_EMPTY	../include/block.h	129;"	d
BLOCK_IS_PG_MARKED	../include/block.h	313;"	d
BLOCK_MAGIC	../include/block.h	148;"	d
BLOCK_MARK_INVALID	../include/block.h	124;"	d
BLOCK_NULL	../include/netcache.h	52;"	d
BLOCK_PAGE_MEMORY	../include/block.h	121;"	d
BLOCK_RESET	../include/block.h	69;"	d
BLOCK_SIGNATURE	../include/block.h	/^static inline nc_uint64_t BLOCK_SIGNATURE(nc_uint64_t is, nc_blkno_t blkno) { return ((nc_uint64_t)(is & 0x7FFFFFFFLL)) << 32 | (nc_uint64_t)blkno; } $/;"	f
BLOCK_SIGNATURE	../include/block.h	222;"	d
BLOCK_SIZE	../test/driver_test.c	15;"	d	file:
BLOCK_SIZE	../test/test_kv.c	18;"	d	file:
BLOCK_SIZE	../test/test_path.c	16;"	d	file:
BLOCK_SIZE	../test/volume_test.c	16;"	d	file:
BLOCK_STATE	../include/block.h	77;"	d
BLOCK_UID	../include/netcache.h	53;"	d
BLOCK_VALID	../include/block.h	/^static inline int BLOCK_VALID(fc_inode_t *inode, struct tag_fc_blk *blk, nc_blkno_t blkno) { return blk &&  (blk->signature == BLOCK_SIGNATURE(inode->signature, blkno)); }$/;"	f
BLOCK_VALID	../include/block.h	223;"	d
BLOCK_VALID_FOR_UPDATE	../include/block.h	112;"	d
BLOCK_VALID_TO_READ	../include/block.h	113;"	d
BLOCK_VALID_TO_WAIT	../include/block.h	118;"	d
BLOCK_VALID_TO_WRITEBACK	../include/block.h	116;"	d
BSTM_CASCADE	../include/block.h	57;"	d
BSTM_STOP	../include/block.h	58;"	d
BS_CACHED	../include/block.h	/^BS_CACHED 			= 2,$/;"	e	enum:__anon24
BS_CACHED_DIRTY	../include/block.h	/^BS_CACHED_DIRTY 	= 3,$/;"	e	enum:__anon24
BS_FAULT	../include/block.h	/^BS_FAULT 			= 1,$/;"	e	enum:__anon24
BS_INIT	../include/block.h	/^BS_INIT 			= 0,$/;"	e	enum:__anon24
BS_WRITEBACK_DIRTY	../include/block.h	/^BS_WRITEBACK_DIRTY 	= 4$/;"	e	enum:__anon24
BT_RUN_TIMER	../netcache/bt_timer.c	77;"	d	file:
BUFFER_MAX	../netcache/backtrace.c	39;"	d	file:
BUFFSIZE	../include/util.h	111;"	d
BUG_ON	../netcache/wb_timer.c	50;"	d	file:
CALLSYNTAX	../include/ncapi.h	528;"	d
CALLSYNTAX	../include/ncapi.h	538;"	d
CALLSYNTAX	../include/netcache_config.h	142;"	d
CALLSYNTAX	../include/netcache_config.h	151;"	d
CFS_CHECK_DRIVER_OPERATION	../netcache/cfs_driver.c	24;"	d	file:
CFS_CHECK_DRIVER_OPERATION_RD	../netcache/cfs_driver.c	57;"	d	file:
CFS_CHECK_DRIVER_OPERATION_RTPTR	../netcache/cfs_driver.c	39;"	d	file:
CFS_CHECK_DRIVER_OPERATION_VOID	../netcache/cfs_driver.c	68;"	d	file:
CFS_DRIVER_CLASS_COUNT	../netcache/cfs_driver.c	23;"	d	file:
CFS_DRIVER_IDLE	../include/cfs_driver.h	265;"	d
CFS_DRIVER_INUSE	../include/cfs_driver.h	266;"	d
CFS_DRIVER_PRIVATE	../include/cfs_driver.h	344;"	d
CFS_DRIVER_REF	../include/cfs_driver.h	254;"	d
CFS_DRIVER_UNREF	../include/cfs_driver.h	259;"	d
CFS_DRIVER_VALID	../include/cfs_driver.h	267;"	d
CFS_INCREASE_VM_COUNTER	../netcache/cfs_driver.c	85;"	d	file:
CFS_INCREASE_VM_COUNTER	../netcache/cfs_driver.c	87;"	d	file:
CHECK_EXIST	../test/integrity_test.c	42;"	d	file:
CHECK_LIST	../include/util.h	306;"	d
CHECK_LIST	../include/util.h	310;"	d
CHECK_MODE	../netcache/diskcache.c	401;"	d	file:
CHECK_NODE	../include/util.h	282;"	d
CHECK_RETURN	../include/trace.h	185;"	d
CHECK_RETURN_ERRNO	../include/trace.h	189;"	d
CHECK_WRAP_TIME	../include/rdtsc.h	44;"	d
CHECK_WRAP_TIME	../include/rdtsc.h	53;"	d
CHUNKSZ	../netcache/bitmap.c	247;"	d	file:
CLAMP	../netcache/hash.c	28;"	d	file:
CLFU_DEFAULT_BAND_COUNT	../include/cyclic_lfu.h	23;"	d
CLFU_LM_EXCLUSIVE	../include/cyclic_lfu.h	/^typedef enum {CLFU_LM_SHARED=1, CLFU_LM_EXCLUSIVE=2} clfu_lock_mode_t;$/;"	e	enum:__anon31
CLFU_LM_SHARED	../include/cyclic_lfu.h	/^typedef enum {CLFU_LM_SHARED=1, CLFU_LM_EXCLUSIVE=2} clfu_lock_mode_t;$/;"	e	enum:__anon31
CLFU_LOCK	../include/cyclic_lfu.h	77;"	d
CLFU_LRUW_KEY	../include/cyclic_lfu.h	34;"	d
CLFU_LT_EXCLUSIVE	../include/cyclic_lfu.h	/^typedef enum {CLFU_LT_NULL=0, CLFU_LT_UPGRADABLE=1, CLFU_LT_EXCLUSIVE=2} clfu_lock_type_t;$/;"	e	enum:__anon30
CLFU_LT_NULL	../include/cyclic_lfu.h	/^typedef enum {CLFU_LT_NULL=0, CLFU_LT_UPGRADABLE=1, CLFU_LT_EXCLUSIVE=2} clfu_lock_type_t;$/;"	e	enum:__anon30
CLFU_LT_UPGRADABLE	../include/cyclic_lfu.h	/^typedef enum {CLFU_LT_NULL=0, CLFU_LT_UPGRADABLE=1, CLFU_LT_EXCLUSIVE=2} clfu_lock_type_t;$/;"	e	enum:__anon30
CLFU_MAX_BAND_COUNT	../include/cyclic_lfu.h	21;"	d
CLFU_MAX_LRUW_ARRAY	../include/cyclic_lfu.h	33;"	d
CLFU_MIN_BAND_COUNT	../include/cyclic_lfu.h	22;"	d
CLFU_NEED_TUNE	../netcache/clfu.c	24;"	d	file:
CLFU_SIGNATURE	../include/cyclic_lfu.h	35;"	d
CLFU_UNLOCK	../include/cyclic_lfu.h	78;"	d
COND_DESTROY	../include/util.h	65;"	d
COND_DESTROY	../include/util.h	71;"	d
COND_INIT	../include/util.h	64;"	d
COND_INIT	../include/util.h	70;"	d
CONTEXT_DEFINED_64BIT	../netcache/backtrace.c	35;"	d	file:
CS_FRESH	../include/netcache.h	/^	CS_FRESH		= 0,	\/* 규약에 따라 신선하다고 가정*\/$/;"	e	enum:__anon45
CS_MARK_STALE	../include/netcache.h	/^	CS_MARK_STALE	= 2		\/* 원본에 물을 필요없이 유효기간 만료로 간주*\/$/;"	e	enum:__anon45
CS_NEED_REVAL	../include/netcache.h	/^	CS_NEED_REVAL	= 1,	\/* 서빙 전에 원본에게 확인 필요*\/$/;"	e	enum:__anon45
Crc32Lookup	../netcache/crc32.c	/^const uint32_t Crc32Lookup[8][256] = {$/;"	v
DB	../netcache/mdb.c	/^	sqlite3 		*DB;$/;"	m	struct:tag_mdb_session	file:
DEBUG_ASSERT	../include/ncapi.h	805;"	d
DEBUG_ASSERT	../include/ncapi.h	808;"	d
DEBUG_ASSERT	../include/trace.h	171;"	d
DEBUG_ASSERT	../include/trace.h	174;"	d
DEBUG_ASSERT_ASIO	../include/asio.h	172;"	d
DEBUG_ASSERT_ASIO	../include/asio.h	194;"	d
DEBUG_ASSERT_ASIOC	../include/asio.h	186;"	d
DEBUG_ASSERT_ASIOC	../include/asio.h	195;"	d
DEBUG_ASSERT_BLOCK	../include/block.h	263;"	d
DEBUG_ASSERT_BLOCK	../include/block.h	302;"	d
DEBUG_ASSERT_BLOCK2	../include/block.h	275;"	d
DEBUG_ASSERT_BLOCK2	../include/block.h	303;"	d
DEBUG_ASSERT_BLOCK3	../include/block.h	288;"	d
DEBUG_ASSERT_BLOCK3	../include/block.h	304;"	d
DEBUG_ASSERT_FILE	../include/netcache.h	1362;"	d
DEBUG_ASSERT_FILE	../include/netcache.h	1370;"	d
DEBUG_ASSERT_PATHLOCK	../include/netcache.h	1355;"	d
DEBUG_ASSERT_PATHLOCK	../include/netcache.h	1371;"	d
DEBUG_MAGIC	../netcache/part_mgr.c	68;"	d	file:
DEBUG_TRAP	../include/util.h	453;"	d
DEBUG_TRAP	../include/util.h	455;"	d
DEBUG_TRAP	../netcache/diskcache.c	81;"	d	file:
DECLARE_BITMAP	../include/bitmap.h	15;"	d
DEFAULT_NCREAD_TIMEOUT	../include/ncapi.h	486;"	d
DEFINE_CONFIG	../netcache/cfs_apix.c	840;"	d	file:
DIO_MAX_AIO	../netcache/disk_io_ops.c	90;"	d	file:
DIRS_PER_THREAD	../netcache/diskcache.c	124;"	d	file:
DIRS_PER_THREAD	../netcache/diskcache.c	126;"	d	file:
DLLIST_INITIALIZER	../netcache/heaptrack.c	87;"	d	file:
DMS_BUILDING	../netcache/diskcache.c	141;"	d	file:
DMS_CLEAN	../netcache/diskcache.c	142;"	d	file:
DMS_INIT	../netcache/diskcache.c	140;"	d	file:
DM_BLOCK_FAULT	../include/netcache.h	/^	DM_BLOCK_FAULT 		= 0,$/;"	e	enum:__anon44
DM_BLOCK_IOPROGRESS	../include/netcache.h	/^	DM_BLOCK_IOPROGRESS	= 3$/;"	e	enum:__anon44
DM_BLOCK_ONDISK	../include/netcache.h	/^	DM_BLOCK_ONDISK		= 2,$/;"	e	enum:__anon44
DM_BLOCK_ONMEMORY	../include/netcache.h	/^	DM_BLOCK_ONMEMORY 	= 1,$/;"	e	enum:__anon44
DM_CACHE_DIR_COUNT	../netcache/diskcache.c	121;"	d	file:
DM_CHECK_RBOD	../include/netcache.h	88;"	d
DM_CHUNKMAP_EXPAND_UNIT	../netcache/diskcache.c	97;"	d	file:
DM_CLOSE_ALLOWED	../include/netcache.h	1386;"	d
DM_CLOSE_FD	../include/netcache.h	76;"	d
DM_CLOSE_FD	../include/netcache.h	81;"	d
DM_FD_VALID	../include/netcache.h	77;"	d
DM_FD_VALID	../include/netcache.h	82;"	d
DM_LOOKUP_WITH_CO	../include/netcache.h	1332;"	d
DM_LOOKUP_WITH_KEY	../include/netcache.h	1331;"	d
DM_NEED_FLUSH	../netcache/diskcache.c	146;"	d	file:
DM_NULL_FD	../include/netcache.h	75;"	d
DM_NULL_FD	../include/netcache.h	80;"	d
DM_OPENR_AGAIN	../netcache/diskcache.c	160;"	d	file:
DM_OPENR_ALLOCATED	../netcache/diskcache.c	163;"	d	file:
DM_OPENR_ALLOCFAILED	../netcache/diskcache.c	161;"	d	file:
DM_OPENR_BUSYWAIT	../netcache/diskcache.c	166;"	d	file:
DM_OPENR_FRESH	../netcache/diskcache.c	151;"	d	file:
DM_OPENR_KEYCHANGED	../netcache/diskcache.c	164;"	d	file:
DM_OPENR_NOTFOUND	../netcache/diskcache.c	162;"	d	file:
DM_OPENR_REFRESH_FRESH	../netcache/diskcache.c	152;"	d	file:
DM_OPENR_SCHEDULED	../netcache/diskcache.c	165;"	d	file:
DM_OPENR_STALLED_ALWAYS	../netcache/diskcache.c	158;"	d	file:
DM_OPENR_STALLED_BY_ORIGIN	../netcache/diskcache.c	159;"	d	file:
DM_OPENR_STALLED_ETAG	../netcache/diskcache.c	153;"	d	file:
DM_OPENR_STALLED_MTIME	../netcache/diskcache.c	154;"	d	file:
DM_OPENR_STALLED_OFFLINE	../netcache/diskcache.c	156;"	d	file:
DM_OPENR_STALLED_OTHER	../netcache/diskcache.c	155;"	d	file:
DM_OPENR_STALLED_SIZE	../netcache/diskcache.c	157;"	d	file:
DM_RECLAIM_HIGHMARK	../netcache/diskcache.c	132;"	d	file:
DM_RECLAIM_LOWMARK	../netcache/diskcache.c	131;"	d	file:
DM_UPDATE_METAINFO	../include/netcache.h	644;"	d
DO_ORPHANIZE	../netcache/volumeops.c	772;"	d	file:
DO_PROFILE_USEC	../include/rdtsc.h	37;"	d
DO_PROFILE_USEC	../include/rdtsc.h	48;"	d
DRIVER_CLASS	../test/driver_test.c	225;"	d	file:
DUMP_BUF_SIZ	../netcache/lru.c	157;"	d	file:
DUMP_RESOURCES	../include/util.h	66;"	d
DUMP_RESOURCES	../include/util.h	72;"	d
ECANCELED	../include/netcache_types.h	42;"	d
ECONNREFUSED	../include/ncapi.h	19;"	d
EFRESH	../include/ncapi.h	35;"	d
EHOSTDOWN	../include/ncapi.h	23;"	d
EINPROGRESS	../include/ncapi.h	31;"	d
EOF_BLKNO	../include/netcache_types.h	92;"	d
EOVERFLOW	../netcache/bitmap.c	311;"	d	file:
EREMCHG	../include/ncapi.h	11;"	d
EREMOTEIO	../include/ncapi.h	15;"	d
EREMOTEIO	../include/netcache_types.h	39;"	d
ESHUTDOWN	../include/ncapi.h	27;"	d
ESTALE	../include/netcache_types.h	36;"	d
F	../netcache/md5.c	116;"	d	file:
FAST_CRC_DATA_SIZE	../common/blk_io.c	56;"	d	file:
FCG_CONTINUE	../netcache/volumeops.c	179;"	d	file:
FCG_STOP	../netcache/volumeops.c	178;"	d	file:
FCLOSE	../include/log.h	55;"	d
FCLOSE	../include/log.h	71;"	d
FF	../netcache/md5.c	126;"	d	file:
FILE_OFFSET	../include/block.h	18;"	d
FILE_TO_BUF	../netcache/util.c	62;"	d	file:
FIO_MAGIC	../netcache/fhops.c	46;"	d	file:
FNV1A_Hash_Yoshimura	../netcache/fnv.c	/^uint32_t FNV1A_Hash_Yoshimura(const char *str, uint32_t wrdlen)$/;"	f
FNV1A_Hash_Yoshimura	../netcache/util.c	/^FNV1A_Hash_Yoshimura(const char *str, nc_uint32_t wrdlen)$/;"	f
FONT_BUF_SIZ	../include/hash.h	21;"	d
FOPEN	../include/log.h	32;"	d
FOPEN	../include/log.h	41;"	d
FRAME_COUNT	../netcache/cfs_apix.c	806;"	d	file:
G	../netcache/md5.c	117;"	d	file:
GCC_VERSION	../include/netcache_types.h	6;"	d
GET_ATOMIC_VAL	../include/netcache_types.h	58;"	d
GET_ATOMIC_VAL	../include/util.h	461;"	d
GET_ATOMIC_VAL_P	../include/netcache_types.h	59;"	d
GET_MP	../netcache/util.c	152;"	d	file:
GET_MP2UP	../netcache/util.c	153;"	d	file:
GET_RECORDS	../test/integrity_test.c	41;"	d	file:
GG	../netcache/md5.c	131;"	d	file:
GLRUR_ALLOCATED	../include/glru.h	66;"	d
GLRUR_FOUND	../include/glru.h	64;"	d
GLRUR_NOTFOUND	../include/glru.h	65;"	d
GLRU_CHECK_CORRUPT	../include/glru.h	20;"	d
GLRU_CHECK_CORRUPT	../include/glru.h	22;"	d
GLRU_FMAGIC_VALUE	../include/glru.h	17;"	d
GLRU_RMAGIC_VALUE	../include/glru.h	18;"	d
H	../netcache/heaptrack.c	/^	node_t		*H;$/;"	m	struct:__anon6	file:
H	../netcache/md5.c	118;"	d	file:
H	../test/mem_test.c	/^memmgr_heap_t 	H;$/;"	v
HASH_TABLE_MAX_SIZE	../netcache/hash.c	27;"	d	file:
HASH_TABLE_MIN_SIZE	../netcache/hash.c	26;"	d	file:
HASH_TABLE_RESIZE	../netcache/hash.c	31;"	d	file:
HASH_TABLE_SHRINK	../netcache/hash.c	36;"	d	file:
HH	../netcache/md5.c	136;"	d	file:
HLIST_HEAD	../include/bt_tmlist.h	478;"	d
HLIST_HEAD_INIT	../include/bt_tmlist.h	477;"	d
HM_SUICIDE_CACHE	../include/util.h	448;"	d
HM_SUICIDE_DISKIO	../include/util.h	446;"	d
HM_SUICIDE_RA	../include/util.h	447;"	d
HM_SUICIDE_TIMER	../include/util.h	449;"	d
HT_CONTINUE	../include/hash.h	19;"	d
HT_MAGIC	../netcache/heaptrack.c	32;"	d	file:
HT_OUTPUT_FORMAT	../netcache/heaptrack.c	35;"	d	file:
HT_OUTPUT_FORMAT_H	../netcache/heaptrack.c	34;"	d	file:
HT_STOP	../include/hash.h	18;"	d
HZ_GIGA	../netcache/util.c	2324;"	d	file:
HZ_KILO	../netcache/util.c	2326;"	d	file:
HZ_MEGA	../netcache/util.c	2325;"	d	file:
I	../netcache/md5.c	119;"	d	file:
IC_LOCK	../include/netcache.h	94;"	d
IC_UNLOCK	../include/netcache.h	100;"	d
IC_UPGRADE	../include/netcache.h	99;"	d
II	../netcache/md5.c	141;"	d	file:
IL_SET	../include/netcache.h	59;"	d
IL_SET_PROGRESS_EXCLUSIVE	../include/netcache.h	57;"	d
IL_SET_PROGRESS_IDLE	../include/netcache.h	55;"	d
IL_SET_PROGRESS_MANAGEMENT	../include/netcache.h	58;"	d
IL_SET_PROGRESS_SHARED	../include/netcache.h	56;"	d
IMMEDIATE_TX	../netcache/mdb.c	294;"	d	file:
INDEX	../netcache/wb_timer.c	449;"	d	file:
INIT_HLIST_HEAD	../include/bt_tmlist.h	479;"	d
INIT_HLIST_NODE	../include/bt_tmlist.h	480;"	d
INIT_LIST	../include/util.h	277;"	d
INIT_LIST_HEAD	../include/bt_tmlist.h	88;"	d
INIT_NODE	../include/util.h	280;"	d
INLINE	../include/cyclic_lfu.h	3;"	d
INLINE	../include/hash.h	14;"	d
INODE_BUSY	../include/netcache.h	230;"	d
INODE_CACHED_SIGNATURE	../netcache/cacheops.c	63;"	d	file:
INODE_CACHED_SIGNATURE	../netcache/diskcache.c	76;"	d	file:
INODE_FREE_SIGNATURE	../netcache/cacheops.c	62;"	d	file:
INODE_FREE_SIGNATURE	../netcache/diskcache.c	75;"	d	file:
INODE_GET_REF	../include/netcache.h	229;"	d
INODE_HDR_VERSION_V30	../include/netcache.h	235;"	d
INODE_LOCK	../include/netcache.h	892;"	d
INODE_REF	../include/netcache.h	212;"	d
INODE_REF	../include/netcache.h	215;"	d
INODE_RESET	../include/netcache.h	267;"	d
INODE_SIZE_DECLED	../include/netcache.h	70;"	d
INODE_SIZE_DETERMINED	../include/netcache.h	69;"	d
INODE_SPINLOCK_TRANSACTION	../include/netcache.h	280;"	d
INODE_SPINLOCK_TRANSACTION	../include/netcache.h	284;"	d
INODE_SPIN_PERIOD	../netcache/cacheops.c	99;"	d	file:
INODE_UNLOCK	../include/netcache.h	893;"	d
INODE_UNREF	../include/netcache.h	213;"	d
INODE_UNREF	../include/netcache.h	221;"	d
INODE_VALID_TO_READ	../include/netcache.h	71;"	d
IOCTL_SET_INODECACHE_COUNT	../include/cfs_driver.h	243;"	d
IOCTL_SET_INODECACHE_NEGTTL	../include/cfs_driver.h	244;"	d
IOCTL_SET_INODECACHE_PURGE	../include/cfs_driver.h	246;"	d
IOCTL_SET_INODECACHE_TTL	../include/cfs_driver.h	245;"	d
IOSIZE	../test/rb_test.c	45;"	d	file:
IOSUM	../test/driver_test.c	/^unsigned long 		IOSUM = 0;$/;"	v
IOSUM	../test/volume_test.c	/^unsigned long 		IOSUM = 0;$/;"	v
IOT_CACHE_READ	../include/asio.h	36;"	d
IOT_CACHE_READ	../include/netcache_types.h	/^typedef enum {IOT_UNKN=0, IOT_CACHE_READ=1, IOT_CACHE_WRITE=2, IOT_OSD_READ=3, IOT_OSD_WRITE=4, IOT_OSD_READ_ENTIRE=5, IOT_NULL=6 } nc_asio_type_t;$/;"	e	enum:__anon55
IOT_CACHE_WRITE	../include/asio.h	37;"	d
IOT_CACHE_WRITE	../include/netcache_types.h	/^typedef enum {IOT_UNKN=0, IOT_CACHE_READ=1, IOT_CACHE_WRITE=2, IOT_OSD_READ=3, IOT_OSD_WRITE=4, IOT_OSD_READ_ENTIRE=5, IOT_NULL=6 } nc_asio_type_t;$/;"	e	enum:__anon55
IOT_NULL	../include/asio.h	41;"	d
IOT_NULL	../include/netcache_types.h	/^typedef enum {IOT_UNKN=0, IOT_CACHE_READ=1, IOT_CACHE_WRITE=2, IOT_OSD_READ=3, IOT_OSD_WRITE=4, IOT_OSD_READ_ENTIRE=5, IOT_NULL=6 } nc_asio_type_t;$/;"	e	enum:__anon55
IOT_OSD_READ	../include/asio.h	38;"	d
IOT_OSD_READ	../include/netcache_types.h	/^typedef enum {IOT_UNKN=0, IOT_CACHE_READ=1, IOT_CACHE_WRITE=2, IOT_OSD_READ=3, IOT_OSD_WRITE=4, IOT_OSD_READ_ENTIRE=5, IOT_NULL=6 } nc_asio_type_t;$/;"	e	enum:__anon55
IOT_OSD_READ_ENTIRE	../include/asio.h	40;"	d
IOT_OSD_READ_ENTIRE	../include/netcache_types.h	/^typedef enum {IOT_UNKN=0, IOT_CACHE_READ=1, IOT_CACHE_WRITE=2, IOT_OSD_READ=3, IOT_OSD_WRITE=4, IOT_OSD_READ_ENTIRE=5, IOT_NULL=6 } nc_asio_type_t;$/;"	e	enum:__anon55
IOT_OSD_WRITE	../include/asio.h	39;"	d
IOT_OSD_WRITE	../include/netcache_types.h	/^typedef enum {IOT_UNKN=0, IOT_CACHE_READ=1, IOT_CACHE_WRITE=2, IOT_OSD_READ=3, IOT_OSD_WRITE=4, IOT_OSD_READ_ENTIRE=5, IOT_NULL=6 } nc_asio_type_t;$/;"	e	enum:__anon55
IOT_UNKN	../include/asio.h	35;"	d
IOT_UNKN	../include/netcache_types.h	/^typedef enum {IOT_UNKN=0, IOT_CACHE_READ=1, IOT_CACHE_WRITE=2, IOT_OSD_READ=3, IOT_OSD_WRITE=4, IOT_OSD_READ_ENTIRE=5, IOT_NULL=6 } nc_asio_type_t;$/;"	e	enum:__anon55
IO_MAGIC	../netcache/disk_io_ops.c	65;"	d	file:
IS_CACHED	../include/netcache.h	/^typedef enum { IS_FREED = 0, IS_ORPHAN = 1, IS_CACHED = 2} ic_cache_state_t;$/;"	e	enum:__anon46
IS_FREED	../include/netcache.h	/^typedef enum { IS_FREED = 0, IS_ORPHAN = 1, IS_CACHED = 2} ic_cache_state_t;$/;"	e	enum:__anon46
IS_ON	../include/util.h	14;"	d
IS_ORPHAN	../include/netcache.h	/^typedef enum { IS_FREED = 0, IS_ORPHAN = 1, IS_CACHED = 2} ic_cache_state_t;$/;"	e	enum:__anon46
IS_SERIAL	../netcache/blkio_lpmap.c	57;"	d	file:
IS_TIMER_RUN	../include/bt_timer.h	37;"	d
IS_TIMER_RUN	../include/wb_timer.h	78;"	d
KBYTES	../include/netcache.h	34;"	d
KV_HASH_SIZE	../include/netcache.h	151;"	d
KV_HASH_VAL	../netcache/kv.c	63;"	d	file:
KV_MAGIC	../netcache/kv.c	53;"	d	file:
KV_VER_2	../include/netcache.h	150;"	d
L	../rwtest/rwtest.c	/^struct  nc_rw_lock	L;$/;"	v	typeref:struct:nc_rw_lock
L	../test/list_test.c	/^link_list_t 			L = LIST_INITIALIZER;$/;"	v
L	../test/sorteddll.c	/^	link_list_t		L = LIST_INITIALIZER;$/;"	v
LARGER_THAN	../netcache/util.c	3116;"	d	file:
LEAK	../netcache/cfs_apix.c	/^LEAK(char *l)$/;"	f	file:
LFU_BAND	../include/cyclic_lfu.h	31;"	d
LFU_BANDOFFSET	../include/cyclic_lfu.h	26;"	d
LFU_BASECOUNT	../include/cyclic_lfu.h	29;"	d
LFU_DISTANCE	../include/cyclic_lfu.h	27;"	d
LFU_HIGHESTBAND	../include/cyclic_lfu.h	30;"	d
LFU_NEXTBAND	../include/cyclic_lfu.h	25;"	d
LFU_TOPMOST	../include/cyclic_lfu.h	32;"	d
LIBNC_VERSION	../include/ncconfig.h	9;"	d
LIBNC_VERSION_NUM	../include/ncconfig.h	10;"	d
LIST_HEAD	../include/bt_tmlist.h	85;"	d
LIST_HEAD_INIT	../include/bt_tmlist.h	83;"	d
LIST_INITIALIZER	../include/util.h	276;"	d
LIST_INITIALIZER	../test/sorteddll.c	6;"	d	file:
LIST_MAGIC	../include/util.h	271;"	d
LIST_POISON1	../include/bt_tmlist.h	66;"	d
LIST_POISON2	../include/bt_tmlist.h	67;"	d
LIST_VALID	../netcache/util.c	45;"	d	file:
LL_SZ_BYTES	../include/bt_bitmap.h	8;"	d
LOCKE_ACQUIRED	../include/lock.h	45;"	d
LOCKE_ALREADYIDLE	../include/lock.h	47;"	d
LOCKE_ALREADYRELEASED	../include/lock.h	51;"	d
LOCKE_BUSY	../include/lock.h	46;"	d
LOCKE_INCONSISTENT	../include/lock.h	48;"	d
LOCKE_OK	../include/lock.h	44;"	d
LOCKE_RELEASED	../include/lock.h	50;"	d
LOCKE_STILLBUSY	../include/lock.h	49;"	d
LOCK_BLOCK	../include/lock.h	23;"	d
LOCK_BLOCK_COND	../include/lock.h	20;"	d
LOCK_FREE	../include/lock.h	28;"	d
LOCK_INIT	../include/lock.h	27;"	d
LOCK_RELEASE	../include/lock.h	26;"	d
LOCK_SNUM	../include/util.h	172;"	d
LOG_HANDLE	../include/log.h	/^} LOG_HANDLE ;$/;"	t	typeref:struct:_log_handle
LOG_HANDLE_t	../include/netcache_types.h	/^typedef struct _log_handle 			LOG_HANDLE_t;$/;"	t	typeref:struct:_log_handle
LON_CLFU_BLOCK	../include/util.h	190;"	d
LON_CLFU_INODE	../include/util.h	189;"	d
LON_INODE	../include/util.h	188;"	d
LON_NET_MUX	../include/util.h	185;"	d
LON_PATHLOCK	../include/util.h	187;"	d
LON_VOLUME	../include/util.h	186;"	d
LO_CHECK_ORDER	../include/util.h	175;"	d
LO_CHECK_ORDER	../include/util.h	180;"	d
LO_POP_ORDER	../include/util.h	178;"	d
LO_POP_ORDER	../include/util.h	183;"	d
LO_PUSH_ORDER	../include/util.h	176;"	d
LO_PUSH_ORDER	../include/util.h	181;"	d
LO_PUSH_ORDER_FL	../include/util.h	177;"	d
LO_PUSH_ORDER_FL	../include/util.h	182;"	d
LPMAP_BASE_BLKNO	../include/netcache.h	886;"	d
LPMAP_BIT2PBLKNO	../include/netcache.h	889;"	d
LPMAP_LOCK	../netcache/blkio_lpmap.c	86;"	d	file:
LPMAP_MAX_PBLKNO	../include/netcache.h	887;"	d
LPMAP_PBLKNO2BIT	../include/netcache.h	888;"	d
LPMAP_UNLOCK	../netcache/blkio_lpmap.c	87;"	d	file:
LPmap	../include/netcache.h	/^	nc_blkno_t						*LPmap;			\/* Logical-Physical block map *\/$/;"	m	struct:tag_fc_inode_info
LPmap_recover_pbitmap_nolock	../netcache/blkio_lpmap.c	/^LPmap_recover_pbitmap_nolock(fc_inode_t *inode)$/;"	f
LPmap_verify	../netcache/blkio_lpmap.c	/^LPmap_verify(fc_inode_t *inode)$/;"	f
LRU	../include/glru.h	/^	fc_lru_root_t 		*LRU;$/;"	m	struct:tag_glru
LRUW_MAGIC	../include/netcache.h	18;"	d
LRU_CACHED	../include/lru.h	32;"	d
LRU_add	../netcache/lru.c	/^LRU_add(fc_lru_root_t *root, void *data, lru_node_t *node)$/;"	f
LRU_assign_node	../include/lru.h	13;"	d
LRU_count	../netcache/lru.c	/^LRU_count(fc_lru_root_t *root)$/;"	f
LRU_create	../netcache/lru.c	/^LRU_create(int signature, int cap, fc_check_idle_t idle_proc, fc_dump_t dump_proc)$/;"	f
LRU_destroy	../netcache/lru.c	/^LRU_destroy(fc_lru_root_t *root, fc_destructor_t free_proc)$/;"	f
LRU_dump	../netcache/lru.c	/^LRU_dump(fc_lru_root_t *root, fc_dump_node_proc_t proc, int forward, int *cnt)$/;"	f
LRU_for_each	../netcache/lru.c	/^LRU_for_each(fc_lru_root_t *root, int (*proc)(void *data, void *), void *uc, int forward)$/;"	f
LRU_hit	../netcache/lru.c	/^LRU_hit(fc_lru_root_t *root, lru_node_t *node)$/;"	f
LRU_init_node	../include/lru.h	17;"	d
LRU_join	../netcache/lru.c	/^LRU_join(fc_lru_root_t *dest, fc_lru_root_t *src)$/;"	f
LRU_reclaim_node	../netcache/lru.c	/^LRU_reclaim_node(fc_lru_root_t *root, int *navi)$/;"	f
LRU_remove	../netcache/lru.c	/^LRU_remove(fc_lru_root_t *root, lru_node_t *ln)$/;"	f
LSD	../netcache/cfs_driver.c	/^	cfs_origin_driver_t 	*LSD;$/;"	m	struct:__anon3	file:
LSD_info_t	../netcache/cfs_driver.c	/^} LSD_info_t;$/;"	t	typeref:struct:__anon3	file:
L_HEAD	../netcache/util.c	42;"	d	file:
L_HEAD	../test/sorteddll.c	2;"	d	file:
L_TAIL	../netcache/util.c	43;"	d	file:
L_TAIL	../test/sorteddll.c	3;"	d	file:
MAKE_SEP	../netcache/diskcache.c	400;"	d	file:
MALLOC	../include/util.h	125;"	d
MALLOC	../include/util.h	133;"	d
MAX	../netcache/bt_timer.c	34;"	d	file:
MAX_ASIO_THREADS	../common/asio_mgr.c	91;"	d	file:
MAX_BACKGROUND_THREADS	../netcache/diskcache.c	128;"	d	file:
MAX_CFS_DRIVER_COUNT	../netcache/cfs_driver.c	18;"	d	file:
MAX_DISKIO_VECTOR	../include/cfs_driver.h	23;"	d
MAX_FILE_COUNT	../test/driver_test.c	47;"	d	file:
MAX_IDLE_TIME	../netcache/threadpool.c	27;"	d	file:
MAX_LOGFILE_NAME	../include/log.h	29;"	d
MAX_LOGFILE_SIZE	../include/log.h	26;"	d
MAX_LOG_LENGTH	../include/log.h	28;"	d
MAX_PATTERN	../test/vstr_test.c	20;"	d	file:
MAX_PRE_RI_ALLOCATION	../common/blk_io.c	1341;"	d	file:
MAX_PURGE_PER_ATTEMPT	../netcache/part_mgr.c	1610;"	d	file:
MAX_RECLAIM_COUNT	../netcache/part_mgr.c	863;"	d	file:
MAX_STAT_LIVE_TIME	../netcache/volumeops.c	83;"	d	file:
MAX_TEST	../test/vstr_test.c	19;"	d	file:
MAX_WAIT_TIME	../netcache/bt_timer.c	169;"	d	file:
MAX_WORKER	../test/uuid_test.c	122;"	d	file:
MBYTES	../include/netcache.h	35;"	d
MDBE_COLUMN_ERROR	../netcache/mdb.c	68;"	d	file:
MDBE_ERROR	../netcache/mdb.c	66;"	d	file:
MDBE_OBJECT_ERROR	../netcache/mdb.c	67;"	d	file:
MDBE_OK	../netcache/mdb.c	65;"	d	file:
MDBOP_INSERT	../netcache/mdb.c	/^	MDBOP_INSERT = 1,$/;"	e	enum:__anon9	file:
MDBOP_PURGE_ROWID	../netcache/mdb.c	/^	MDBOP_PURGE_ROWID = 2,$/;"	e	enum:__anon9	file:
MDBOP_UPDATE_ROWID	../netcache/mdb.c	/^	MDBOP_UPDATE_ROWID = 3$/;"	e	enum:__anon9	file:
MDB_ADD_COLUMN_CVERSION	../netcache/mdb.c	180;"	d	file:
MDB_BATCH_DEQUEUE	../netcache/mdb.c	2975;"	d	file:
MDB_BATCH_THRESHOLD	../netcache/mdb.c	2973;"	d	file:
MDB_BPI	../netcache/mdb.c	75;"	d	file:
MDB_CACHE_SIZE	../netcache/mdb.c	62;"	d	file:
MDB_CHECK_BIT	../netcache/mdb.c	70;"	d	file:
MDB_CHECK_ERROR	../netcache/mdb.c	83;"	d	file:
MDB_CHECK_ERROR	../netcache/mdb.c	98;"	d	file:
MDB_CHECK_RESULT	../netcache/mdb.c	85;"	d	file:
MDB_CHECK_RESULT	../netcache/mdb.c	99;"	d	file:
MDB_CHECK_SUPPORT	../netcache/mdb.c	78;"	d	file:
MDB_CHECK_SUPPORT	../netcache/mdb.c	93;"	d	file:
MDB_DB_GET_HARD_PURGE_KEY	../netcache/mdb.c	288;"	d	file:
MDB_DB_GET_HARD_PURGE_PATH	../netcache/mdb.c	289;"	d	file:
MDB_DB_GET_OLDEST	../netcache/mdb.c	274;"	d	file:
MDB_DB_GET_SOFT_PURGE_KEY	../netcache/mdb.c	285;"	d	file:
MDB_DB_GET_SOFT_PURGE_PATH	../netcache/mdb.c	286;"	d	file:
MDB_DB_LOOKUP	../netcache/mdb.c	238;"	d	file:
MDB_DB_REMOVE	../netcache/mdb.c	263;"	d	file:
MDB_DB_REUSE	../netcache/mdb.c	265;"	d	file:
MDB_DB_SCHEMA_OBJECTS	../netcache/mdb.c	128;"	d	file:
MDB_DB_SCHEMA_VOLUMES	../netcache/mdb.c	168;"	d	file:
MDB_ENABLE_SINGLE_WRITER	../netcache/mdb.c	615;"	d	file:
MDB_FINISH_OP_TRANSACTION	../netcache/mdb.c	307;"	d	file:
MDB_INSERT_PGL	../netcache/mdb.c	193;"	d	file:
MDB_IO_READ	../netcache/mdb.c	528;"	d	file:
MDB_IO_REMOVE	../netcache/mdb.c	530;"	d	file:
MDB_IO_WRITE	../netcache/mdb.c	529;"	d	file:
MDB_ISSUE_AND_WAIT	../netcache/mdb.c	1117;"	d	file:
MDB_MAGIC	../netcache/mdb.c	351;"	d	file:
MDB_MAX_RETRY	../netcache/mdb.c	52;"	d	file:
MDB_MAX_STMTS	../netcache/mdb.c	379;"	d	file:
MDB_ML_PAD	../netcache/mdb.c	611;"	d	file:
MDB_ML_SIZE	../netcache/mdb.c	610;"	d	file:
MDB_ML_SIZEX	../netcache/mdb.c	612;"	d	file:
MDB_NORMALIZE_VIEWINDEX	../netcache/mdb.c	114;"	d	file:
MDB_OPCODE_OPERATION	../netcache/mdb.c	46;"	d	file:
MDB_OP_HARD_PURGE_ROWID	../netcache/mdb.c	356;"	d	file:
MDB_OP_INSERT	../netcache/mdb.c	353;"	d	file:
MDB_OP_LIST_HARD_PURGE_WITH_KEY	../netcache/mdb.c	362;"	d	file:
MDB_OP_LIST_HARD_PURGE_WITH_PATH	../netcache/mdb.c	363;"	d	file:
MDB_OP_LIST_SOFT_PURGE_WITH_KEY	../netcache/mdb.c	360;"	d	file:
MDB_OP_LIST_SOFT_PURGE_WITH_PATH	../netcache/mdb.c	361;"	d	file:
MDB_OP_LOOKUP	../netcache/mdb.c	358;"	d	file:
MDB_OP_REUSE_ROWID	../netcache/mdb.c	357;"	d	file:
MDB_OP_SOFT_PURGE_ROWID	../netcache/mdb.c	355;"	d	file:
MDB_OP_UPDATE_ROWID	../netcache/mdb.c	354;"	d	file:
MDB_PREPARE_OP_TRANSACTION	../netcache/mdb.c	296;"	d	file:
MDB_REUSE_RETRY	../netcache/mdb.c	1085;"	d	file:
MDB_RWLOCK_DEBUG	../netcache/mdb.c	49;"	d	file:
MDB_SIGNAL_OR_FREE	../netcache/mdb.c	1128;"	d	file:
MDB_SLEEP_MS	../netcache/mdb.c	51;"	d	file:
MDB_STMT_HARD_PURGE_ROWID	../netcache/mdb.c	371;"	d	file:
MDB_STMT_INSERT	../netcache/mdb.c	368;"	d	file:
MDB_STMT_LIST_HPWK	../netcache/mdb.c	376;"	d	file:
MDB_STMT_LIST_HPWP	../netcache/mdb.c	377;"	d	file:
MDB_STMT_LIST_SPWK	../netcache/mdb.c	374;"	d	file:
MDB_STMT_LIST_SPWP	../netcache/mdb.c	375;"	d	file:
MDB_STMT_LOOKUP	../netcache/mdb.c	373;"	d	file:
MDB_STMT_REUSE_ROWID	../netcache/mdb.c	372;"	d	file:
MDB_STMT_SOFT_PURGE_ROWID	../netcache/mdb.c	370;"	d	file:
MDB_STMT_UPDATE_ROWID	../netcache/mdb.c	369;"	d	file:
MDB_UPDATE_BY_ROWID_PGL	../netcache/mdb.c	185;"	d	file:
MDB_UPDATE_RESET	../netcache/diskcache.c	60;"	d	file:
MDB_UPDATE_THRESHOLD	../netcache/mdb.c	71;"	d	file:
MDB_USE_PRIMARY_KEY	../netcache/mdb.c	53;"	d	file:
MDB_VOLUMES_AGE	../netcache/mdb.c	177;"	d	file:
MDB_WRITER_NETCACHE	../netcache/mdb.c	392;"	d	file:
MDB_WRITER_VOLUMES	../netcache/mdb.c	393;"	d	file:
MDB_pack_property	../netcache/mdb.c	/^MDB_pack_property(char *key, char *val, void *cb)$/;"	f	file:
MDB_report_log	../netcache/mdb.c	/^MDB_report_log(void *not_used, int resultcode, char * msg)$/;"	f	file:
MDB_size_property	../netcache/mdb.c	/^MDB_size_property(char *key, char *val, void *cb)$/;"	f	file:
MDFile	../netcache/md5.c	/^static void MDFile (filename)$/;"	f	file:
MDFilter	../netcache/md5.c	/^static void MDFilter ()$/;"	f	file:
MDPrint	../netcache/md5.c	/^static void MDPrint (mdContext)$/;"	f	file:
MDString	../netcache/md5.c	/^static void MDString (inString)$/;"	f	file:
MDTestSuite	../netcache/md5.c	/^static void MDTestSuite ()$/;"	f	file:
MDTimeTrial	../netcache/md5.c	/^static void MDTimeTrial ()$/;"	f	file:
MEM_FREE	../include/netcache.h	649;"	d
MEM_FREE_CLEAR	../include/netcache.h	648;"	d
MIN	../netcache/bt_timer.c	30;"	d	file:
MIN_ASIO_THREADS	../common/asio_mgr.c	86;"	d	file:
MIN_LOGFILE_SIZE	../include/log.h	27;"	d
MODU_GIGA	../netcache/util.c	3112;"	d	file:
MODU_KILO	../netcache/util.c	3114;"	d	file:
MODU_MEGA	../netcache/util.c	3113;"	d	file:
MODU_TERA	../netcache/util.c	3111;"	d	file:
MUTEX_DESTROY	../include/util.h	63;"	d
MUTEX_DESTROY	../include/util.h	69;"	d
MUTEX_DESTROY	../netcache/ringbuffer.c	65;"	d	file:
MUTEX_INIT	../include/util.h	62;"	d
MUTEX_INIT	../include/util.h	68;"	d
MUTEX_INIT	../netcache/ringbuffer.c	64;"	d	file:
N	../test/list_test.c	/^typedef struct N{$/;"	s	file:
NCOF_BASIC_AUTH_FROM_USER	../include/ncapi.h	206;"	d
NCOF_READABLE	../include/ncapi.h	202;"	d
NCOF_WRITABLE	../include/ncapi.h	203;"	d
NC_ALIGNED_PTR	../include/netcache_types.h	56;"	d
NC_ALIGNED_SIZE	../include/netcache_types.h	55;"	d
NC_ALIGN_SIZE	../include/netcache.h	47;"	d
NC_ALIGN_UNIT	../netcache/util.c	92;"	d	file:
NC_ALLOC_ALIGN	../netcache/util.c	93;"	d	file:
NC_API	../include/ncapi.h	515;"	d
NC_ASIO	../include/ncapi.h	512;"	d
NC_BITMAP_ALLOC	../include/block.h	27;"	d
NC_BITMAP_LEN	../include/block.h	23;"	d
NC_BLK_MINDUMP	../common/blk_io.c	120;"	d	file:
NC_BLOCK	../include/ncapi.h	509;"	d
NC_BLOCK_BIT_COUNT	../include/block.h	21;"	d
NC_BLOCK_MAP_SIZE	../include/block.h	20;"	d
NC_BLOCK_OFFSET	../include/netcache.h	871;"	d
NC_BLOCK_SIZE	../include/block.h	14;"	d
NC_BUFFER_ALIGN	../include/block.h	26;"	d
NC_BUFFER_ALIGN_BOUND	../include/block.h	24;"	d
NC_CACHE	../include/ncapi.h	511;"	d
NC_CACHE_DIR_COUNT	../include/netcache.h	46;"	d
NC_CANNED_BITMAP_SIZE	../include/netcache.h	878;"	d
NC_CANNED_BLOCKMAP_SIZE	../include/netcache.h	880;"	d
NC_CANNED_CRC_SIZE	../include/netcache.h	879;"	d
NC_CANNED_LPMAP_SIZE	../include/netcache.h	881;"	d
NC_CANNED_VLPMAP_SIZE	../include/netcache.h	883;"	d
NC_CANNED_VLPMAP_SIZE_R	../include/netcache.h	884;"	d
NC_CLUSTER	../include/ncapi.h	517;"	d
NC_CT_ORIGIN	../include/cfs_driver.h	251;"	d
NC_CT_PARENT	../include/cfs_driver.h	252;"	d
NC_DAEMON	../include/ncapi.h	514;"	d
NC_DEBUG	../include/ncapi.h	502;"	d
NC_DEBUG_BUILD	../include/netcache_config.h	106;"	d
NC_DEBUG_LIST	../include/netcache_config.h	86;"	d
NC_DEBUG_LIST	../include/netcache_config.h	88;"	d
NC_DEFAULT_BITMAP_LEN	../include/block.h	22;"	d
NC_ENABLE_MDB_WAIT	../include/netcache_config.h	47;"	d
NC_ERROR	../include/ncapi.h	506;"	d
NC_FRESH	../include/ncapi.h	/^	NC_FRESH 			= 0, 			\/* 아직 사용가능한 상태 *\/$/;"	e	enum:__anon41
NC_GLOBAL_ASIO_TIMER	../include/ncapi.h	328;"	d
NC_GLOBAL_BACKUP_PROPERTYCACHE	../include/ncapi.h	333;"	d
NC_GLOBAL_BLOCK_SPIN_INTERVAL	../include/ncapi.h	341;"	d
NC_GLOBAL_CACHE_BLOCK_SIZE	../include/ncapi.h	324;"	d
NC_GLOBAL_CACHE_DISK_HIGH_WM	../include/ncapi.h	321;"	d
NC_GLOBAL_CACHE_DISK_LOW_WM	../include/ncapi.h	322;"	d
NC_GLOBAL_CACHE_DISK_RA	../include/ncapi.h	315;"	d
NC_GLOBAL_CACHE_MAX_ASIO	../include/ncapi.h	314;"	d
NC_GLOBAL_CACHE_MAX_EXTENT	../include/ncapi.h	359;"	d
NC_GLOBAL_CACHE_MAX_INODE	../include/ncapi.h	312;"	d
NC_GLOBAL_CACHE_MEM_SIZE	../include/ncapi.h	313;"	d
NC_GLOBAL_CACHE_NEGATIVE_TTL	../include/ncapi.h	320;"	d
NC_GLOBAL_CACHE_NETWORK_RA	../include/ncapi.h	316;"	d
NC_GLOBAL_CACHE_PATH	../include/ncapi.h	311;"	d
NC_GLOBAL_CACHE_POSITIVE_TTL	../include/ncapi.h	319;"	d
NC_GLOBAL_CACHE_RA_MAXTHREADS	../include/ncapi.h	317;"	d
NC_GLOBAL_CACHE_RA_MINTHREADS	../include/ncapi.h	318;"	d
NC_GLOBAL_CLUSTER_IP	../include/ncapi.h	329;"	d
NC_GLOBAL_CLUSTER_TTL	../include/ncapi.h	331;"	d
NC_GLOBAL_COLD_RATIO	../include/ncapi.h	336;"	d
NC_GLOBAL_DEFAULT_GROUP	../include/ncapi.h	326;"	d
NC_GLOBAL_DEFAULT_USER	../include/ncapi.h	325;"	d
NC_GLOBAL_ENABLE_COLD_CACHING	../include/ncapi.h	335;"	d
NC_GLOBAL_ENABLE_COMPACTION	../include/ncapi.h	323;"	d
NC_GLOBAL_ENABLE_FASTCRC	../include/ncapi.h	354;"	d
NC_GLOBAL_ENABLE_FORCECLOSE	../include/ncapi.h	363;"	d
NC_GLOBAL_FALSE_READ_LIMIT	../include/ncapi.h	372;"	d
NC_GLOBAL_INODE_MEMSIZE	../include/ncapi.h	370;"	d
NC_GLOBAL_LOCAL_IP	../include/ncapi.h	330;"	d
NC_GLOBAL_MAX_PATHLOCK	../include/ncapi.h	338;"	d
NC_GLOBAL_MAX_STATCACHE	../include/ncapi.h	337;"	d
NC_GLOBAL_READAHEAD_MB	../include/ncapi.h	369;"	d
NC_GLOBAL_STAT_BACKUP	../include/ncapi.h	364;"	d
NC_GLOBAL_STRICT_CRC	../include/ncapi.h	327;"	d
NC_HEADER_FLAG_COMPRESSED	../include/netcache.h	749;"	d
NC_INFO	../include/ncapi.h	504;"	d
NC_INODE	../include/ncapi.h	508;"	d
NC_INODE_ID	../include/netcache.h	1388;"	d
NC_IOCTL_ADAPTIVE_READAHEAD	../include/ncapi.h	398;"	d
NC_IOCTL_BASE	../include/ncapi.h	496;"	d
NC_IOCTL_CACHE_MONITOR	../include/ncapi.h	403;"	d
NC_IOCTL_CACHE_VALIDATOR	../include/ncapi.h	405;"	d
NC_IOCTL_CONNECT_TIMEOUT	../include/ncapi.h	440;"	d
NC_IOCTL_FOLLOW_REDIRECTION	../include/ncapi.h	407;"	d
NC_IOCTL_FRESHNESS_CHECK	../include/ncapi.h	399;"	d
NC_IOCTL_HTTPS_CAINFO	../include/ncapi.h	452;"	d
NC_IOCTL_HTTPS_CAPATH	../include/ncapi.h	453;"	d
NC_IOCTL_HTTPS_CERT	../include/ncapi.h	447;"	d
NC_IOCTL_HTTPS_CERT_TYPE	../include/ncapi.h	448;"	d
NC_IOCTL_HTTPS_CRLFILE	../include/ncapi.h	451;"	d
NC_IOCTL_HTTPS_FALSESTART	../include/ncapi.h	454;"	d
NC_IOCTL_HTTPS_SECURE	../include/ncapi.h	446;"	d
NC_IOCTL_HTTPS_SSLKEY	../include/ncapi.h	449;"	d
NC_IOCTL_HTTPS_SSLKEY_TYPE	../include/ncapi.h	450;"	d
NC_IOCTL_HTTPS_TLSVERSION	../include/ncapi.h	455;"	d
NC_IOCTL_HTTP_FILTER	../include/ncapi.h	401;"	d
NC_IOCTL_LOCAL_CHARSET	../include/ncapi.h	381;"	d
NC_IOCTL_MAX	../include/ncapi.h	495;"	d
NC_IOCTL_NEGATIVE_TTL	../include/ncapi.h	395;"	d
NC_IOCTL_ORIGIN_MONITOR	../include/ncapi.h	406;"	d
NC_IOCTL_ORIGIN_MONITOR2	../include/ncapi.h	488;"	d
NC_IOCTL_ORIGIN_MONITOR_CBD	../include/ncapi.h	408;"	d
NC_IOCTL_ORIGIN_MONITOR_CBD	../include/ncapi.h	409;"	d
NC_IOCTL_POSITIVE_TTL	../include/ncapi.h	396;"	d
NC_IOCTL_PRESERVE_CASE	../include/ncapi.h	379;"	d
NC_IOCTL_PROXY	../include/ncapi.h	404;"	d
NC_IOCTL_SET_DEFAULT_READ_SIZE	../include/ncapi.h	473;"	d
NC_IOCTL_SET_DNS_CACHE_TIMEOUT	../include/ncapi.h	477;"	d
NC_IOCTL_SET_IO_VALIDATOR	../include/ncapi.h	412;"	d
NC_IOCTL_SET_LAZY_PROPERTY_UPDATE	../include/ncapi.h	417;"	d
NC_IOCTL_SET_LB_FAIL_COUNT_TO_OFFLINE	../include/ncapi.h	467;"	d
NC_IOCTL_SET_LB_ORIGIN_POLICY	../include/ncapi.h	430;"	d
NC_IOCTL_SET_LB_PARENT_POLICY	../include/ncapi.h	431;"	d
NC_IOCTL_SET_LB_POLICY	../include/ncapi.h	429;"	d
NC_IOCTL_SET_MAKE_REDIR_ABSOLUTE	../include/ncapi.h	424;"	d
NC_IOCTL_SET_NCREAD_TIMEOUT	../include/ncapi.h	485;"	d
NC_IOCTL_SET_OFFLINE_POLICY_DATA	../include/ncapi.h	462;"	d
NC_IOCTL_SET_OFFLINE_POLICY_FUNCTION	../include/ncapi.h	461;"	d
NC_IOCTL_SET_ORIGIN_PATH_CHANGE_CALLBACK	../include/ncapi.h	423;"	d
NC_IOCTL_SET_ORIGIN_PHASE_REQ_CBDATA	../include/ncapi.h	418;"	d
NC_IOCTL_SET_ORIGIN_PHASE_REQ_HANDLER	../include/ncapi.h	413;"	d
NC_IOCTL_SET_ORIGIN_PHASE_RES_CBDATA	../include/ncapi.h	419;"	d
NC_IOCTL_SET_ORIGIN_PHASE_RES_HANDLER	../include/ncapi.h	415;"	d
NC_IOCTL_SET_PROBING_URL	../include/ncapi.h	493;"	d
NC_IOCTL_SET_VALIDATOR	../include/ncapi.h	402;"	d
NC_IOCTL_STORAGE_CHARSET	../include/ncapi.h	380;"	d
NC_IOCTL_STORAGE_PROBE_COUNT	../include/ncapi.h	388;"	d
NC_IOCTL_STORAGE_PROBE_INTERVAL	../include/ncapi.h	385;"	d
NC_IOCTL_STORAGE_RETRY	../include/ncapi.h	391;"	d
NC_IOCTL_STORAGE_TIMEOUT	../include/ncapi.h	382;"	d
NC_IOCTL_TRANSFER_TIMEOUT	../include/ncapi.h	441;"	d
NC_IOCTL_UPDATE_ORIGIN	../include/ncapi.h	411;"	d
NC_IOCTL_UPDATE_PARENT	../include/ncapi.h	434;"	d
NC_IOCTL_USE_HEAD_FOR_ATTR	../include/ncapi.h	410;"	d
NC_IOCTL_WEBDAV_ALWAYS_LOWER	../include/ncapi.h	393;"	d
NC_IOCTL_WEBDAV_USE_PROPPATCH	../include/ncapi.h	392;"	d
NC_IOCTL_WRITEBACK_BLOCKS	../include/ncapi.h	390;"	d
NC_JOB	../include/ncapi.h	516;"	d
NC_LAZY_BLOCK_CACHE	../include/netcache_config.h	36;"	d
NC_LBP_POLICY_HASH	../include/ncapi.h	221;"	d
NC_LBP_POLICY_PS	../include/ncapi.h	220;"	d
NC_LBP_POLICY_RR	../include/ncapi.h	219;"	d
NC_LOCK_CLEAN	../include/util.h	23;"	d
NC_LOCK_INITIALIZER	../include/util.h	214;"	d
NC_LOCK_INITIALIZER	../include/util.h	216;"	d
NC_LOCK_RAW	../include/util.h	18;"	d
NC_LOCK_REMOVE_INFO	../include/util.h	24;"	d
NC_MAGIC	../include/netcache.h	732;"	d
NC_MAGIC_KEY	../include/cfs_driver.h	271;"	d
NC_MAGIC_V20	../include/netcache.h	733;"	d
NC_MAGIC_V21	../include/netcache.h	734;"	d
NC_MAGIC_V22	../include/netcache.h	735;"	d
NC_MAGIC_V23	../include/netcache.h	736;"	d
NC_MAGIC_V24	../include/netcache.h	737;"	d
NC_MAGIC_V25	../include/netcache.h	738;"	d
NC_MAGIC_V26	../include/netcache.h	739;"	d
NC_MAGIC_V30	../include/netcache.h	740;"	d
NC_MAXPATHLEN	../include/netcache_types.h	50;"	d
NC_MAXPATHLEN_V20	../include/netcache_types.h	47;"	d
NC_MAXPATHLEN_V21	../include/netcache_types.h	48;"	d
NC_MAXPATHLEN_V24	../include/netcache_types.h	49;"	d
NC_MAX_DIR	../util/nc_checkfs.c	747;"	d	file:
NC_MAX_FILE_SIZE	../include/netcache_types.h	52;"	d
NC_MAX_PBLOCKNO	../include/block.h	316;"	d
NC_MAX_STRINGLEN	../include/ncapi.h	201;"	d
NC_MAX_VECTORIO	../include/asio.h	13;"	d
NC_MEM_DEBUG	../include/netcache_config.h	123;"	d
NC_MEM_DEBUG	../include/netcache_config.h	129;"	d
NC_MEM_DEBUG	../include/netcache_config.h	135;"	d
NC_MEM_PADDING	../netcache/util.c	39;"	d	file:
NC_MIN_HEADER_SIZE_V30	../netcache/diskcache.c	144;"	d	file:
NC_NODESCAN_THRESHOLD	../include/netcache.h	32;"	d
NC_OCC_OPERATION	../include/netcache_types.h	/^	NC_OCC_OPERATION 		= 0,$/;"	e	enum:__anon66
NC_OCC_READ_DATA	../include/netcache_types.h	/^	NC_OCC_READ_DATA		= 2$/;"	e	enum:__anon66
NC_OCC_READ_FUNCTION	../include/netcache_types.h	/^	NC_OCC_READ_FUNCTION	= 1, $/;"	e	enum:__anon66
NC_OLD_MAXCPATHLEN	../util/nc_convert.c	4;"	d	file:
NC_ORG_BLOCK_OFFSET	../include/netcache.h	873;"	d
NC_ORG_OFFSET_BLOCK	../include/netcache.h	874;"	d
NC_ORIGIN_PHASE_REQUEST	../include/ncapi.h	187;"	d
NC_ORIGIN_PHASE_RESPONSE	../include/ncapi.h	188;"	d
NC_OS_BYPASS	../include/ncapi.h	/^	NC_OS_BYPASS     		= 14  \/* ir #25994 : 추가, nocache또는 private인 경우 향후 private인 경우 제외해야함 *\/$/;"	e	enum:__anon40
NC_OS_HIT	../include/ncapi.h	/^	NC_OS_HIT 			= 2,  \/* 객체가 캐싱되어 있지 않음 *\/$/;"	e	enum:__anon40
NC_OS_MISS	../include/ncapi.h	/^	NC_OS_MISS 			= 1,  \/* 객체가 캐싱되어 있지 않음 *\/$/;"	e	enum:__anon40
NC_OS_NC_HIT	../include/ncapi.h	/^	NC_OS_NC_HIT 			= 4,  \/* 객체가 캐싱되어 있지 않음 *\/$/;"	e	enum:__anon40
NC_OS_NC_MISS	../include/ncapi.h	/^	NC_OS_NC_MISS 			= 3,  \/* 객체가 캐싱되어 있지 않음 *\/$/;"	e	enum:__anon40
NC_OS_NOTFOUND	../include/ncapi.h	/^	NC_OS_NOTFOUND 			= 12, \/* 원본 장애라서 캐싱된 객체 정보 전달 *\/$/;"	e	enum:__anon40
NC_OS_OFF_HIT	../include/ncapi.h	/^	NC_OS_OFF_HIT 			= 7, \/* 원본 장애라서 캐싱된 객체 정보 전달 *\/$/;"	e	enum:__anon40
NC_OS_PROPERTY_HIT	../include/ncapi.h	/^	NC_OS_PROPERTY_HIT		= 8, \/* 객체 에러(notfound등)가 계속 유효함 *\/$/;"	e	enum:__anon40
NC_OS_PROPERTY_MISS	../include/ncapi.h	/^	NC_OS_PROPERTY_MISS		= 9, \/* 객체 에러이지만 캐싱되지 않은 상태일 때 *\/$/;"	e	enum:__anon40
NC_OS_PROPERTY_OFF_HIT	../include/ncapi.h	/^	NC_OS_PROPERTY_OFF_HIT		= 11, \/* 객체 에러가 캐싱되어있으며 원본이 다운된 상태 *\/$/;"	e	enum:__anon40
NC_OS_PROPERTY_REFRESH_HIT	../include/ncapi.h	/^	NC_OS_PROPERTY_REFRESH_HIT	= 10, \/* 객체 에러가 캐싱되어있으며 유효기간 지나서 다시 체크했더니 동일 *\/$/;"	e	enum:__anon40
NC_OS_PROPERTY_REFRESH_MISS	../include/ncapi.h	/^	NC_OS_PROPERTY_REFRESH_MISS     = 13, \/* 캐시를 사용하지않고 원본 조회 *\/$/;"	e	enum:__anon40
NC_OS_REFRESH_HIT	../include/ncapi.h	/^	NC_OS_REFRESH_HIT 		= 5, \/* 원본 객체가 nocache 요청임 *\/$/;"	e	enum:__anon40
NC_OS_REFRESH_MISS	../include/ncapi.h	/^	NC_OS_REFRESH_MISS 		= 6, \/* 원본 객체가 nocache 요청임 *\/$/;"	e	enum:__anon40
NC_OS_UNDEFINED	../include/ncapi.h	/^	NC_OS_UNDEFINED 		= 0,  \/* 객체가 캐싱되어 있지 않음 *\/$/;"	e	enum:__anon40
NC_PAGE_SIZE	../include/netcache.h	45;"	d
NC_PASS_BLOCK_WQ	../include/netcache_config.h	35;"	d
NC_PERF	../include/ncapi.h	513;"	d
NC_PLUGIN	../include/ncapi.h	510;"	d
NC_PTHREAD_MUTEX_RECURSIVE	../include/lru.h	10;"	d
NC_PTHREAD_MUTEX_RECURSIVE	../include/lru.h	9;"	d
NC_READAHEAD_BLOCKS	../include/netcache.h	50;"	d
NC_REFRESH_FRESH	../include/ncapi.h	/^	NC_REFRESH_FRESH 	= 1, 			\/* 유효기간 지나서 체크해본 결과 사용가능한 상태*\/$/;"	e	enum:__anon41
NC_RELEASE_BUILD	../include/netcache_config.h	101;"	d
NC_RELEASE_BUILD	../include/netcache_config.h	105;"	d
NC_RWLOCK_RDLOCK_RAW	../include/util.h	20;"	d
NC_RWLOCK_UNLOCK_RAW	../include/util.h	21;"	d
NC_RWLOCK_WRLOCK_RAW	../include/util.h	22;"	d
NC_SIZE2BLOCK	../include/netcache.h	875;"	d
NC_STALE_BY_ALWAYS	../include/ncapi.h	/^	NC_STALE_BY_ALWAYS  = 7,$/;"	e	enum:__anon41
NC_STALE_BY_ETAG	../include/ncapi.h	/^	NC_STALE_BY_ETAG 	= 2, 			\/* 캐싱의 ETAG값이 상이하여 STALE처리 됨*\/$/;"	e	enum:__anon41
NC_STALE_BY_MTIME	../include/ncapi.h	/^	NC_STALE_BY_MTIME 	= 3, 			\/* 객체 변경시간이 상이하여 STALE처리 됨 *\/$/;"	e	enum:__anon41
NC_STALE_BY_OFFLINE	../include/ncapi.h	/^	NC_STALE_BY_OFFLINE = 5, 			\/* 여타 다른 이유로 STALE처리됨 *\/$/;"	e	enum:__anon41
NC_STALE_BY_ORIGIN_OTHER	../include/ncapi.h	/^	NC_STALE_BY_ORIGIN_OTHER  = 8,$/;"	e	enum:__anon41
NC_STALE_BY_OTHER	../include/ncapi.h	/^	NC_STALE_BY_OTHER 	= 4, 			\/* 여타 다른 이유로 STALE처리됨 *\/$/;"	e	enum:__anon41
NC_STALE_BY_SIZE	../include/ncapi.h	/^	NC_STALE_BY_SIZE  	= 6,$/;"	e	enum:__anon41
NC_STAT	../include/ncapi.h	518;"	d
NC_TRACE	../include/ncapi.h	503;"	d
NC_TRIGGER	../include/ncapi.h	507;"	d
NC_UNLOCK_RAW	../include/util.h	19;"	d
NC_VALIDATION_CODENEXT	../include/ncapi.h	/^	NC_VALIDATION_CODENEXT  = 9,$/;"	e	enum:__anon41
NC_VALID_BLOCK	../include/netcache.h	1377;"	d
NC_VALID_INODE	../include/netcache.h	1378;"	d
NC_VALID_INODE_2	../include/netcache.h	1382;"	d
NC_VALID_INODE_FD	../include/netcache.h	1380;"	d
NC_VALID_OFFSET	../include/block.h	19;"	d
NC_VISIBLE_MAXPATHLEN	../include/netcache_types.h	51;"	d
NC_VNONE	../include/ncapi.h	/^	NC_VNONE				= 10$/;"	e	enum:__anon41
NC_VOLUME_LOCK	../include/netcache_config.h	91;"	d
NC_VSTRING_SIZE	../include/netcache.h	747;"	d
NC_VSTRING_SIZE	../test/vstr_test.c	13;"	d	file:
NC_WARN	../include/ncapi.h	505;"	d
NEEDSTOP	../netcache/threadpool.c	145;"	d	file:
NEEDSTOP	../netcache/threadpool.c	215;"	d	file:
NODE_CONTAINS	../include/netcache_types.h	167;"	d
NODE_MAGIC	../include/util.h	270;"	d
NO_TX	../netcache/mdb.c	292;"	d	file:
NR_MAX_EVENTS	../netcache/disk_io_ops.c	942;"	d	file:
NULL_BLKNO	../include/block.h	131;"	d
NULL_PBLKNO	../include/block.h	132;"	d
N_THREADS	../test/driver_test.c	714;"	d	file:
OFFSET_LESS_THAN_LEN	../common/blk_io.c	58;"	d	file:
ONEDAY	../netcache/util.c	1233;"	d	file:
ONEHOUR	../netcache/util.c	1232;"	d	file:
ONEMIN	../netcache/util.c	1231;"	d	file:
OT_CALLBACK	../include/netcache_types.h	/^	OT_CALLBACK	= 1,$/;"	e	enum:__anon61
OT_EVENT	../include/netcache_types.h	/^	OT_EVENT 	= 2$/;"	e	enum:__anon61
O_DIRECT	../include/netcache_types.h	30;"	d
O_NCX_DONTCHECK_ORIGIN	../include/ncapi.h	161;"	d
O_NCX_MUST_EXPIRE	../include/ncapi.h	172;"	d
O_NCX_MUST_REVAL	../include/ncapi.h	170;"	d
O_NCX_NOCACHE	../include/ncapi.h	165;"	d
O_NCX_NORANDOM	../include/ncapi.h	162;"	d
O_NCX_PRIVATE	../include/ncapi.h	160;"	d
O_NCX_REFRESH_STAT	../include/ncapi.h	163;"	d
O_NCX_TRY_NORANDOM	../include/ncapi.h	178;"	d
PADDING	../netcache/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PATHLOCK_OWNED	../netcache/volumeops.c	79;"	d	file:
PL	../include/netcache.h	/^	nc_path_lock_t					*PL;$/;"	m	struct:tag_fc_inode_info
PLATFORM_32BIT	../include/netcache_types.h	15;"	d
PLATFORM_32BIT	../include/netcache_types.h	19;"	d
PLATFORM_64BIT	../include/netcache_types.h	16;"	d
PLATFORM_64BIT	../include/netcache_types.h	18;"	d
PLS_RESOURCE_IDLE	../include/cfs_driver.h	/^	PLS_RESOURCE_IDLE = 0,$/;"	e	enum:__anon28
PLS_RESOURCE_INPROGRESS	../include/cfs_driver.h	/^        PLS_RESOURCE_INPROGRESS=1$/;"	e	enum:__anon28
PL_MAGIC	../netcache/volumeops.c	76;"	d	file:
PL_tbl	../include/cfs_driver.h	/^	u_hash_table_t 					*PL_tbl;$/;"	m	struct:nc_volume_context
PM_CHECK_HIGH	../include/netcache.h	91;"	d
PM_CHECK_LOW	../include/netcache.h	90;"	d
PM_MAX_PLC_SIZE	../netcache/part_mgr.c	45;"	d	file:
POLYNOMIAL	../netcache/util.c	1100;"	d	file:
PROFILE_CHECK	../include/rdtsc.h	38;"	d
PROFILE_CHECK	../include/rdtsc.h	52;"	d
PROFILE_GAP_MSEC	../include/rdtsc.h	42;"	d
PROFILE_GAP_SEC	../include/rdtsc.h	43;"	d
PROFILE_GAP_USEC	../include/rdtsc.h	41;"	d
PROFILE_GAP_USEC	../include/rdtsc.h	51;"	d
PROFILE_INIT	../include/rdtsc.h	39;"	d
PROFILE_INIT	../include/rdtsc.h	49;"	d
PROFILE_NULL	../include/rdtsc.h	40;"	d
PROFILE_NULL	../include/rdtsc.h	50;"	d
PS_ROK	../include/netcache.h	238;"	d
PS_WOK	../include/netcache.h	239;"	d
PUBLIC_IF	../include/ncapi.h	531;"	d
PUBLIC_IF	../include/ncapi.h	533;"	d
PUBLIC_IF	../include/ncapi.h	539;"	d
PUBLIC_IF	../include/netcache_config.h	144;"	d
PUBLIC_IF	../include/netcache_config.h	146;"	d
PUBLIC_IF	../include/netcache_config.h	152;"	d
PURE	../include/util.h	134;"	d
Polynomial	../netcache/crc32.c	/^const uint32_t Polynomial = 0xEDB88320;$/;"	v
RBF_EOD	../include/ringbuffer.h	15;"	d
RBF_EOT	../include/ringbuffer.h	14;"	d
RBF_READER_BROKEN	../include/ringbuffer.h	16;"	d
RBF_WRITER_BROKEN	../include/ringbuffer.h	17;"	d
RB_TRANSACTION	../include/ringbuffer.h	7;"	d
RB_UNLOCK	../include/ringbuffer.h	8;"	d
RD	../test/rb_test.c	/^long long		RD = 0;$/;"	v
READ_LOCK_BLOCK	../include/lock.h	30;"	d
READ_LOCK_RELEASE	../include/lock.h	38;"	d
RECL_INTERVAL	../netcache/mdb.c	110;"	d	file:
RECL_INTERVAL	../netcache/mdb.c	112;"	d	file:
RELEASE_LIST	../include/util.h	275;"	d
REMIND	../include/util.h	9;"	d
RESET_NODE	../include/util.h	281;"	d
RESET_RI	../common/blk_io.c	1318;"	d	file:
RESET_RI	../common/blk_io.c	1327;"	d	file:
RIOT_BUFFER	../include/ringbuffer.h	21;"	d
RIOT_DATA	../include/ringbuffer.h	22;"	d
ROTATE_LEFT	../netcache/md5.c	122;"	d	file:
RWLOCK_CHECK_MAGIC	../netcache/mdb.c	335;"	d	file:
RWLOCK_MAGIC	../netcache/mdb.c	334;"	d	file:
S11	../netcache/md5.c	250;"	d	file:
S12	../netcache/md5.c	251;"	d	file:
S13	../netcache/md5.c	252;"	d	file:
S14	../netcache/md5.c	253;"	d	file:
S21	../netcache/md5.c	272;"	d	file:
S22	../netcache/md5.c	273;"	d	file:
S23	../netcache/md5.c	274;"	d	file:
S24	../netcache/md5.c	275;"	d	file:
S31	../netcache/md5.c	294;"	d	file:
S32	../netcache/md5.c	295;"	d	file:
S33	../netcache/md5.c	296;"	d	file:
S34	../netcache/md5.c	297;"	d	file:
S41	../netcache/md5.c	316;"	d	file:
S42	../netcache/md5.c	317;"	d	file:
S43	../netcache/md5.c	318;"	d	file:
S44	../netcache/md5.c	319;"	d	file:
SBFS_FLUSH	../netcache/cfs_apix.c	248;"	d	file:
SBFS_GETATTR	../netcache/cfs_apix.c	240;"	d	file:
SBFS_MKNOD	../netcache/cfs_apix.c	244;"	d	file:
SBFS_READDIR	../netcache/cfs_apix.c	242;"	d	file:
SBFS_STAT_CLOSE	../netcache/cfs_apix.c	232;"	d	file:
SBFS_STAT_CLOSERT	../netcache/cfs_apix.c	234;"	d	file:
SBFS_STAT_COUNT	../netcache/cfs_apix.c	251;"	d	file:
SBFS_STAT_OPEN	../netcache/cfs_apix.c	224;"	d	file:
SBFS_STAT_OPENRT	../netcache/cfs_apix.c	226;"	d	file:
SBFS_STAT_READ	../netcache/cfs_apix.c	228;"	d	file:
SBFS_STAT_READRT	../netcache/cfs_apix.c	236;"	d	file:
SBFS_STAT_STAT	../netcache/cfs_apix.c	238;"	d	file:
SBFS_STAT_WRITE	../netcache/cfs_apix.c	230;"	d	file:
SBFS_WRITE	../netcache/cfs_apix.c	246;"	d	file:
SET_CALLER	../netcache/heaptrack.c	44;"	d	file:
SET_IF_DESIRED	../netcache/util.c	79;"	d	file:
SET_NODE	../include/util.h	283;"	d
SET_NODE	../test/sorteddll.c	4;"	d	file:
SHARED_TX	../netcache/mdb.c	293;"	d	file:
SNPRINTF_OVERFLOW	../include/util.h	50;"	d
SNPRINTF_WRAP	../include/util.h	51;"	d
STATT_ABS	../include/util.h	371;"	d
STATT_REL	../include/util.h	372;"	d
SYMBOL	../netcache/heaptrack.c	/^SYMBOL(const void *nodep, VISIT val, int lev)$/;"	f	file:
StackWalk	../netcache/backtrace.c	34;"	d	file:
T	../netcache/heaptrack.c	/^	node_t		*T;$/;"	m	struct:__anon6	file:
TAILQ_CONCAT	../netcache/bt_timer.c	39;"	d	file:
TEST_BLOCKS	../netcache/md5.c	395;"	d	file:
TEST_BLOCK_SIZE	../netcache/md5.c	392;"	d	file:
TEST_BYTES	../netcache/md5.c	/^static long TEST_BYTES = (long)TEST_BLOCK_SIZE * (long)TEST_BLOCKS;$/;"	v	file:
TFILE_1G_CNT	../test/driver_test.c	241;"	d	file:
TFILE_CNT	../test/driver_test.c	240;"	d	file:
TIMEOUT_ABS	../netcache/bt_timer.c	53;"	d	file:
TIMEOUT_C	../netcache/bt_timer.c	58;"	d	file:
TIMEOUT_INS	../netcache/bt_timer.c	52;"	d	file:
TIMER_INITIALIZER	../include/wb_timer.h	80;"	d
TIMER_MAGIC	../include/wb_timer.h	77;"	d
TOPBIT	../netcache/util.c	1099;"	d	file:
TO_SET_TIMEOUTS	../netcache/bt_timer.c	48;"	d	file:
TP_MAGIC_BARRIER	../netcache/threadpool.c	31;"	d	file:
TRACE	../include/ncapi.h	785;"	d
TRACE	../include/trace.h	109;"	d
TRACE_N	../include/ncapi.h	787;"	d
TRACE_N	../include/trace.h	110;"	d
TRACE_NF	../include/ncapi.h	788;"	d
TRACE_NF	../include/trace.h	111;"	d
TRACE_ON	../include/ncapi.h	783;"	d
TRACE_ON	../include/trace.h	106;"	d
TRACE_X	../include/ncapi.h	789;"	d
TRACE_X	../include/trace.h	112;"	d
TRAP	../include/util.h	459;"	d
TRAP	../test/driver_test.c	17;"	d	file:
TRAP	../test/driver_test.c	19;"	d	file:
TRAP	../test/test_path.c	18;"	d	file:
TRAP	../test/test_path.c	20;"	d	file:
TRC_BEGIN	../include/ncapi.h	774;"	d
TRC_BEGIN	../include/trace.h	91;"	d
TRC_BEGINX	../include/trace.h	95;"	d
TRC_DEPTH	../include/trace.h	114;"	d
TRC_END	../include/ncapi.h	778;"	d
TRC_END	../include/trace.h	100;"	d
TRC_END	../include/trace.h	102;"	d
TRC_ENDX	../include/trace.h	108;"	d
TRC_HEX	../include/trace.h	116;"	d
TRC_LOG_HANDLE	../include/trace.h	119;"	d
TRC_MASK	../include/trace.h	115;"	d
TRC_REDIRECT	../include/trace.h	117;"	d
TRC_REDIRECT_FILE	../include/trace.h	118;"	d
TVN_BITS	../netcache/wb_timer.c	59;"	d	file:
TVN_MASK	../netcache/wb_timer.c	64;"	d	file:
TVN_SIZE	../netcache/wb_timer.c	62;"	d	file:
TVR_BITS	../netcache/wb_timer.c	60;"	d	file:
TVR_MASK	../netcache/wb_timer.c	65;"	d	file:
TVR_SIZE	../netcache/wb_timer.c	63;"	d	file:
TW_TIMEOUT_MAX	../netcache/bt_timer.c	71;"	d	file:
T_API	../include/trace.h	28;"	d
T_API_CLOSE	../include/trace.h	35;"	d
T_API_GETATTR	../include/trace.h	38;"	d
T_API_OPEN	../include/trace.h	32;"	d
T_API_PURGE	../include/trace.h	37;"	d
T_API_READ	../include/trace.h	33;"	d
T_API_VOLUME	../include/trace.h	36;"	d
T_API_WRITE	../include/trace.h	34;"	d
T_ASIO	../include/trace.h	25;"	d
T_BLOCK	../include/trace.h	22;"	d
T_CACHE	../include/trace.h	24;"	d
T_CLUSTER	../include/trace.h	30;"	d
T_DAEMON	../include/ncapi.h	766;"	d
T_DAEMON	../include/trace.h	27;"	d
T_DAV	../include/trace.h	23;"	d
T_DEBUG	../include/ncapi.h	759;"	d
T_DEBUG	../include/trace.h	15;"	d
T_ERROR	../include/ncapi.h	763;"	d
T_ERROR	../include/trace.h	19;"	d
T_INFO	../include/ncapi.h	761;"	d
T_INFO	../include/trace.h	17;"	d
T_INODE	../include/trace.h	21;"	d
T_MONITOR	../include/trace.h	29;"	d
T_PERF	../include/ncapi.h	765;"	d
T_PERF	../include/trace.h	26;"	d
T_PLUGIN	../include/trace.h	40;"	d
T_STAT	../include/ncapi.h	767;"	d
T_STAT	../include/trace.h	31;"	d
T_TRACE	../include/ncapi.h	760;"	d
T_TRACE	../include/trace.h	16;"	d
T_TRIGGER	../include/ncapi.h	764;"	d
T_TRIGGER	../include/trace.h	20;"	d
T_WARN	../include/ncapi.h	762;"	d
T_WARN	../include/trace.h	18;"	d
Transform	../netcache/md5.c	/^static void Transform (buf, in)$/;"	f	file:
UINT4	../include/md5.h	/^typedef unsigned long int UINT4;$/;"	t
UNLIMIT_MAX_INODES	../include/netcache_config.h	52;"	d
USE_MEMMGR	../netcache/kv.c	50;"	d	file:
USE_RWLOCK	../include/cfs_driver.h	71;"	d
USE_SYSLOG	../include/trace.h	6;"	d
UUID_B_LEN	../include/win_uuidwrap.h	7;"	d
UUID_S_LEN	../include/win_uuidwrap.h	6;"	d
U_FALSE	../include/hash.h	/^	U_FALSE=0$/;"	e	enum:__anon34
U_FALSE	../netcache/ringbuffer.c	59;"	d	file:
U_TRUE	../include/hash.h	/^	U_TRUE=1,$/;"	e	enum:__anon34
U_TRUE	../netcache/ringbuffer.c	58;"	d	file:
UnlockNotification	../netcache/mdb.c	/^struct UnlockNotification {$/;"	s	file:
UnlockNotification	../netcache/mdb.c	/^typedef struct UnlockNotification UnlockNotification;$/;"	t	typeref:struct:UnlockNotification	file:
VALID_LIST	../include/util.h	299;"	d
VOLUME_IDLE	../include/cfs_driver.h	187;"	d
VOLUME_INUSE	../include/cfs_driver.h	186;"	d
VOLUME_OP_BEGIN	../netcache/cfs_apix.c	254;"	d	file:
VOLUME_OP_END	../netcache/cfs_apix.c	275;"	d	file:
VOLUME_REF	../include/cfs_driver.h	173;"	d
VOLUME_REF	../include/cfs_driver.h	176;"	d
VOLUME_RETURN_ERROR	../netcache/cfs_apix.c	270;"	d	file:
VOLUME_UNREF	../include/cfs_driver.h	174;"	d
VOLUME_UNREF	../include/cfs_driver.h	180;"	d
VOLUME_VERSION_NULL	../include/netcache.h	65;"	d
VOL_FC_ALWAYSEXPIRE	../include/cfs_driver.h	29;"	d
VOL_FC_DEVID	../include/cfs_driver.h	28;"	d
VOL_FC_MTIME	../include/cfs_driver.h	26;"	d
VOL_FC_PROLOG	../include/cfs_driver.h	25;"	d
VOL_FC_SIZE	../include/cfs_driver.h	27;"	d
VPM_FILE	../include/netcache.h	42;"	d
VPM_MDB	../include/netcache.h	43;"	d
WAIT_TIME_SLICE_MSEC	../netcache/util.c	219;"	d	file:
WHEEL_BIT	../netcache/bt_timer.c	56;"	d	file:
WHEEL_C	../netcache/bt_timer.c	59;"	d	file:
WHEEL_LEN	../netcache/bt_timer.c	68;"	d	file:
WHEEL_MASK	../netcache/bt_timer.c	70;"	d	file:
WHEEL_MAX	../netcache/bt_timer.c	69;"	d	file:
WHEEL_NUM	../netcache/bt_timer.c	57;"	d	file:
WHEEL_PRIu	../netcache/bt_timer.c	60;"	d	file:
WHEEL_PRIx	../netcache/bt_timer.c	61;"	d	file:
WIDTH	../netcache/util.c	1098;"	d	file:
WR	../test/rb_test.c	/^long long		WR = 0;$/;"	v
WRITE_LOCK_BLOCK	../include/lock.h	34;"	d
WRITE_LOCK_RELEASE	../include/lock.h	37;"	d
XCALLOC	../include/util.h	98;"	d
XFREE	../include/util.h	100;"	d
XFREE	../netcache/ringbuffer.c	57;"	d	file:
XFREE_CHECK	../include/util.h	101;"	d
XMALLOC	../include/util.h	97;"	d
XMALLOC	../netcache/ringbuffer.c	56;"	d	file:
XMALLOC_FL	../include/util.h	94;"	d
XREALLOC	../include/util.h	99;"	d
XREALLOC_FL	../include/util.h	95;"	d
XSTRDUP	../include/util.h	102;"	d
XSTRDUP_FL	../include/util.h	103;"	d
XSTRNDUP	../include/util.h	104;"	d
XVERIFY	../include/util.h	108;"	d
ZERO_BLKNO	../include/block.h	133;"	d
_ASM_GENERIC_BITOPS_NON_ATOMIC_H_	../include/non-atomic.h	8;"	d
_ATOMIC_ADD	../include/netcache_types.h	60;"	d
_ATOMIC_ADD_P	../include/netcache_types.h	62;"	d
_ATOMIC_CAS	../include/netcache_types.h	65;"	d
_ATOMIC_SUB	../include/netcache_types.h	61;"	d
_ATOMIC_SUB_P	../include/netcache_types.h	63;"	d
_ATOMIC_VAL	../include/netcache_types.h	64;"	d
_GNU_SOURCE	../test/gprof-helper.c	18;"	d	file:
_HASHED_TIMER_H	../include/wb_timer.h	35;"	d
_PORTABLE_SNPRINTF_H_	../include/snprintf.h	2;"	d
_SC_NPROCESSORS_ONLN	../netcache/util.c	1663;"	d	file:
_SIMPLE_LIST_H	../include/bt_tmlist.h	36;"	d
_STATFS_H_	../include/statfs.h	2;"	d
_WIN32_WINNT	../test/db.c	4;"	d	file:
_XOPEN_SOURCE	../netcache/bc_mgr.c	11;"	d	file:
__ASIO_H__	../include/asio.h	2;"	d
__ASSERT_LOCK_OWNED	../netcache/volumeops.c	78;"	d	file:
__ASSERT_LOCK_RELEASED	../netcache/volumeops.c	80;"	d	file:
__BIG_ENDIAN	../netcache/crc32.c	9;"	d	file:
__BLOCK_H__	../include/block.h	2;"	d
__BLOCK_MACRO_H__	../include/block_macro.h	2;"	d
__BT_BITMAP_H__	../include/bt_bitmap.h	2;"	d
__BT_TIMER_T	../include/bt_timer.h	2;"	d
__BYTE_ORDER	../netcache/crc32.c	10;"	d	file:
__CFS_DRIVER_H__	../include/cfs_driver.h	2;"	d
__CONFIG_WAIT_COMPLETION_INTERVAL_USEC	../include/netcache_config.h	4;"	d
__CYCLIC_LFH_H__	../include/cyclic_lfu.h	2;"	d
__DISKCACHE_H__	../include/diskcache.h	2;"	d
__DISK_IO_H	../include/disk_io.h	2;"	d
__FIO_H__	../include/fio.h	2;"	d
__GLRU_H__	../include/glru.h	2;"	d
__KV_H__	../include/kv.h	2;"	d
__LINUX_BITMAP_H	../include/bitmap.h	2;"	d
__LITTLE_ENDIAN	../netcache/crc32.c	8;"	d	file:
__LOCK_H__	../include/lock.h	7;"	d
__LOG_H__	../include/log.h	2;"	d
__LRU_H__	../include/lru.h	2;"	d
__MDB_H__	../include/mdb.h	2;"	d
__MEM_MAGIC	../netcache/util.c	131;"	d	file:
__MEM_MAGIC	../netcache/util.c	146;"	d	file:
__MEM_MAGIC_FREE	../netcache/util.c	132;"	d	file:
__MEM_MAGIC_FREE	../netcache/util.c	147;"	d	file:
__MEM_MAGIC_SIZE	../netcache/util.c	161;"	d	file:
__NCAPIX_H__	../include/ncapi.h	2;"	d
__NCVERSION_H__	../include/ncconfig.h	2;"	d
__NC_RWLOCK_H__	../include/nc_rwlock.h	2;"	d
__NC_RWLOCK_H__	../rwtest/nc_rwlock.h	2;"	d
__NETCACHE_CONFIG_H__	../include/netcache_config.h	2;"	d
__NETCACHE_H__	../include/netcache.h	3;"	d
__NETCACHE_TYPES_H__	../include/netcache_types.h	2;"	d
__PROFILE	../include/netcache_config.h	113;"	d
__PROFILE	../test/test_kv.c	15;"	d	file:
__RDTSC_H__	../include/rdtsc.h	2;"	d
__RINGBUFFER_H__	../include/ringbuffer.h	2;"	d
__SHMEM_WRAPPER_H__	../include/shm_wrapper.h	2;"	d
__THREADPOOL_H__	../include/threadpool.h	2;"	d
__TLC_QUEUE_H__	../include/tlc_queue.h	35;"	d
__TRACE_H__	../include/trace.h	2;"	d
__USE_GNU	../netcache/cfs_apix.c	10;"	d	file:
__USE_GNU	../netcache/disk_io_ops.c	23;"	d	file:
__USE_GNU	../netcache/heaptrack.c	13;"	d	file:
__USE_GNU	../netcache/volumeops.c	18;"	d	file:
__UTIL_H__	../include/util.h	2;"	d
__VT_H__	../include/hash.h	2;"	d
__WIN_UUID_WRAP_H__	../include/win_uuidwrap.h	2;"	d
____cacheline_aligned_in_smp	../netcache/wb_timer.c	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:tvec_t_base_s
___alloc_aamap	../netcache/heaptrack.c	/^static shash_t 				___alloc_aamap;$/;"	v	file:
___alloc_counter	../netcache/heaptrack.c	/^static long long 			___alloc_counter = 0;$/;"	v	file:
___alloc_kept	../netcache/heaptrack.c	/^static long long 			___alloc_kept = 0;$/;"	v	file:
___alloc_lock	../netcache/heaptrack.c	/^static pthread_mutex_t		___alloc_lock 		= PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
___alloc_root	../netcache/heaptrack.c	/^static dllist_t 			___alloc_root 		= {NULL, NULL};$/;"	v	file:
___alloc_symdict	../netcache/heaptrack.c	/^static void*				___alloc_symdict = NULL; \/* call stack 심볼을 uniq하게 등록해둔 테이블 *\/$/;"	v	file:
___bypass_hook	../netcache/heaptrack.c	/^__thread int 	___bypass_hook 	= 0; \/* libc 함수를 바로 호출할 때 사용 *\/$/;"	v
___dummy	../netcache/fhops.c	/^static char ___dummy[1];$/;"	v	file:
___id_counter	../netcache/diskcache.c	/^static nc_uint32_t 			___id_counter = 1; $/;"	v	file:
___libc_calloc	../netcache/heaptrack.c	/^static 		void *(*___libc_calloc)(size_t, size_t)			= __t_calloc;	$/;"	v	file:
___libc_free	../netcache/heaptrack.c	/^static 		void  (*___libc_free)(void *)					= __t_free;				$/;"	v	file:
___libc_malloc	../netcache/heaptrack.c	/^static 		void *(*___libc_malloc)(size_t) 				= __t_malloc;			$/;"	v	file:
___libc_malloc_usable_size	../netcache/heaptrack.c	/^static 		size_t (*___libc_malloc_usable_size) (void *__ptr)  = NULL;$/;"	v	file:
___libc_memalign	../netcache/heaptrack.c	/^static 		void *(*___libc_memalign)(size_t, size_t)		= NULL;$/;"	v	file:
___libc_realloc	../netcache/heaptrack.c	/^static 		void *(*___libc_realloc)(void *, size_t)		= NULL;	$/;"	v	file:
___libc_strdup	../netcache/heaptrack.c	/^static 		char *(*___libc_strdup)(const char *)			= __t_strdup;		$/;"	v	file:
___libc_strndup	../netcache/heaptrack.c	/^static 		char *(*___libc_strndup)(const char *,size_t)	= __t_strndup;		$/;"	v	file:
___no_tracing	../netcache/heaptrack.c	/^__thread 	int 	___no_tracing 	= 0; \/* libc 함수를 바로 호출할 때 사용 *\/$/;"	v
___trace_upper	../netcache/heaptrack.c	/^__thread int 	___trace_upper = 0;$/;"	v
__ai_category	../netcache/util.c	/^static ai_element_t		__ai_category[AI_COUNT] ;$/;"	v	file:
__asio_frees	../common/asio_mgr.c	/^} __asio_frees;$/;"	v	typeref:struct:__anon1
__asio_id_counter	../common/asio_mgr.c	/^static nc_uint32_t __asio_id_counter = 1;$/;"	v	file:
__asio_limit	../common/asio_mgr.c	/^static int 	__asio_limit = ASIO_LIMITS;$/;"	v	file:
__asio_ptr	../common/asio_mgr.c	/^static nc_asio_vector_t		**__asio_ptr = NULL;$/;"	v	file:
__barrier__	../include/cfs_driver.h	/^	nc_uint64_t						__barrier__;$/;"	m	struct:nc_volume_context
__barrier__	../include/netcache.h	/^	nc_uint64_t						__barrier__;$/;"	m	struct:tag_fc_inode_info
__bc_locked	../netcache/diskcache.c	/^__thread int 	__bc_locked = 0;$/;"	v
__bcache_spin_interval	../netcache/bc_mgr.c	/^static int 					__bcache_spin_interval = 1; \/* 기본값 60초*\/$/;"	v	file:
__bcache_spin_interval_cur	../netcache/bc_mgr.c	/^static int 					__bcache_spin_interval_cur = 1;$/;"	v	file:
__bitmap_and	../netcache/bitmap.c	/^void __bitmap_and(unsigned long *dst, const unsigned long *bitmap1,$/;"	f
__bitmap_andnot	../netcache/bitmap.c	/^void __bitmap_andnot(unsigned long *dst, const unsigned long *bitmap1,$/;"	f
__bitmap_complement	../netcache/bitmap.c	/^void __bitmap_complement(unsigned long *dst, const unsigned long *src, int bits)$/;"	f
__bitmap_empty	../netcache/bitmap.c	/^int __bitmap_empty(const unsigned long *bitmap, int bits)$/;"	f
__bitmap_equal	../netcache/bitmap.c	/^int __bitmap_equal(const unsigned long *bitmap1,$/;"	f
__bitmap_full	../netcache/bitmap.c	/^int __bitmap_full(const unsigned long *bitmap, int bits)$/;"	f
__bitmap_intersects	../netcache/bitmap.c	/^int __bitmap_intersects(const unsigned long *bitmap1,$/;"	f
__bitmap_or	../netcache/bitmap.c	/^void __bitmap_or(unsigned long *dst, const unsigned long *bitmap1,$/;"	f
__bitmap_parse	../netcache/bitmap.c	/^int __bitmap_parse(const char *buf, unsigned int buflen,$/;"	f
__bitmap_shift_left	../netcache/bitmap.c	/^void __bitmap_shift_left(unsigned long *dst,$/;"	f
__bitmap_shift_right	../netcache/bitmap.c	/^void __bitmap_shift_right(unsigned long *dst,$/;"	f
__bitmap_xor	../netcache/bitmap.c	/^void __bitmap_xor(unsigned long *dst, const unsigned long *bitmap1,$/;"	f
__blk_track_list	../netcache/bc_mgr.c	/^static link_list_t 			__blk_track_list = LIST_INITIALIZER;$/;"	v	file:
__block_size	../util/nc_checkfs.c	/^int		 __block_size = 1024*256;$/;"	v
__build_info	../netcache/cfs_apix.c	/^char 						__build_info[] 		= PACKAGE_NAME " " PACKAGE_VERSION " in " __DATE__ " " __TIME__;$/;"	v
__c_ttl	../test/driver_test.c	/^int 			__c_ttl = 0;$/;"	v
__cache_dir	../netcache/cfs_apix.c	/^char						__cache_dir[256]	= "";$/;"	v
__cache_dir	../util/nc_checkfs.c	/^char 	__cache_dir[256]="\/stg\/weon_cache";$/;"	v
__cfs_dump_clfu	../netcache/cfs_apix.c	/^void __cfs_dump_clfu(int sig)$/;"	f
__change_bit	../include/non-atomic.h	/^static inline void __change_bit(int nr, volatile unsigned long *addr)$/;"	f
__charset	../netcache/cfs_apix.c	/^char 						__charset[128]		= "UTF-8";$/;"	v
__clock_mtime	../include/rdtsc.h	/^__clock_mtime(perf_val_t x)$/;"	f
__crc_init	../netcache/util.c	/^static int	__crc_init = 0;$/;"	v	file:
__crc_tbl	../netcache/util.c	/^static char	__crc_tbl[256];$/;"	v	file:
__debug_expired	../include/bt_timer.h	/^	int						__debug_expired;$/;"	m	struct:timeout
__debug_kv_list	../netcache/kv.c	/^static link_list_t 		__debug_kv_list = LIST_INITIALIZER;$/;"	v	file:
__debug_kv_lock	../netcache/kv.c	/^static pthread_mutex_t 	__debug_kv_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
__diff_usec	../include/rdtsc.h	/^__diff_usec(perf_val_t *s, perf_val_t *e)$/;"	f
__dio_get_free	../netcache/disk_io_ops.c	/^__dio_get_free(tp_data_t tcb)$/;"	f	file:
__dio_io_done	../netcache/disk_io_ops.c	/^__dio_io_done(io_context_t ctx, struct iocb *aio_iocb, long transfered, long error)$/;"	f	file:
__dio_prepare_iocb_pool	../netcache/disk_io_ops.c	/^__dio_prepare_iocb_pool()$/;"	f	file:
__dio_put_free	../netcache/disk_io_ops.c	/^__dio_put_free(void *v_nciocb)$/;"	f
__dir_count	../test/driver_test.c	/^int				__dir_count = 0;$/;"	v
__dir_index	../test/driver_test.c	/^int				__dir_index = 0;$/;"	v
__dm_list	../netcache/util.c	/^static link_list_t 			__dm_list = {.head = NULL, .tail=NULL};$/;"	v	file:
__dm_lock	../netcache/util.c	/^static pthread_mutex_t 		__dm_lock = PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP;$/;"	v	file:
__dm_signature	../netcache/diskcache.c	/^static nc_uint32_t 		__dm_signature = 1;$/;"	v	file:
__dm_state	../netcache/diskcache.c	/^static cachedir_state_t __dm_state;$/;"	v	file:
__driver_class	../netcache/cfs_driver.c	/^cfs_origin_driver_t *__driver_class[MAX_CFS_DRIVER_COUNT];$/;"	v
__driver_class_count	../netcache/cfs_driver.c	/^int 				 __driver_class_count = 0;$/;"	v
__dump_leak	../netcache/heaptrack.c	/^__dump_leak(struct leak_info *pli)$/;"	f	file:
__dump_proc	../netcache/heaptrack.c	/^static void 		(*__dump_proc)(char *) = NULL;$/;"	v	file:
__dump_tree	../netcache/heaptrack.c	/^__dump_tree(const void *nodep, VISIT val, int lev)$/;"	f	file:
__enable_asio_timer	../netcache/cfs_apix.c	/^int							__enable_asio_timer = 0;$/;"	v
__enable_compaction	../netcache/cfs_apix.c	/^int 						__enable_compaction = 1; \/* default enable *\/$/;"	v
__enable_compaction	../util/nc_checkfs.c	/^int 	__enable_compaction = 1;$/;"	v
__files	../test/driver_test.c	/^char 			**__files = NULL; \/\/[MAX_FILE_COUNT];$/;"	v
__files_count	../test/driver_test.c	/^int				__files_count = 0;$/;"	v
__free_blk_pool	../netcache/bc_mgr.c	/^link_list_t					*__free_blk_pool		= NULL;$/;"	v
__glru_id	../netcache/glru.c	/^static int __glru_id = 0;$/;"	v	file:
__heap	../include/block.h	/^	nc_uint8_t				__heap;$/;"	m	struct:tag_blk_apc_read_info
__hlist_del	../include/bt_tmlist.h	/^static __inline__ void __hlist_del(struct hlist_node *n)$/;"	f
__id	../include/glru.h	/^	int 			__id;$/;"	m	struct:tag_glru_node
__in_signal	../netcache/cfs_apix.c	/^static int 			 __in_signal = 0;$/;"	v	file:
__init_hooks	../netcache/heaptrack.c	/^__init_hooks()$/;"	f	file:
__inode_cache_spin_interval	../netcache/cacheops.c	/^static int 					__inode_cache_spin_interval = 1; \/* 기본값 60초*\/$/;"	v	file:
__inode_cache_spin_interval_cur	../netcache/cacheops.c	/^static int 					__inode_cache_spin_interval_cur = 1;$/;"	v	file:
__inode_count	../test/driver_test.c	/^int __inode_count  = MAX_FILE_COUNT;$/;"	v
__inode_count	../test/volume_test.c	/^int 			__inode_count  = 1024;;$/;"	v
__inode_free	../netcache/cacheops.c	/^static link_list_t 			__inode_free;$/;"	v	file:
__inode_locked__	../netcache/diskcache.c	/^__thread int __inode_locked__ = 0;$/;"	v
__inode_pool	../netcache/diskcache.c	/^link_list_t				__inode_pool  = LIST_INITIALIZER;$/;"	v
__inuse	../include/block.h	/^	nc_uint8_t				__inuse;$/;"	m	struct:tag_blk_apc_read_info
__jiffies_base	../netcache/wb_timer.c	/^unsigned long long __jiffies_base = 0;$/;"	v
__jiffies_current	../netcache/wb_timer.c	/^unsigned long long __jiffies_current = 0;$/;"	v
__line	../include/glru.h	/^	int 			__line;$/;"	m	struct:tag_glru_node
__list_add	../include/bt_tmlist.h	/^static inline void __list_add(struct list_head *newe, struct list_head *prev, struct list_head *next)$/;"	f
__list_del	../include/bt_tmlist.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f
__list_for_each	../include/bt_tmlist.h	338;"	d
__list_for_each_rcu	../include/bt_tmlist.h	422;"	d
__list_splice	../include/bt_tmlist.h	/^static inline void __list_splice(struct list_head *list, struct list_head *head)$/;"	f
__localtime_lock	../netcache/util.c	/^pthread_mutex_t 	__localtime_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
__lock_order	../netcache/util.c	/^static __thread link_list_t		__lock_order = LIST_INITIALIZER;$/;"	v	file:
__max_asio_threads	../common/asio_mgr.c	/^int					__max_asio_threads = MAX_ASIO_THREADS;$/;"	v
__max_buid	../netcache/bc_mgr.c	/^nc_uint32_t 				__max_buid 			= 0;$/;"	v
__max_cachable_object_size	../netcache/bc_mgr.c	/^nc_size_t 					__max_cachable_object_size  = 0; \/\/(65535LL-1LL)*NC_BLOCK_SIZE;$/;"	v
__mdb_convert_table	../netcache/mdb.c	/^__mdb_convert_table(nc_mdb_handle_t *mdb, mdb_session_t *dbs)$/;"	f	file:
__mdb_enable_custom_alloc	../netcache/mdb.c	/^static int 				__mdb_enable_custom_alloc = 1;$/;"	v	file:
__mdb_global_init	../netcache/mdb.c	/^static int 				__mdb_global_init = 0;$/;"	v	file:
__mdb_io_counter	../netcache/mdb.c	/^static nc_uint64_t		__mdb_io_counter[3] = {0,0,0};$/;"	v	file:
__memcache_mode	../netcache/bc_mgr.c	/^nc_int16_t 					__memcache_mode 		= 0;$/;"	v
__meminfo_t	../netcache/util.c	/^	} __meminfo_t;$/;"	t	typeref:struct:__anon12	file:
__meminfo_t	../netcache/util.c	/^	} __meminfo_t;$/;"	t	typeref:struct:__anon13	file:
__mh_t	../netcache/heaptrack.c	/^} __mh_t;$/;"	t	typeref:struct:__anon7	file:
__min_asio_threads	../common/asio_mgr.c	/^int 				__min_asio_threads = MIN_ASIO_THREADS;$/;"	v
__mod_timer	../netcache/wb_timer.c	/^int __mod_timer(void *vt_base, struct timer_list *timer, unsigned long long expires)$/;"	f
__ms_allocated	../netcache/cfs_apix.c	/^int 						__ms_allocated = 0; $/;"	v
__msg_lock	../util/nc_checkfs.c	/^pthread_mutex_t __msg_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
__nc_block_size	../netcache/cfs_apix.c	/^nc_int32_t 					__nc_block_size = 256*1024;$/;"	v
__nc_calloc	../netcache/util.c	/^__nc_calloc(size_t elcount, size_t elsize, int category, const char *sf, int sl)$/;"	f
__nc_check_magic	../netcache/util.c	/^__nc_check_magic(void *p)$/;"	f	file:
__nc_check_overflow	../netcache/util.c	/^__nc_check_overflow(__meminfo_t *mp)$/;"	f	file:
__nc_clock	../netcache/cfs_apix.c	/^time_t						__nc_clock = 0;$/;"	v
__nc_clock	../netcache/util.c	/^static time_t 				__nc_clock = 0;$/;"	v	file:
__nc_clock_lock	../netcache/util.c	/^static pthread_rwlock_t 	__nc_clock_lock = PTHREAD_RWLOCK_INITIALIZER;$/;"	v	file:
__nc_dump_heap	../netcache/util.c	/^__nc_dump_heap(nc_uint16_t class)$/;"	f
__nc_errno	../netcache/cfs_apix.c	/^__thread int __nc_errno = 0;$/;"	v
__nc_free	../netcache/util.c	/^__nc_free(void *p, const char *file, int lno)$/;"	f
__nc_get_category	../netcache/util.c	/^__nc_get_category(void *p)$/;"	f
__nc_get_len	../netcache/util.c	/^__nc_get_len(void *p)$/;"	f
__nc_malloc	../netcache/util.c	/^__nc_malloc(size_t n, int category, const char *sf, int sl)$/;"	f
__nc_mark_free	../netcache/util.c	/^__nc_mark_free(__meminfo_t *mp, const char *f, int l)$/;"	f	file:
__nc_realloc	../netcache/util.c	/^__nc_realloc(void * old_, size_t reqsiz, int category, const char *sf, int sl)$/;"	f
__nc_set_barrier	../netcache/util.c	/^__nc_set_barrier(__meminfo_t *mp)$/;"	f	file:
__nc_set_info	../netcache/util.c	/^__nc_set_info(__meminfo_t*mp, nc_uint32_t l, int category, int aligned, const char *sf, int sl)$/;"	f	file:
__nc_strdup	../netcache/util.c	/^__nc_strdup(const char *s, int category, const char *sf, int sl)$/;"	f
__nc_strndup	../netcache/util.c	/^__nc_strndup(const char *s, size_t n, int category, const char *sf, int sl)$/;"	f
__nc_update_info	../netcache/util.c	/^__nc_update_info(__meminfo_t *mp, size_t length, int aligned, const char *sf, int sl)$/;"	f	file:
__negative_TTL	../netcache/cfs_apix.c	/^int							__negative_TTL = 5;  \/* 5초 *\/$/;"	v
__node	../include/block.h	/^	link_node_t				__node;$/;"	m	struct:tag_blk_apc_read_info
__notused__1	../include/netcache_types.h	/^				nc_uint64_t      	__notused__1:1;		\/* NOT USED:inode가 disk MDB에서 로딩되어 생성된 경우 *\/$/;"	m	struct:__anon65::bitefields
__notused__2	../include/netcache_types.h	/^				nc_uint64_t			__notused__2:1;		\/* NOT USED:inode가 disk에서 로딩됨 *\/$/;"	m	struct:__anon65::bitefields
__p_fresh	../netcache/diskcache.c	/^static char __p_fresh[][32] = {$/;"	v	file:
__p_stat	../netcache/diskcache.c	/^static char 	__p_stat[][32]= {$/;"	v	file:
__part_maxblksize	../netcache/part_mgr.c	/^static size_t 					__part_maxblksize = 512;$/;"	v	file:
__part_table	../netcache/part_mgr.c	/^static part_table_info_t		__part_table;$/;"	v	file:
__per_thread_var_enabled	../common/asio_mgr.c	/^int 				__per_thread_var_enabled = 0;$/;"	v
__plugin_path	../netcache/cfs_apix.c	/^char 						__plugin_path[256]="\/usr\/service\/lib\/plugin";$/;"	v
__pool_allocator	../netcache/mdb.c	/^struct sqlite3_mem_methods __pool_allocator = {$/;"	v	typeref:struct:sqlite3_mem_methods
__positive_TTL	../netcache/cfs_apix.c	/^int							__positive_TTL = 30;  \/* 30초 *\/$/;"	v
__possible_files_count	../test/driver_test.c	/^int __possible_files_count  = MAX_FILE_COUNT;$/;"	v
__premain	../netcache/heaptrack.c	/^__premain()$/;"	f
__primary_age	../netcache/mdb.c	/^static nc_uint32_t		__primary_age = 1;$/;"	v	file:
__primary_mdb	../netcache/mdb.c	/^static nc_mdb_handle_t	*__primary_mdb = NULL;$/;"	v	file:
__repair	../util/nc_checkfs.c	/^int 	__repair = 0;$/;"	v
__resource_lock	../netcache/util.c	/^static pthread_mutex_t   __resource_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
__resources	../netcache/util.c	/^static u_hash_table_t 	*__resources = NULL;$/;"	v	file:
__ri_counter	../common/blk_io.c	/^static nc_uint32_t	__ri_counter = 0;$/;"	v	file:
__run_timers	../netcache/wb_timer.c	/^static inline void __run_timers(tvec_base_t * base)$/;"	f	file:
__s__max_ios	../netcache/cfs_apix.c	/^int 						__s__max_ios = 512;$/;"	v
__s_ref_blocks	../netcache/cfs_apix.c	/^long						__s_ref_blocks = 0;$/;"	v
__s_ref_blocks_dsk	../netcache/cfs_apix.c	/^long						__s_ref_blocks_dsk = 0;$/;"	v
__s_ref_blocks_mem	../netcache/cfs_apix.c	/^long						__s_ref_blocks_mem = 0;$/;"	v
__s_ref_blocks_osd	../netcache/cfs_apix.c	/^long						__s_ref_blocks_osd = 0;$/;"	v
__scanned	../util/nc_checkfs.c	/^int 	__scanned = 0;$/;"	v
__sig	../include/glru.h	/^	char 			__sig[1024];$/;"	m	struct:tag_glru_node
__sig_segv_handler	../netcache/cfs_apix.c	/^static sighandler_t  __sig_segv_handler[64];$/;"	v	file:
__stat_path	../netcache/cfs_apix.c	/^char 						__stat_path[256]=".\/netcache_stat.txt";$/;"	v
__str_blk_state	../common/blk_io.c	/^char __str_blk_state[][24] = {$/;"	v
__subdirs	../test/driver_test.c	/^char 			**__subdirs = NULL; \/\/[MAX_FILE_COUNT];$/;"	v
__t_calloc	../netcache/heaptrack.c	/^__t_calloc(size_t nel, size_t sz)$/;"	f	file:
__t_cursor	../netcache/heaptrack.c	/^static char *					__t_cursor = __t_heap;$/;"	v	file:
__t_free	../netcache/heaptrack.c	/^__t_free(void *p)$/;"	f	file:
__t_heap	../netcache/heaptrack.c	/^static char 					__t_heap[8*1024*1024];$/;"	v	file:
__t_lock	../netcache/heaptrack.c	/^static pthread_mutex_t 			__t_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
__t_malloc	../netcache/heaptrack.c	/^__t_malloc(size_t sz)$/;"	f	file:
__t_range	../netcache/heaptrack.c	/^__t_range(void *p)$/;"	f	file:
__t_strdup	../netcache/heaptrack.c	/^__t_strdup(const char *s)$/;"	f	file:
__t_strndup	../netcache/heaptrack.c	/^__t_strndup(const char *s, size_t n)$/;"	f	file:
__tasks_timer	../netcache/cfs_apix.c	/^pthread_t 				 	__tasks_timer; \/* 나중에 종료하기위해 특별 처리 필요 *\/$/;"	v
__term	../test/driver_test.c	/^int 			__term = 0;$/;"	v
__term	../test/volume_test.c	/^int 			__term = 0;$/;"	v
__terminating	../netcache/cfs_apix.c	/^int 						__terminating = 0;$/;"	v
__terminating_timer	../netcache/cfs_apix.c	/^int 						__terminating_timer = 0;$/;"	v
__test_and_change_bit	../include/non-atomic.h	/^static inline int __test_and_change_bit(int nr,$/;"	f
__test_and_clear_bit	../include/non-atomic.h	/^static inline int __test_and_clear_bit(int nr, volatile unsigned long *addr)$/;"	f
__test_and_set_bit	../include/non-atomic.h	/^static inline int __test_and_set_bit(int nr, volatile unsigned long *addr)$/;"	f
__thread_count	../util/nc_checkfs.c	/^int		__thread_count = 1;$/;"	v
__thread_wrapper	../netcache/util.c	/^__thread_wrapper(void *u)$/;"	f	file:
__threads	../test/driver_test.c	/^int __threads 	= 1;$/;"	v
__threads	../test/volume_test.c	/^int __threads 	= 1;$/;"	v
__timer_inode_spinner	../netcache/cacheops.c	/^static bt_timer_t			__timer_inode_spinner;$/;"	v	file:
__timer_wheel_base	../netcache/cfs_apix.c	/^void  *	PUBLIC_IF __timer_wheel_base = NULL;$/;"	v
__tinode	../util/nc_checkfs.c	/^fc_file_t 	__tinode;$/;"	v
__xfile_cnt	../test/driver_test.c	/^int 			__xfile_cnt = 0;$/;"	v
__z_apc_open_str	../netcache/diskcache.c	/^static char 	__z_apc_open_str[][32] = {$/;"	v	file:
__z_fresh_str	../netcache/volumeops.c	/^static char __z_fresh_str[][32] = {$/;"	v	file:
__z_ioctl	../netcache/cfs_apix.c	/^static char __z_ioctl[NC_IOCTL_MAX][48] = {$/;"	v	file:
__z_ps	../netcache/volumeops.c	/^static char __z_ps[][32] = {$/;"	v	file:
_b	../include/netcache.h	/^		nc_uint8_t 		_b[8];$/;"	m	union:tag_opaque::__anon47
_b16	../include/netcache.h	/^		nc_uint16_t 	_b16;$/;"	m	union:tag_opaque::__anon47
_b32	../include/netcache.h	/^		nc_uint32_t 	_b32;$/;"	m	union:tag_opaque::__anon47
_b64	../include/netcache.h	/^		nc_uint64_t 	_b64;$/;"	m	union:tag_opaque::__anon47
_backtrace	../netcache/backtrace.c	/^_backtrace(struct output_buffer *ob, struct bfd_set *set, int depth , LPCONTEXT context)$/;"	f	file:
_bcm_dump_blk_info	../netcache/bc_mgr.c	/^_bcm_dump_blk_info(void *u_a, void *u_b)$/;"	f	file:
_bp	../include/netcache.h	/^		void 		*   _bp;$/;"	m	union:tag_opaque::__anon47
_bt_timer_handler	../netcache/bt_timer.c	/^_bt_timer_handler(void *d, void *tcb)$/;"	f	file:
_bt_timerwheels_add	../netcache/bt_timer.c	/^_bt_timerwheels_add(struct timerwheels *base, struct timeout *to, bt_timeout_t timeout)$/;"	f	file:
_bt_timerwheels_del	../netcache/bt_timer.c	/^_bt_timerwheels_del(struct timerwheels *base, struct timeout *to)$/;"	f	file:
_bt_timerwheels_expired	../netcache/bt_timer.c	/^_bt_timerwheels_expired(struct timerwheels *base)$/;"	f	file:
_bt_timerwheels_get	../netcache/bt_timer.c	/^_bt_timerwheels_get(struct timerwheels *base)$/;"	f	file:
_bt_timerwheels_pending	../netcache/bt_timer.c	/^_bt_timerwheels_pending(struct timerwheels *base)$/;"	f	file:
_cc_32int	../include/cfs_driver.h	/^		nc_int32_t		_cc_32int;$/;"	m	union:tag_nc_open_cc_quark::__anon29
_cc_32uint	../include/cfs_driver.h	/^		nc_int32_t		_cc_32uint;$/;"	m	union:tag_nc_open_cc_quark::__anon29
_cond	../include/util.h	/^	pthread_cond_t	_cond;$/;"	m	struct:nc_cond
_corrupt	../netcache/mdb.c	/^	char 				_corrupt[256];$/;"	m	struct:tag_nc_mdb_handle	file:
_data	../include/cfs_driver.h	/^		char 			_data[1]; \/* 가변 할당임 *\/$/;"	m	union:tag_nc_open_cc_quark::__anon29
_e	../include/cfs_driver.h	/^	perf_val_t 	_s, _e;$/;"	m	struct:cfs_iov
_hash_rotl	../netcache/util.c	1842;"	d	file:
_init_log	../netcache/log.c	/^LOG_HANDLE* _init_log(const char *fname, int ms, int mc)$/;"	f
_init_log_lock	../netcache/log.c	/^void _init_log_lock()$/;"	f
_init_timers	../netcache/wb_timer.c	/^static tvec_base_t *_init_timers()$/;"	f	file:
_lock	../include/util.h	/^	pthread_mutex_t	_lock;$/;"	m	struct:nc_lock
_locked	../include/util.h	/^	int				_locked; \/* increased whenever lock acquisition succeeded *\/$/;"	m	struct:nc_lock
_log_handle	../include/log.h	/^typedef struct _log_handle {$/;"	s
_magic	../include/util.h	/^	nc_uint32_t		_magic;$/;"	m	struct:nc_cond
_magic	../include/util.h	/^	nc_uint32_t		_magic;$/;"	m	struct:nc_lock
_ml_stat	../include/util.h	/^	void			*_ml_stat;$/;"	m	struct:nc_lock
_nl_cond_broadcast	../netcache/util.c	/^_nl_cond_broadcast(nc_cond_t *cond)$/;"	f
_nl_cond_destroy	../netcache/util.c	/^_nl_cond_destroy(nc_cond_t *cond)$/;"	f
_nl_cond_init	../netcache/util.c	/^_nl_cond_init(nc_cond_t *cond)$/;"	f
_nl_cond_signal	../netcache/util.c	/^_nl_cond_signal(nc_cond_t *cond)$/;"	f
_nl_cond_timedwait	../netcache/util.c	/^_nl_cond_timedwait(nc_cond_t *cond, nc_lock_t *lock, const struct timespec *ts)$/;"	f
_nl_cond_timedwait2	../netcache/util.c	/^_nl_cond_timedwait2(nc_cond_t *cond, pthread_mutex_t *mutex, const struct timespec *ts)$/;"	f
_nl_cond_wait	../netcache/util.c	/^_nl_cond_wait(nc_cond_t *cond, nc_lock_t *lock)$/;"	f
_nl_destroy	../netcache/util.c	/^_nl_destroy(nc_lock_t *l)$/;"	f
_nl_get_lock_raw	../netcache/util.c	/^_nl_get_lock_raw(nc_lock_t *l)$/;"	f
_nl_init	../netcache/util.c	/^_nl_init(nc_lock_t *l, pthread_mutexattr_t *m)$/;"	f
_nl_lock	../netcache/util.c	/^_nl_lock(nc_lock_t *L, char *f, int l)$/;"	f
_nl_owned	../netcache/util.c	/^_nl_owned(nc_lock_t *l)$/;"	f
_nl_unlock	../netcache/util.c	/^_nl_unlock(nc_lock_t *L)$/;"	f
_open_log_file	../netcache/log.c	/^FILE* _open_log_file(LOG_HANDLE *plog)$/;"	f
_rename_old_log_files	../netcache/log.c	/^int   _rename_old_log_files(const char *logdir,$/;"	f
_rename_old_log_index	../netcache/log.c	/^int  _rename_old_log_index(char *name,$/;"	f
_s	../include/cfs_driver.h	/^	perf_val_t 	_s, _e;$/;"	m	struct:cfs_iov
_str_asio_state	../common/asio_mgr.c	/^static char _str_asio_state[10][24] = {$/;"	v	file:
_str_block_status	../netcache/diskcache.c	/^char _str_block_status[][32] = {$/;"	v
_str_iot	../common/asio_mgr.c	/^char _str_iot[10][24] = {$/;"	v
_sync_file	../netcache/util.c	/^_sync_file(char *src, char *dest)$/;"	f
_tml	../include/util.h	/^	perf_val_t		_tml;$/;"	m	struct:nc_lock
_u32	../include/netcache.h	/^		nc_uint32_t		_u32;$/;"	m	union:apc_open_context::__anon49
_ubi	../include/netcache.h	/^		} _ubi;$/;"	m	union:apc_open_context::__anon49	typeref:struct:apc_open_context::__anon49::__anon50
activating	../include/netcache.h	/^			nc_uint32_t         	activating:1;$/;"	m	struct:apc_open_context::__anon49::__anon50
adaptivereadahead	../include/cfs_driver.h	/^	nc_uint32_t 					adaptivereadahead:1; \/* default 0(disabled) *\/$/;"	m	struct:nc_volume_context
add_timer	../include/wb_timer.h	/^static inline void add_timer(void *vt_base, struct timer_list *timer)$/;"	f
add_timer_on	../netcache/wb_timer.c	/^void add_timer_on(void *vt_base, struct timer_list *timer)$/;"	f
addr	../netcache/heaptrack.c	/^	void 					*addr; \/* aligned memory block addr *\/$/;"	m	struct:tag_shash_entry	file:
address	../include/ncapi.h	/^	char			address[NC_MAX_STRINGLEN];$/;"	m	struct:tag_origin_info
address	../netcache/heaptrack.c	/^	void		*address;	\/* backtraced caller address info *\/$/;"	m	struct:leak_info	file:
address	../netcache/heaptrack.c	/^	void*				address; 	\/* caller's address *\/$/;"	m	struct:__anon7	file:
affected	../netcache/mdb.c	/^	int				affected;$/;"	m	struct:mdb_remove_rowi_tag	file:
affected	../netcache/mdb.c	/^	int				affected;$/;"	m	struct:mdb_update_rowi_tag	file:
affected	../netcache/mdb.c	/^	nc_int64_t		affected;$/;"	m	struct:mdb_inserti_tag	file:
age	../include/netcache.h	/^	nc_uint32_t				age;$/;"	m	struct:apc_read_context
ai_add	../netcache/util.c	/^ai_add(int category, nc_int32_t sz)$/;"	f
ai_dump	../netcache/util.c	/^ai_dump(char *abuf, int len)$/;"	f
ai_element_t	../netcache/util.c	/^} ai_element_t;$/;"	t	typeref:struct:__anon11	file:
ai_sub	../netcache/util.c	/^ai_sub(int category, nc_int32_t sz)$/;"	f
aiomode	../test/driver_test.c	/^int 			aiomode = 0;$/;"	v
aligned	../netcache/heaptrack.c	/^	char				aligned;$/;"	m	struct:__anon7	file:
aligned	../netcache/util.c	/^		nc_uint8_t 		aligned:1;$/;"	m	struct:__anon12	file:
alloc	../netcache/diskcache.c	/^	long							alloc;$/;"	m	struct:tag_cachedir_state	file:
allocate	../include/glru.h	/^	void *			(*allocate)(glru_node_t **);$/;"	m	struct:tag_glru_operations
allocate	../include/glru.h	/^	void * 			(*allocate)(glru_node_t **);$/;"	m	struct:tag_glru
allocate_context	../include/cfs_driver.h	/^	nc_origin_session_t 	 		(*allocate_context)(struct cfs_origin_driver *drv, struct apc_open_context *aoc); $/;"	m	struct:cfs_origin_driver
allocated	../netcache/util.c	/^	nc_int64_t 		allocated;	\/* amount of allocation in bytes *\/$/;"	m	struct:__anon11	file:
allocator	../netcache/ringbuffer.c	/^	void * 			(*allocator)(void *cb, size_t sz);$/;"	m	struct:tag_nc_ringbuffer	file:
allocator_cbdata	../netcache/ringbuffer.c	/^	void * 			*allocator_cbdata;$/;"	m	struct:tag_nc_ringbuffer	file:
allocptr	../netcache/mdb.c	/^	char 		*allocptr;$/;"	m	struct:property_pack_info	file:
allocsiz	../netcache/mdb.c	/^	int 		allocsiz;$/;"	m	struct:property_pack_info	file:
alwaysexpire	../include/cfs_driver.h	/^	nc_uint32_t 					alwaysexpire:1; \/* 신선도 검사에 alwaysexpire존재*\/$/;"	m	struct:nc_volume_context
ap_cb	../netcache/cfs_driver.c	/^	nc_fill_dir_proc_t 	ap_cb;$/;"	m	struct:__anon4	file:
ap_cb_data	../netcache/cfs_driver.c	/^	void * 				ap_cb_data;$/;"	m	struct:__anon4	file:
ap_vol	../netcache/cfs_driver.c	/^	nc_volume_context_t 	*ap_vol;$/;"	m	struct:__anon4	file:
apc_block_ready_callback_t	../include/ncapi.h	/^typedef void (*apc_block_ready_callback_t)(fc_blk_t *block, int xfered, int error, void *cbdata);$/;"	t
apc_completion_callback_t	../include/netcache.h	/^typedef int (*apc_completion_callback_t)(void *userdata, int error);$/;"	t
apc_completion_proc_t	../include/netcache_types.h	/^typedef int (*apc_completion_proc_t)(void *);$/;"	t
apc_context_t	../include/netcache_types.h	/^} apc_context_t;$/;"	t	typeref:struct:__anon60
apc_data	../include/netcache_types.h	/^	nc_uint8_t		apc_data[1];$/;"	m	struct:__anon60
apc_destroy_open_context	../netcache/diskcache.c	/^apc_destroy_open_context(apc_open_context_t *oc)$/;"	f
apc_op	../include/block.h	/^	nc_apcop_t			apc_op;$/;"	m	struct:tag_blk_apc_read_info
apc_op	../include/netcache_types.h	/^	nc_apcop_t		apc_op;$/;"	m	struct:__anon60
apc_op	../netcache/disk_io_ops.c	/^	nc_apcop_t		apc_op;$/;"	m	struct:nc_iocb	file:
apc_open_context	../include/netcache.h	/^typedef struct apc_open_context {$/;"	s
apc_open_context_init	../netcache/diskcache.c	/^apc_open_context_init(	apc_open_context_t 			*soc, $/;"	f	file:
apc_open_context_t	../include/netcache.h	/^} apc_open_context_t;$/;"	t	typeref:struct:apc_open_context
apc_open_state_t	../include/netcache.h	/^} apc_open_state_t;$/;"	t	typeref:enum:__anon48
apc_overlapped_destroy	../netcache/util.c	/^apc_overlapped_destroy(apc_overlapped_t *e)$/;"	f
apc_overlapped_dump	../netcache/util.c	/^apc_overlapped_dump(apc_overlapped_t *e, char *buf, int len)$/;"	f
apc_overlapped_new	../netcache/util.c	/^apc_overlapped_new(void *u, apc_completion_proc_t proc)$/;"	f
apc_overlapped_reset	../netcache/util.c	/^apc_overlapped_reset(apc_overlapped_t *e)$/;"	f
apc_overlapped_signal	../netcache/util.c	/^apc_overlapped_signal(apc_overlapped_t *e)$/;"	f
apc_overlapped_switch	../netcache/util.c	/^apc_overlapped_switch(apc_overlapped_t *e, void *u, apc_completion_proc_t proc)$/;"	f
apc_overlapped_t	../include/netcache_types.h	/^} apc_overlapped_t;$/;"	t	typeref:struct:tag_apc_overlapped
apc_overlapped_type_t	../include/netcache_types.h	/^} apc_overlapped_type_t; $/;"	t	typeref:enum:__anon61
apc_overlapped_wait	../netcache/util.c	/^apc_overlapped_wait(apc_overlapped_t *e)$/;"	f
apc_read_context	../include/netcache.h	/^typedef struct apc_read_context {$/;"	s
apc_read_context_t	../include/netcache.h	/^} apc_read_context_t;$/;"	t	typeref:struct:apc_read_context
apc_remove_context	../include/netcache.h	/^typedef struct apc_remove_context {$/;"	s
apc_remove_context_t	../include/netcache.h	/^} apc_remove_context_t;$/;"	t	typeref:struct:apc_remove_context
apcs_close_action	../netcache/diskcache.c	/^apcs_close_action(apc_context_t *apc)$/;"	f
apcs_open_action_LOCK	../netcache/diskcache.c	/^apcs_open_action_LOCK(apc_context_t *apc)$/;"	f
arg	../netcache/util.c	/^	void *	arg;$/;"	m	struct:my_thread_info	file:
arg	../test/gprof-helper.c	/^	void *arg;$/;"	m	struct:wrapper_s	file:
asio	../include/netcache.h	/^	nc_asio_vector_t	*asio;$/;"	m	struct:tag_dio_done_context
asio	../include/netcache.h	/^	nc_asio_vector_t	*asio;$/;"	m	struct:tag_nio_done_context
asio_append_block	../common/asio_mgr.c	/^asio_append_block(nc_asio_vector_t *biov, fc_blk_t *blk)$/;"	f
asio_bio_fill	../common/asio_mgr.c	/^asio_bio_fill(nc_asio_vector_t *biov, int bidx, nc_off_t fileoffset, char *buffer, int len)$/;"	f	file:
asio_cancel_io	../common/asio_mgr.c	/^asio_cancel_io(nc_asio_vector_t *biov, int donecnt, void *tcb, int err)$/;"	f
asio_cancel_schedule	../common/asio_mgr.c	/^asio_cancel_schedule(nc_asio_vector_t *v, int e)$/;"	f
asio_cascade_io_internal_nolock	../common/asio_mgr.c	/^asio_cascade_io_internal_nolock(nc_asio_vector_t *asiov, int bidx)$/;"	f	file:
asio_chunk_done_LOCK	../common/asio_mgr.c	/^asio_chunk_done_LOCK(void *iocb, void *tcb\/*not used*\/)$/;"	f	file:
asio_context_handler	../common/asio_mgr.c	/^asio_context_handler(nc_asio_vector_t *asiov, int ctxidx, nc_off_t foffset, void *tcb, nc_off_t len, unsigned long verror)$/;"	f	file:
asio_count_blocks	../common/asio_mgr.c	/^asio_count_blocks(nc_asio_vector_t *asiov)$/;"	f
asio_debug_t	../include/asio.h	/^} asio_debug_t;$/;"	t	typeref:struct:tag_asio_debug
asio_destroy	../common/asio_mgr.c	/^asio_destroy(fc_inode_t *inode, nc_asio_vector_t *biov)$/;"	f
asio_dump_lv1	../common/asio_mgr.c	/^asio_dump_lv1( char *buf, int buflen, nc_asio_vector_t	*vector)$/;"	f
asio_exec_cache_read	../common/asio_mgr.c	/^asio_exec_cache_read(nc_asio_vector_t *asiov, int *error)$/;"	f	file:
asio_exec_osd_read	../common/asio_mgr.c	/^asio_exec_osd_read(nc_asio_vector_t *asiov, int *error)$/;"	f	file:
asio_fini_vector	../common/asio_mgr.c	/^asio_fini_vector(fc_inode_t *inode, nc_asio_vector_t *v, void *tcb\/*not used *\/)$/;"	f	file:
asio_hang_timer	../common/asio_mgr.c	/^asio_hang_timer(void *d)$/;"	f
asio_init	../common/asio_mgr.c	/^asio_init(void)$/;"	f
asio_is_command_type	../include/asio.h	33;"	d
asio_is_command_type	../include/asio.h	42;"	d
asio_need_EOV	../common/asio_mgr.c	/^asio_need_EOV(nc_asio_vector_t *asiov)$/;"	f
asio_new	../common/asio_mgr.c	/^asio_new(fc_inode_t *inode, nc_asio_type_t first_type, nc_asio_type_t cas_type,  nc_blkno_t sblkno, int niobs, nc_user_callback_t callback, void *cb, int bwait, nc_kv_list_t *kv, int need_property)$/;"	f
asio_next_command	../common/asio_mgr.c	/^asio_next_command(nc_asio_vector_t *v, int n)$/;"	f
asio_pop	../common/asio_mgr.c	/^asio_pop(fc_inode_t *inode, int bwait)$/;"	f	file:
asio_post_apc	../common/asio_mgr.c	/^asio_post_apc(void *d, const char *f, int l)$/;"	f
asio_prepare_context	../common/asio_mgr.c	/^asio_prepare_context(nc_asio_vector_t *v, int cidx, nc_off_t offset,  int prepchunk, int check_inode_lock)$/;"	f	file:
asio_push	../common/asio_mgr.c	/^asio_push(fc_inode_t *inode, nc_asio_vector_t *v)$/;"	f	file:
asio_read_vector_done_LOCK	../common/asio_mgr.c	/^asio_read_vector_done_LOCK(nc_asio_vector_t *asiov, void *tcb\/*not used*\/)$/;"	f	file:
asio_remained_act	../common/asio_mgr.c	/^asio_remained_act(nc_asio_vector_t *biov)$/;"	f	file:
asio_replace_block_nolock	../common/asio_mgr.c	/^asio_replace_block_nolock(nc_asio_vector_t *biov, int bidx, fc_blk_t *blk)$/;"	f	file:
asio_run_io	../common/asio_mgr.c	/^asio_run_io(void *d, void *tcb)$/;"	f	file:
asio_run_vector	../common/asio_mgr.c	/^asio_run_vector(nc_asio_vector_t *asiov, void *tcb)$/;"	f	file:
asio_schedule	../common/asio_mgr.c	/^asio_schedule(nc_asio_vector_t *biov, nc_schedule_type_t stype)$/;"	f
asio_set_block_nolock	../common/asio_mgr.c	/^asio_set_block_nolock(nc_asio_vector_t *biov, int bidx, fc_blk_t *blk)$/;"	f	file:
asio_set_done_callback	../common/asio_mgr.c	/^asio_set_done_callback(nc_asio_vector_t *biov, nc_done_callback_t c, void *cb)$/;"	f
asio_set_inode	../common/asio_mgr.c	/^asio_set_inode(nc_asio_vector_t *biov, fc_inode_t *inode)$/;"	f
asio_set_startoffset	../common/asio_mgr.c	/^asio_set_startoffset(nc_asio_vector_t *biov, nc_off_t off)$/;"	f
asio_shutdown	../common/asio_mgr.c	/^asio_shutdown(void)$/;"	f
asio_signal_cancel	../common/asio_mgr.c	/^asio_signal_cancel(fc_inode_t *inode)$/;"	f
asio_state_t	../include/asio.h	/^} asio_state_t;$/;"	t	typeref:enum:__anon22
asio_vector_count	../common/asio_mgr.c	/^asio_vector_count(nc_asio_vector_t *biov)$/;"	f
asio_verify_iob	../common/asio_mgr.c	/^asio_verify_iob(nc_asio_vector_t *biov)$/;"	f	file:
asio_workers	../include/ncapi.h	/^	nc_uint16_t		asio_workers;  \/* # of concurrent ASIO threads *\/$/;"	m	struct:nc_volume_stat
asioc_dump_prefix	../common/asio_mgr.c	/^asioc_dump_prefix(char *buf, int buflen, nc_asio_vector_t *v, int idx)$/;"	f
asiov_dump_prefix	../common/asio_mgr.c	/^asiov_dump_prefix(char *buf, int buflen, nc_asio_vector_t *v)$/;"	f
atime	../include/netcache.h	/^  	nc_time_t      					atime;			\/**last access time *\/$/;"	m	struct:tag_fc_inode_info
atime	../netcache/mdb.c	/^	nc_time_t		atime;$/;"	m	struct:mdb_remove_rowi_tag	file:
background_thread	../netcache/diskcache.c	/^	pthread_t						background_thread[MAX_BACKGROUND_THREADS];$/;"	m	struct:tag_cachedir_state	file:
backtrace_lineinfo	../netcache/cfs_apix.c	/^void backtrace_lineinfo( int number, void *address, char *symbol )$/;"	f
backtrace_register	../netcache/backtrace.c	/^backtrace_register(void)$/;"	f
backtrace_unregister	../netcache/backtrace.c	/^backtrace_unregister(void)$/;"	f	file:
bandcount	../include/cyclic_lfu.h	/^	int				bandcount;$/;"	m	struct:__anon32
barrier	../netcache/util.c	/^		nc_uint32_t 	*barrier; 	\/* 할당된 메모리가 깨졌는지 체크할 때 사용 *\/$/;"	m	struct:__anon12	file:
base	../include/shm_wrapper.h	/^	void 				*base;$/;"	m	struct:nc_shm_tag
base	../include/wb_timer.h	/^	struct tvec_t_base_s *base;$/;"	m	struct:timer_list	typeref:struct:timer_list::tvec_t_base_s
basecount	../include/cyclic_lfu.h	/^	int				basecount;$/;"	m	struct:__anon32
batch_handler	../netcache/mdb.c	/^	pthread_t			batch_handler;$/;"	m	struct:tag_nc_mdb_handle	file:
batch_queue	../netcache/mdb.c	/^	tlc_queue_t			batch_queue;$/;"	m	struct:tag_nc_mdb_handle	file:
batchlock	../netcache/mdb.c	/^	nc_lock_t 			batchlock;$/;"	m	struct:tag_nc_mdb_handle	file:
bblocked	../include/block.h	181;"	d
bc	../netcache/backtrace.c	/^	struct bfd_ctx * bc;$/;"	m	struct:bfd_set	typeref:struct:bfd_set::bfd_ctx	file:
bcanceled	../include/block.h	182;"	d
bci	../include/netcache.h	/^	fc_block_status_t		bci;$/;"	m	struct:tag_bci_stat
bci_stat_t	../include/netcache.h	/^} bci_stat_t;$/;"	t	typeref:struct:tag_bci_stat
bcm_alloc	../netcache/bc_mgr.c	/^bcm_alloc(fc_inode_t *inode, long blkno, int needmap)$/;"	f
bcm_alloc_page_from_blks	../netcache/bc_mgr.c	/^bcm_alloc_page_from_blks(int npages)$/;"	f
bcm_allocate_page	../netcache/bc_mgr.c	/^bcm_allocate_page()$/;"	f
bcm_allocate_page_batch	../netcache/bc_mgr.c	/^bcm_allocate_page_batch(nc_page_ctrl_t *map[], int alreadymapped, int mapcount)$/;"	f	file:
bcm_block_busy_nostate	../netcache/bc_mgr.c	/^bcm_block_busy_nostate(fc_blk_t *blk)$/;"	f	file:
bcm_block_idle	../netcache/bc_mgr.c	/^bcm_block_idle(fc_blk_t *blk, int updatestat)$/;"	f	file:
bcm_calc_page_count	../netcache/bc_mgr.c	/^bcm_calc_page_count(fc_inode_t *inode, long blkno)$/;"	f	file:
bcm_check_idle_callback	../netcache/bc_mgr.c	/^bcm_check_idle_callback( void * d, void * cb_data )$/;"	f
bcm_check_if_page_avail_nolock	../netcache/bc_mgr.c	/^bcm_check_if_page_avail_nolock(int thrpages)$/;"	f	file:
bcm_check_page_avail	../netcache/bc_mgr.c	/^bcm_check_page_avail(fc_inode_t *inode, fc_blk_t *block, int pageno, int allocifnull)$/;"	f
bcm_count_blk_pages_cb	../netcache/bc_mgr.c	/^bcm_count_blk_pages_cb(void *data, void *ud)$/;"	f	file:
bcm_count_cache_info	../netcache/bc_mgr.c	/^bcm_count_cache_info(int *blk_count, int *page_count)$/;"	f
bcm_dump_blks	../netcache/bc_mgr.c	/^bcm_dump_blks()$/;"	f	file:
bcm_dump_block	../netcache/bc_mgr.c	/^bcm_dump_block(char *buf, int len, void *d)$/;"	f	file:
bcm_dump_lv1	../netcache/bc_mgr.c	/^bcm_dump_lv1(char *buf, int len, fc_blk_t *blk)$/;"	f
bcm_dump_lv2	../netcache/bc_mgr.c	/^bcm_dump_lv2(char *buf, int len, fc_blk_t *blk)$/;"	f
bcm_expand_cache_pages_nolock	../netcache/bc_mgr.c	/^bcm_expand_cache_pages_nolock()$/;"	f	file:
bcm_find_victim	../netcache/bc_mgr.c	/^bcm_find_victim(void *vd)$/;"	f	file:
bcm_free_after_pages_nolock	../netcache/bc_mgr.c	/^bcm_free_after_pages_nolock(fc_blk_t *blk, int cntvalid)$/;"	f	file:
bcm_free_all_pages	../netcache/bc_mgr.c	/^bcm_free_all_pages(fc_blk_t *blk)$/;"	f	file:
bcm_free_all_pages_nolock	../netcache/bc_mgr.c	/^bcm_free_all_pages_nolock(fc_blk_t *blk)$/;"	f	file:
bcm_free_block_mem	../netcache/bc_mgr.c	/^bcm_free_block_mem(void *d)$/;"	f	file:
bcm_free_page	../netcache/bc_mgr.c	/^bcm_free_page(void *page)$/;"	f
bcm_get_block_from_pool	../netcache/bc_mgr.c	/^bcm_get_block_from_pool(int npages)$/;"	f
bcm_get_free_page_count	../netcache/bc_mgr.c	/^bcm_get_free_page_count()$/;"	f
bcm_get_free_page_count_nolock	../netcache/bc_mgr.c	/^bcm_get_free_page_count_nolock()$/;"	f	file:
bcm_get_page_nolock	../netcache/bc_mgr.c	/^bcm_get_page_nolock()$/;"	f	file:
bcm_hit_block	../netcache/bc_mgr.c	/^bcm_hit_block(fc_blk_t 	*blk, int ntimes)$/;"	f
bcm_hit_block_nolock	../netcache/bc_mgr.c	/^bcm_hit_block_nolock(fc_blk_t 	*blk, int ntimes)$/;"	f
bcm_init	../netcache/bc_mgr.c	/^bcm_init(nc_size_t max_cache_size, nc_size_t max_object_in_mem, char *cache_path)$/;"	f
bcm_is_orphaned	../netcache/bc_mgr.c	/^bcm_is_orphaned(fc_blk_t *blk) $/;"	f	file:
bcm_lookup_LIGHT	../netcache/bc_mgr.c	/^bcm_lookup_LIGHT(fc_inode_t *inode, long blkno\/* ligical blk # *\/, int dolock, char *f, int l)$/;"	f
bcm_malloc_blk_nolock	../netcache/bc_mgr.c	/^bcm_malloc_blk_nolock()$/;"	f	file:
bcm_put_to_pool	../netcache/bc_mgr.c	/^bcm_put_to_pool(fc_blk_t *blk, int pagefree)$/;"	f
bcm_put_to_pool_nolock	../netcache/bc_mgr.c	/^bcm_put_to_pool_nolock(fc_blk_t *blk, int pagefree)$/;"	f
bcm_scan_callback	../netcache/bc_mgr.c	/^bcm_scan_callback( void * data, void * cb_data )$/;"	f
bcm_setup_page_size	../netcache/bc_mgr.c	/^bcm_setup_page_size()$/;"	f
bcm_shutdown	../netcache/bc_mgr.c	/^bcm_shutdown()$/;"	f
bcm_spin_block_lfu	../netcache/bc_mgr.c	/^bcm_spin_block_lfu(void *d)$/;"	f	file:
bcm_stat	../netcache/bc_mgr.c	/^struct bcm_stat {$/;"	s	file:
bcm_track	../netcache/bc_mgr.c	/^bcm_track(int stat)$/;"	f
bcm_update_ref_stat	../netcache/bc_mgr.c	/^bcm_update_ref_stat(fc_blk_t *blk, int ntimes)$/;"	f
bcm_verify_block_crc	../netcache/bc_mgr.c	/^bcm_verify_block_crc(fc_inode_t *inode, fc_blk_t *blk)$/;"	f
bcm_verify_content_integrity	../netcache/bc_mgr.c	/^bcm_verify_content_integrity(fc_inode_t *inode, fc_blk_t *blk, int blklength)$/;"	f
bdskfault	../include/block.h	179;"	d
begin	../util/nc_checkfs.c	/^	int		begin;$/;"	m	struct:__anon20	file:
bfd_ctx	../netcache/backtrace.c	/^struct bfd_ctx {$/;"	s	file:
bfd_set	../netcache/backtrace.c	/^struct bfd_set {$/;"	s	file:
bhit	../include/block.h	183;"	d
bidx	../include/netcache.h	/^	int					bidx;$/;"	m	struct:tag_dio_done_context
bidx	../include/netcache.h	/^	int					bidx;$/;"	m	struct:tag_nio_done_context
bidx	../netcache/disk_io_ops.c	/^	unsigned short 		bidx;$/;"	m	struct:nc_iocb_xtra	file:
bind_context	../include/cfs_driver.h	/^	int 							(*bind_context)(struct cfs_origin_driver *drv, char *prefix, nc_origin_info_t *ctx, int ctxcnt, int ctx_type);$/;"	m	struct:cfs_origin_driver
binfo	../include/block.h	185;"	d
binprogress	../include/block.h	180;"	d
bitefields	../include/netcache_types.h	/^		struct bitefields {$/;"	s	union:__anon65
bitmap	../include/netcache.h	/^  	unsigned long 					*bitmap; 		\/* cached block information, size of (unsigned long) depends on platform arch *\/$/;"	m	struct:tag_fc_inode_info
bitmap	../util/nc_convert.c	/^	char              bitmap[0];$/;"	m	struct:tag_fc_old_header_info	file:
bitmap_and	../include/bitmap.h	/^static inline void bitmap_and(unsigned long *dst, const unsigned long *src1,$/;"	f
bitmap_andnot	../include/bitmap.h	/^static inline void bitmap_andnot(unsigned long *dst, const unsigned long *src1,$/;"	f
bitmap_complement	../include/bitmap.h	/^static inline void bitmap_complement(unsigned long *dst, const unsigned long *src,$/;"	f
bitmap_copy	../include/bitmap.h	/^static inline void bitmap_copy(unsigned long *dst, const unsigned long *src,$/;"	f
bitmap_empty	../include/bitmap.h	/^static inline int bitmap_empty(const unsigned long *src, int nbits)$/;"	f
bitmap_equal	../include/bitmap.h	/^static inline int bitmap_equal(const unsigned long *src1,$/;"	f
bitmap_fill	../include/bitmap.h	/^static inline void bitmap_fill(unsigned long *dst, int nbits)$/;"	f
bitmap_full	../include/bitmap.h	/^static inline int bitmap_full(const unsigned long *src, int nbits)$/;"	f
bitmap_intersects	../include/bitmap.h	/^static inline int bitmap_intersects(const unsigned long *src1,$/;"	f
bitmap_or	../include/bitmap.h	/^static inline void bitmap_or(unsigned long *dst, const unsigned long *src1,$/;"	f
bitmap_parse	../include/bitmap.h	/^static inline int bitmap_parse(const char *buf, unsigned int buflen,$/;"	f
bitmap_scnprintf	../netcache/bitmap.c	/^int bitmap_scnprintf(char *buf, unsigned int buflen,$/;"	f
bitmap_shift_left	../include/bitmap.h	/^static inline void bitmap_shift_left(unsigned long *dst,$/;"	f
bitmap_shift_right	../include/bitmap.h	/^static inline void bitmap_shift_right(unsigned long *dst,$/;"	f
bitmap_subset	../include/bitmap.h	/^static inline int bitmap_subset(const unsigned long *src1,$/;"	f
bitmap_weight	../include/bitmap.h	/^static inline int bitmap_weight(const unsigned long *src, int nbits)$/;"	f
bitmap_xor	../include/bitmap.h	/^static inline void bitmap_xor(unsigned long *dst, const unsigned long *src1,$/;"	f
bitmap_zero	../include/bitmap.h	/^static inline void bitmap_zero(unsigned long *dst, int nbits)$/;"	f
bitmaplen	../include/netcache.h	/^  	nc_int16_t 			bitmaplen;			\/* block bit count*\/$/;"	m	struct:tag_fc_header_info_v30
bitmaplen	../include/netcache.h	/^  	nc_int32_t						bitmaplen; 		\/* bit count :number of blocks*\/$/;"	m	struct:tag_fc_inode_info
bitmaplen	../util/nc_convert.c	/^	unsigned short    bitmaplen;  \/* block bit count*\/$/;"	m	struct:tag_fc_old_header_info	file:
bl	../include/cyclic_lfu.h	/^	void 			*bl;$/;"	m	struct:__anon32
bl_t	../include/netcache.h	/^typedef struct tag_bl_t bl_t ;$/;"	t	typeref:struct:tag_bl_t
blk_allowable_request_nolock	../common/blk_io.c	/^blk_allowable_request_nolock(fc_inode_t *inode, nc_off_t foffset, size_t size)$/;"	f	file:
blk_apc_dump_RI	../common/blk_io.c	/^blk_apc_dump_RI(char *buf, int len, blk_apc_read_info_t*ri)$/;"	f
blk_apc_dump_context	../common/blk_io.c	/^blk_apc_dump_context(char *buf, int len, apc_read_context_t *rctx) $/;"	f
blk_apc_read_info_t	../include/netcache.h	/^typedef struct tag_blk_apc_read_info blk_apc_read_info_t;$/;"	t	typeref:struct:tag_blk_apc_read_info
blk_count	../netcache/bc_mgr.c	/^	int 	blk_count;$/;"	m	struct:tag_bcm_info	file:
blk_destroy_read_apc	../common/blk_io.c	/^blk_destroy_read_apc(apc_read_context_t *rctx)$/;"	f
blk_fault_batch_nolock	../common/blk_io.c	/^blk_fault_batch_nolock(	fc_inode_t 	*inode,$/;"	f
blk_fault_nolock	../common/blk_io.c	/^blk_fault_nolock(	fc_inode_t 			*inode, $/;"	f
blk_handle_io_cache_read_nolock	../common/blk_io.c	/^blk_handle_io_cache_read_nolock(nc_asio_type_t 		iot, $/;"	f	file:
blk_handle_io_cache_write_nolock	../common/blk_io.c	/^blk_handle_io_cache_write_nolock(nc_asio_type_t iot, fc_inode_t *inode, fc_blk_t *blk, nc_off_t len, int error, nc_asio_vector_t *v, int *nxt_blkstate)$/;"	f	file:
blk_handle_io_event_nolock	../common/blk_io.c	/^blk_handle_io_event_nolock(nc_asio_type_t iot, fc_inode_t *inode, fc_blk_t *blk, nc_off_t len, int error, nc_asio_vector_t *v)$/;"	f
blk_handle_io_osd_read_nolock	../common/blk_io.c	/^blk_handle_io_osd_read_nolock(nc_asio_type_t iot, fc_inode_t *inode, fc_blk_t *blk, nc_off_t len, int error, nc_asio_vector_t *v, int *nxt_blkstate)$/;"	f	file:
blk_iot_handler_proc_t	../common/blk_io.c	/^typedef int (*blk_iot_handler_proc_t)(nc_asio_type_t, fc_inode_t *, fc_blk_t *, nc_off_t, int, nc_asio_vector_t *, int *);$/;"	t	file:
blk_locked	../include/netcache.h	/^	nc_int8_t						blk_locked:1;$/;"	m	struct:tag_fc_inode_info
blk_make_crc	../common/blk_io.c	/^blk_make_crc(fc_inode_t *inode, fc_blk_t *blk, ssize_t len, int fastcrc)$/;"	f
blk_make_ref_nolock	../include/block.h	82;"	d
blk_make_ref_nolock	../include/block.h	98;"	d
blk_make_unref_nolock	../include/block.h	88;"	d
blk_make_unref_nolock	../include/block.h	99;"	d
blk_prepare_for_inode_nolock	../common/blk_io.c	/^blk_prepare_for_inode_nolock(fc_inode_t *inode, nc_blkno_t blkno, int needmap)$/;"	f
blk_read_apc	../common/blk_io.c	/^blk_read_apc(	fc_inode_t 				*inode, $/;"	f
blk_read_bytes	../common/blk_io.c	/^blk_read_bytes(fc_inode_t *inode, fc_blk_t *blk, nc_off_t foffset, char *data, nc_size_t maxlen)$/;"	f
blk_report_hang	../common/blk_io.c	/^blk_report_hang(void *v)$/;"	f	file:
blk_ri_destroy	../common/blk_io.c	/^blk_ri_destroy(blk_apc_read_info_t *ri)$/;"	f
blk_ri_init	../common/blk_io.c	/^blk_ri_init(blk_apc_read_info_t *ri, nc_file_handle_t *fh, nc_off_t off, char *buffer, nc_size_t len)$/;"	f
blk_ri_pop	../common/blk_io.c	/^blk_ri_pop(int force_alloc)$/;"	f	file:
blk_ri_push	../common/blk_io.c	/^blk_ri_push(blk_apc_read_info_t *pri)$/;"	f	file:
blk_ri_reuse	../common/blk_io.c	/^blk_ri_reuse(blk_apc_read_info_t *ri)$/;"	f
blk_ri_valid	../common/blk_io.c	/^blk_ri_valid(blk_apc_read_info_t *ri)$/;"	f
blk_ri_wait	../common/blk_io.c	/^blk_ri_wait(blk_apc_read_info_t *ri, long *wait_inmsec)$/;"	f
blk_scan_max_fault_nolock	../common/blk_io.c	/^blk_scan_max_fault_nolock(fc_inode_t *inode, nc_asio_type_t cmd, nc_blkno_t blkno)$/;"	f	file:
blk_schedule_io_nolock	../common/blk_io.c	/^blk_schedule_io_nolock(	fc_inode_t 		*inode, $/;"	f	file:
blk_stream_t	../include/util.h	/^} blk_stream_t;$/;"	t	typeref:struct:tag_blk_stream
blk_update_state	../common/blk_io.c	/^blk_update_state(fc_inode_t *inode, fc_blk_t *blk, int state, const char *_f, int _l)$/;"	f
blk_valid_range	../common/blk_io.c	/^blk_valid_range(fc_inode_t *inode, nc_off_t t)$/;"	f	file:
blkno	../include/asio.h	/^	nc_blkno_t				blkno; 			$/;"	m	struct:nc_asio_context
blkno	../include/block.h	/^	nc_blkno_t			blkno;$/;"	m	struct:tag_fc_blk
block	../include/asio.h	/^	fc_blk_t				*block;			\/* memory  where data copied to *\/$/;"	m	struct:nc_asio_context
block	../include/block.h	/^	fc_blk_t			*block;$/;"	m	struct:tag_blk_apc_read_info
block	../include/cfs_driver.h	/^	struct tag_fc_blk 	*block;$/;"	m	struct:cfs_iov	typeref:struct:cfs_iov::tag_fc_blk
block	../include/netcache.h	/^	fc_blk_t				*block;$/;"	m	struct:tag_bci_stat
block_signal	../netcache/util.c	/^block_signal()$/;"	f
block_signal_2	../netcache/util.c	/^block_signal_2(int sigblock)$/;"	f
block_size	../include/netcache.h	/^  	nc_int16_t			block_size;			\/* unit : 1024, multiples of 1024 bytes *\/$/;"	m	struct:tag_fc_header_info_v30
blockcrc	../include/netcache.h	/^	nc_crc_t 						*blockcrc; 		\/* 1-byte block CRC *\/$/;"	m	struct:tag_fc_inode_info
blockmap	../include/netcache.h	/^  	fc_blk_t 						**blockmap;  	\/* 65535 * 256KB => more than 120GB *\/$/;"	m	struct:tag_fc_inode_info
bmagic	../include/block.h	/^	nc_uint32_t	bmagic;$/;"	m	struct:tag_fc_blk
bnode	../include/lru.h	/^	link_node_t 			bnode; \/* 위치는 반드시 처음 *\/$/;"	m	struct:__anon37
boffset	../include/block.h	/^	int					boffset; \/* buffer offset *\/$/;"	m	struct:tag_blk_apc_read_info
bosdfault	../include/block.h	178;"	d
brefcnt	../include/block.h	176;"	d
brun_forked	../include/wb_timer.h	/^	unsigned short 		brun_forked:1;			\/*1 if it should be run in a separate thread *\/$/;"	m	struct:timer_list
brunning	../include/wb_timer.h	/^	short 				brunning;				$/;"	m	struct:timer_list
bs_char	../netcache/bc_mgr.c	/^bs_char(blk_stream_t *bs)$/;"	f
bs_lseek	../netcache/bc_mgr.c	/^bs_lseek(blk_stream_t *bs, off_t off)$/;"	f
bs_open	../netcache/bc_mgr.c	/^bs_open(blk_stream_t *bs, void *inode, fc_blk_t *blk, int blksiz)$/;"	f
bs_read	../netcache/bc_mgr.c	/^bs_read(blk_stream_t *bs, unsigned char *buf, size_t len)$/;"	f
bset	../include/wb_timer.h	/^	unsigned short		bset:1; 				\/* 1 if timer set *\/$/;"	m	struct:timer_list
bstate	../include/block.h	177;"	d
bt_del_timer	../netcache/bt_timer.c	/^bt_del_timer(void *vtw, bt_timer_t *timer)$/;"	f
bt_destroy_timer	../netcache/bt_timer.c	/^bt_destroy_timer(struct timerwheels *base, bt_timer_t *timer)$/;"	f
bt_init_timer	../netcache/bt_timer.c	/^bt_init_timer(bt_timer_t *timer, const char *fname, int forkedrun)$/;"	f
bt_init_timers	../netcache/bt_timer.c	/^bt_init_timers()$/;"	f
bt_is_running	../netcache/bt_timer.c	/^bt_is_running(void *vtw, bt_timer_t *timer)$/;"	f
bt_msleep	../netcache/util.c	/^void PUBLIC_IF bt_msleep(long timeout)$/;"	f
bt_run_timers	../netcache/bt_timer.c	/^bt_run_timers(void *vtb)$/;"	f
bt_set_timer	../netcache/bt_timer.c	/^bt_set_timer(void *vtw, bt_timer_t *timer, unsigned int toff, bt_timer_cb_t cb, void *cbdata)$/;"	f
bt_timeout_t	../include/bt_timer.h	/^typedef		uint64_t		bt_timeout_t;$/;"	t
bt_timer_cb_t	../include/bt_timer.h	/^typedef void (*bt_timer_cb_t) (void *);$/;"	t
bt_timer_expired	../netcache/bt_timer.c	/^int bt_timer_expired(struct timeout *to)$/;"	f
bt_timer_pending	../netcache/bt_timer.c	/^int bt_timer_pending(struct timeout *to)$/;"	f
bt_timer_t	../include/bt_timer.h	/^typedef struct timeout		bt_timer_t;$/;"	t	typeref:struct:timeout
bt_timerwheel_t	../include/bt_timer.h	/^typedef struct timerwheels	bt_timerwheel_t;$/;"	t	typeref:struct:timerwheels
bt_timerwheels_init	../netcache/bt_timer.c	/^bt_timerwheels_init(struct timerwheels *base, uint64_t hz)$/;"	f	file:
bt_timerwheels_sched	../netcache/bt_timer.c	/^bt_timerwheels_sched(struct timerwheels *base, struct timeout *to, bt_timeout_t expires) {$/;"	f	file:
bt_timerwheels_update	../netcache/bt_timer.c	/^void bt_timerwheels_update(struct timerwheels *base, bt_timeout_t curtime) $/;"	f
bt_usleep	../netcache/util.c	/^void bt_usleep(long timeout)$/;"	f
buckets	../netcache/heaptrack.c	/^	shash_entry_t 	**buckets;$/;"	m	struct:__anon8	file:
buf	../include/md5.h	/^  UINT4 buf[4];                                    \/* scratch buffer *\/$/;"	m	struct:__anon38
buf	../netcache/backtrace.c	/^	char * buf;$/;"	m	struct:output_buffer	file:
buf	../netcache/diskcache.c	/^	char 	*buf;$/;"	m	struct:dump_wait_info	file:
buffer	../include/block.h	/^	char				*buffer;$/;"	m	struct:tag_blk_apc_read_info
buffer	../include/cfs_driver.h	/^	char 		*buffer;$/;"	m	struct:cfs_iov
buffer	../include/netcache.h	/^	char 	buffer[8192];$/;"	m	struct:tag_fc_stream_info
buffer	../include/util.h	/^	void 	*buffer;  	\/* pointer to fc_blk_t *\/$/;"	m	struct:tag_blk_stream
buffer	../netcache/ringbuffer.c	/^	char			*buffer;$/;"	m	struct:tag_nc_ringbuffer	file:
buffered	../include/netcache.h	/^	char 	buffered;$/;"	m	struct:tag_fc_stream_info
buffersiz	../include/util.h	/^	size_t	buffersiz;$/;"	m	struct:tag_blk_stream
buffsiz	../netcache/ringbuffer.c	/^	int				buffsiz;   	\/* write가능영역 크기 *\/$/;"	m	struct:tag_nc_ringbuffer	file:
buid	../include/block.h	/^	nc_uint32_t 		buid;$/;"	m	struct:tag_fc_blk
burst_mode	../test/driver_test.c	/^int 			burst_mode = 0;$/;"	v
burst_mode	../test/volume_test.c	/^int 			burst_mode = 0;$/;"	v
busy	../netcache/threadpool.c	/^	int 				busy;		\/* # of running threads *\/$/;"	m	struct:tag_threadpool	file:
busyfound	../netcache/volumeops.c	/^	int						busyfound;$/;"	m	struct:orphanize_info	file:
c_atime	../util/nc_convert.c	/^	time_t            c_atime;\/*REMARK!: this value is different from file atime *\/$/;"	m	struct:tag_fc_old_header_info	file:
c_path	../include/netcache.h	/^	char							*c_path;$/;"	m	struct:tag_fc_inode_info
c_path	../util/nc_convert.c	/^	char              c_path[NC_OLD_MAXPATHLEN]; \/* should be encrypted *\/$/;"	m	struct:tag_fc_old_header_info	file:
cache_dir	../test/integrity_test.c	/^char	cache_dir[128] = "\/stg\/cache\/solproxy";$/;"	v
cache_key	../include/ncapi.h	/^	char  				*cache_key;			\/* 객체에 대한 URL *\/$/;"	m	struct:nc_object_info_tag
cache_key	../include/netcache.h	/^	char        			*cache_key;$/;"	m	struct:apc_open_context
cache_key_given	../include/netcache.h	/^	char        			*cache_key_given;$/;"	m	struct:apc_open_context
cache_monitor	../netcache/cfs_apix.c	/^cache_monitor(void *d)$/;"	f	file:
cache_path	../include/ncapi.h	/^	char 				*cache_path; 		\/* 원본 객체의 URL 경로 *\/$/;"	m	struct:nc_object_info_tag
cache_path	../netcache/diskcache.c	/^	char				*cache_path;$/;"	m	struct:__anon5	file:
cache_path	../test/driver_test.c	/^char			cache_path[] = "I:\\\\cache";$/;"	v
cache_path	../test/volume_test.c	/^char			cache_path[] = "\/stg\/cache";$/;"	v
cached	../include/glru.h	/^	unsigned char	cached:1;$/;"	m	struct:tag_glru_node
cachedir	../netcache/diskcache.c	/^	char							cachedir[NC_MAXPATHLEN];$/;"	m	struct:tag_cachedir_state	file:
cachedir_state_t	../netcache/diskcache.c	/^} cachedir_state_t;$/;"	t	typeref:struct:tag_cachedir_state	file:
caching_time	../include/ncapi.h	/^	nc_time_t 	 		caching_time; 		\/* 캐시가 생성된 시간 , UTC time*\/$/;"	m	struct:nc_object_info_tag
callback	../include/block.h	/^	nc_apc_read_callback_t	callback;$/;"	m	struct:tag_blk_apc_read_info
callback	../include/bt_timer.h	/^	void					(*callback)(void *);$/;"	m	struct:timeout
callback	../include/netcache.h	/^	nc_apc_open_callback_t	callback; $/;"	m	struct:apc_open_context
callback	../netcache/volumeops.c	/^	int				(*callback)(fc_inode_t *, void *);$/;"	m	struct:inode_callback_info_tag	file:
callback_data	../include/bt_timer.h	/^	void					*callback_data;$/;"	m	struct:timeout
callback_data	../include/netcache.h	/^	void 					*callback_data;$/;"	m	struct:apc_open_context
calloc	../netcache/heaptrack.c	/^calloc(size_t nel, size_t sz) $/;"	f
canceled	../include/asio.h	/^	nc_int8_t 			canceled;$/;"	m	struct:nc_asio_vector
cap	../netcache/diskcache.c	/^	long long						cap;$/;"	m	struct:tag_cachedir_state	file:
cascade	../include/asio.h	/^	nc_uint8_t				cascade:1; 		\/* io complete, applied to cachemgr *\/$/;"	m	struct:nc_asio_context
cascade	../netcache/wb_timer.c	/^static int cascade(tvec_base_t * base, tvec_t * tv, int index)$/;"	f	file:
case_id	../netcache/mdb.c	/^	char 			case_id;$/;"	m	struct:mdb_inserti_tag	file:
case_id	../netcache/mdb.c	/^	char 			case_id;$/;"	m	struct:mdb_removei_tag	file:
casepreserve	../netcache/part_mgr.c	/^	int 					casepreserve;$/;"	m	struct:tag_query_inode	file:
casesensitive	../include/netcache.h	/^	nc_uint8_t 			casesensitive;$/;"	m	struct:tag_nc_mdb_inode_info
category	../netcache/util.c	/^		nc_uint16_t 	category;$/;"	m	struct:__anon12	file:
category	../netcache/util.c	/^		nc_uint16_t 	category;$/;"	m	struct:__anon13	file:
cb	../include/cfs_driver.h	/^	void *		cb; 	\/* callback data key *\/$/;"	m	struct:cfs_iov
cb	../netcache/disk_io_ops.c	/^	void				*cb;$/;"	m	struct:nc_iocb_xtra	file:
cb	../netcache/hash.c	/^	void 				*cb;$/;"	m	struct:u_hash_table	file:
cb	../netcache/volumeops.c	/^	void  *cb;$/;"	m	struct:nvm_operation_ctx	file:
cb_complete	../include/netcache.h	/^	apc_block_ready_callback_t	cb_complete; $/;"	m	struct:apc_read_context
cb_data	../include/netcache.h	/^	void						*cb_data;$/;"	m	struct:apc_read_context
cb_timer_t	../include/wb_timer.h	/^typedef void (*cb_timer_t) (void *);$/;"	t
cbdata	../include/block.h	/^	void					*cbdata;$/;"	m	struct:tag_blk_apc_read_info
cbdata	../include/ncapi.h	/^	void 				*cbdata; \/* ioctl로 지정한 콜백 데이타*\/$/;"	m	struct:__anon39
cbdata	../netcache/threadpool.c	/^	void 				*cbdata;$/;"	m	struct:tag_threadpool	file:
cbdata	../netcache/volumeops.c	/^	void			*cbdata;$/;"	m	struct:inode_callback_info_tag	file:
cbfunc	../netcache/volumeops.c	/^	int (*cbfunc)(void *, void *, void *);$/;"	m	struct:nvm_operation_ctx	file:
cfs_allocate_session	../netcache/cfs_driver.c	/^cfs_allocate_session(nc_volume_context_t *mc, struct apc_open_context *aoc)  $/;"	f
cfs_bind_context	../netcache/cfs_driver.c	/^cfs_bind_context(nc_volume_context_t *mc, char *prefix, nc_origin_info_t *ctx, int ctxcnt)$/;"	f
cfs_bind_context_x	../netcache/cfs_driver.c	/^cfs_bind_context_x(nc_volume_context_t *mc, char *prefix, nc_origin_info_t *ctx, int ctxcnt, int ctxtype)$/;"	f
cfs_close	../netcache/cfs_driver.c	/^cfs_close(nc_volume_context_t *mc, dev_file_handle_t *handle)$/;"	f
cfs_create	../netcache/cfs_driver.c	/^cfs_create(nc_volume_context_t *mc, char *path, int mode, void *hint, int hint_len, nc_xtra_options_t *opt)$/;"	f
cfs_create_driver_instance	../netcache/cfs_driver.c	/^cfs_create_driver_instance(char *name, char *signature)$/;"	f
cfs_destroy_driver_instance	../netcache/cfs_driver.c	/^cfs_destroy_driver_instance(cfs_origin_driver_t *drv)$/;"	f
cfs_dir_callback_t	../include/cfs_driver.h	/^typedef int (*cfs_dir_callback_t)(char *entry_name,  char *path, nc_stat_t *nstat, void *hint, int hint_len, nc_off_t off, void *cb);$/;"	t
cfs_dump_session	../netcache/cfs_driver.c	/^cfs_dump_session(nc_volume_context_t *mc, char *buf, int l, void *u)$/;"	f
cfs_errno	../netcache/cfs_driver.c	/^cfs_errno(cfs_origin_driver_t *drv)$/;"	f
cfs_find_driver_entry	../netcache/cfs_driver.c	/^cfs_find_driver_entry(void *key, void *value, void *ud)$/;"	f	file:
cfs_find_driver_name	../netcache/cfs_driver.c	/^cfs_find_driver_name(char *name)$/;"	f
cfs_flush	../netcache/cfs_driver.c	/^cfs_flush(nc_volume_context_t *mc, struct tag_fc_inode_info *inode)$/;"	f
cfs_free_session	../netcache/cfs_driver.c	/^cfs_free_session( nc_volume_context_t *mc, nc_origin_session_t ctx )$/;"	f
cfs_ftruncate	../netcache/cfs_driver.c	/^cfs_ftruncate(nc_volume_context_t *mc, struct dev_file_handle *dh, nc_size_t len)$/;"	f
cfs_getattr	../netcache/cfs_driver.c	/^cfs_getattr(nc_volume_context_t *mc, char *path , nc_stat_t *old_s, nc_stat_t *new_s, nc_xtra_options_t *kv, nc_mode_t mode, struct apc_open_context *oc)$/;"	f
cfs_io_callback_t	../include/cfs_driver.h	/^typedef void (*cfs_io_callback_t)(cfs_iov_t *iov, int result);$/;"	t
cfs_io_origin_path_change_callback_t	../include/cfs_driver.h	/^typedef void (*cfs_io_origin_path_change_callback_t)(struct tag_fc_inode_info *inode, char *path);$/;"	t
cfs_io_property_updator_t	../include/cfs_driver.h	/^typedef int (*cfs_io_property_updator_t)(struct tag_fc_inode_info *inode , nc_stat_t *stat);$/;"	t
cfs_io_validator_callback_t	../include/cfs_driver.h	/^typedef int (*cfs_io_validator_callback_t)(struct cfs_origin_driver *drv, struct tag_fc_inode_info *inode, nc_stat_t *stat);$/;"	t
cfs_ioctl	../netcache/cfs_driver.c	/^cfs_ioctl(nc_volume_context_t *mc, int cmd, void *val, int vallen)$/;"	f
cfs_iov	../include/cfs_driver.h	/^typedef struct cfs_iov {$/;"	s
cfs_iov_t	../include/cfs_driver.h	/^} cfs_iov_t;$/;"	t	typeref:struct:cfs_iov
cfs_is_online	../netcache/cfs_driver.c	/^cfs_is_online(struct cfs_origin_driver *drv, int ioflag)$/;"	f
cfs_is_online_x	../netcache/cfs_driver.c	/^cfs_is_online_x(char *qr_path, int ioflag)$/;"	f
cfs_iserror	../netcache/cfs_driver.c	/^cfs_iserror(nc_volume_context_t *mc, int v)$/;"	f
cfs_issameresponse	../netcache/cfs_driver.c	/^cfs_issameresponse(nc_volume_context_t *mc, int c1, int c2)$/;"	f
cfs_link	../netcache/cfs_driver.c	/^cfs_link(struct cfs_origin_driver *drv, char *path1, char *path2)$/;"	f
cfs_load_class_proc_t	../include/cfs_driver.h	/^typedef struct cfs_origin_driver * (*cfs_load_class_proc_t)(void);$/;"	t	typeref:struct:cfs_load_class_proc_t
cfs_load_driver	../netcache/cfs_driver.c	/^cfs_load_driver(char *name, char *path)$/;"	f
cfs_lock_driver	../netcache/cfs_driver.c	/^cfs_lock_driver(cfs_origin_driver_t *drv, cfs_lock_t shared)$/;"	f
cfs_lock_exclusive	../include/cfs_driver.h	/^cfs_lock_exclusive = 0,$/;"	e	enum:__anon27
cfs_lock_shared	../include/cfs_driver.h	/^cfs_lock_shared = 1$/;"	e	enum:__anon27
cfs_lock_t	../include/cfs_driver.h	/^} cfs_lock_t;$/;"	t	typeref:enum:__anon27
cfs_mkdir	../netcache/cfs_driver.c	/^cfs_mkdir(nc_volume_context_t *mc, char *path, mode_t mode)$/;"	f
cfs_mknod	../netcache/cfs_driver.c	/^cfs_mknod(nc_volume_context_t *mc, char *path, mode_t mode, void *hint, int hint_len)$/;"	f
cfs_monitor	../netcache/cfs_apix.c	/^cfs_monitor()$/;"	f
cfs_notifier_callback_t	../include/cfs_driver.h	/^typedef int (*cfs_notifier_callback_t)(struct cfs_origin_driver *drv, int cmd, void *val, int len, struct nc_volume_context *mc);$/;"	t
cfs_off_t	../include/cfs_driver.h	/^typedef long long			cfs_off_t;$/;"	t
cfs_open	../netcache/cfs_driver.c	/^cfs_open(nc_volume_context_t *mc, char *path, void *hint, int hint_len, int mode, nc_xtra_options_t *opt)$/;"	f
cfs_origin_driver	../include/cfs_driver.h	/^typedef struct cfs_origin_driver {$/;"	s
cfs_origin_driver_t	../include/cfs_driver.h	/^} cfs_origin_driver_t;$/;"	t	typeref:struct:cfs_origin_driver
cfs_read_vector	../netcache/cfs_driver.c	/^cfs_read_vector(nc_volume_context_t *mc, nc_asio_vector_t *vector, nc_origin_session_t ctx)$/;"	f
cfs_readdir	../netcache/cfs_driver.c	/^cfs_readdir(	nc_volume_context_t 	*mc,$/;"	f
cfs_readdir_cb_t	../netcache/cfs_driver.c	/^} cfs_readdir_cb_t;$/;"	t	typeref:struct:__anon4	file:
cfs_readdir_proc	../netcache/cfs_driver.c	/^cfs_readdir_proc(	$/;"	f	file:
cfs_rename	../netcache/cfs_driver.c	/^cfs_rename(nc_volume_context_t *mc, dev_file_handle_t *dh, char *src, char *dest)$/;"	f
cfs_rmdir	../netcache/cfs_driver.c	/^cfs_rmdir(nc_volume_context_t *mc, char *path)$/;"	f
cfs_set_lasterror	../netcache/cfs_driver.c	/^cfs_set_lasterror(nc_volume_context_t *mc, int v)$/;"	f
cfs_set_notifier	../netcache/cfs_driver.c	/^cfs_set_notifier(cfs_origin_driver_t *drv, cfs_notifier_callback_t cb, nc_volume_context_t *mnt)$/;"	f
cfs_set_read_range	../netcache/cfs_driver.c	/^cfs_set_read_range(nc_volume_context_t *mc, nc_origin_session_t ctx, nc_int64_t offset, nc_int64_t length)$/;"	f
cfs_set_trace	../netcache/cfs_driver.c	/^void cfs_set_trace(nc_volume_context_t *mc, int onoff)$/;"	f
cfs_size_t	../include/cfs_driver.h	/^typedef unsigned long long 	cfs_size_t;$/;"	t
cfs_statfs	../netcache/cfs_driver.c	/^cfs_statfs(nc_volume_context_t *mc, char *path, nc_statvfs_t *fs)$/;"	f
cfs_stream_read_done_handler_t	../include/cfs_driver.h	/^typedef void (*cfs_stream_read_done_handler_t)(cfs_iov_t *iov, int result);$/;"	t
cfs_truncate	../netcache/cfs_driver.c	/^cfs_truncate(nc_volume_context_t *mc, char *path, nc_size_t len)$/;"	f
cfs_unbind_context	../netcache/cfs_driver.c	/^cfs_unbind_context(nc_volume_context_t *mc)$/;"	f
cfs_unbind_context_x	../netcache/cfs_driver.c	/^cfs_unbind_context_x(nc_volume_context_t *mc, int ctxtype)$/;"	f
cfs_unlink	../netcache/cfs_driver.c	/^cfs_unlink(nc_volume_context_t *mc, char *path, nc_xtra_options_t *req, nc_xtra_options_t **res)$/;"	f
cfs_unload_all	../netcache/cfs_driver.c	/^cfs_unload_all()$/;"	f
cfs_unlock_driver	../netcache/cfs_driver.c	/^cfs_unlock_driver(cfs_origin_driver_t *drv, cfs_lock_t shared)$/;"	f
cfs_update_hint_callback_t	../include/cfs_driver.h	/^typedef int (*cfs_update_hint_callback_t)(struct nc_volume_context *msc, char *path, void *hint, int hint_len);$/;"	t
cfs_update_result_callback_t	../include/cfs_driver.h	/^typedef int (*cfs_update_result_callback_t)(struct nc_volume_context *msc, char *path, int errcode);$/;"	t
cfs_utimens	../netcache/cfs_driver.c	/^cfs_utimens(nc_volume_context_t *mc, char *path, struct nc_timespec tv[2])$/;"	f
cfs_valid_session	../netcache/cfs_driver.c	/^cfs_valid_session(nc_volume_context_t *mc, nc_origin_session_t ctx, char *path, nc_off_t *off, nc_size_t *len)$/;"	f
cfs_write_stream	../netcache/cfs_driver.c	/^cfs_write_stream(void *file_handle, char *buf, nc_ssize_t len)$/;"	f
cfs_write_vector	../netcache/cfs_driver.c	/^cfs_write_vector(nc_volume_context_t *mc, nc_asio_vector_t *vector)$/;"	f
chdr	../include/netcache.h	/^	fc_common_header_t	chdr;$/;"	m	struct:tag_fc_header_info_v30
check_file_exist	../test/integrity_test.c	/^check_file_exist(char *vsignature, char *path, char *key, int cver, nc_obitinfo_t obi, uuid_t uuid)$/;"	f
check_idle	../include/lru.h	/^  	fc_check_idle_t		check_idle;$/;"	m	struct:tag_lru_root
check_timer	../netcache/wb_timer.c	/^static inline void check_timer(struct timer_list *timer)$/;"	f	file:
check_timer_failed	../netcache/wb_timer.c	/^static void check_timer_failed(struct timer_list *timer)$/;"	f	file:
chkscanned	../include/cyclic_lfu.h	/^	nc_int64_t			chkscanned; \/* navi'ed nodes to find victim *\/$/;"	m	struct:__anon32
chkvictim	../include/cyclic_lfu.h	/^	nc_int64_t			chkvictim;  \/* victime check count *\/$/;"	m	struct:__anon32
chunked	../include/ncapi.h	/^	nc_uint32_t 		chunked:1;			\/* 객체가 chunked transfer-encoding인 경우 *\/$/;"	m	struct:nc_object_info_tag
chunked	../include/netcache_types.h	/^			  	nc_uint64_t 		chunked:1;			\/* 객체의 transfer-encoding: chunked 였던 경우 *\/$/;"	m	struct:__anon65::bitefields
cidx	../include/asio.h	/^	int 				  	cidx; \/* context index *\/$/;"	m	struct:__anon23
clear_bit	../include/non-atomic.h	/^static inline void clear_bit(int nr, volatile unsigned long *addr)$/;"	f
clfu_add	../netcache/clfu.c	/^clfu_add(fc_clfu_root_t *root, void *data, lru_node_t *cn)$/;"	f
clfu_cached	../netcache/clfu.c	/^clfu_cached(lru_node_t *node)$/;"	f
clfu_check_pop	../netcache/clfu.c	/^clfu_check_pop(fc_clfu_root_t *root, int cursor)$/;"	f
clfu_clean	../netcache/clfu.c	/^clfu_clean(fc_clfu_root_t *mptr, fc_destructor_t free_proc)$/;"	f
clfu_compare_bl_stat	../netcache/clfu.c	/^clfu_compare_bl_stat(const void *a, const void *b)$/;"	f	file:
clfu_create	../netcache/clfu.c	/^clfu_create(void *givenlock, $/;"	f
clfu_dump	../netcache/clfu.c	/^clfu_dump(fc_clfu_root_t *root, fc_dump_node_proc_t proc, int forward)$/;"	f
clfu_find_lru	../netcache/clfu.c	/^clfu_find_lru(fc_clfu_root_t *root, lru_node_t *cn)$/;"	f	file:
clfu_for_each	../netcache/clfu.c	/^clfu_for_each(fc_clfu_root_t *root, int (* proc)(void *, void *), void *ud, int forward)$/;"	f
clfu_get_stat	../netcache/clfu.c	/^clfu_get_stat(fc_clfu_root_t *root, int *bottom_per, int *base_cnt, int *kept, int *total)$/;"	f
clfu_hit	../netcache/clfu.c	/^clfu_hit(fc_clfu_root_t *root, lru_node_t *cn, int ntimes)$/;"	f
clfu_is_hot	../netcache/clfu.c	/^clfu_is_hot(fc_clfu_root_t *root, lru_node_t *cn)$/;"	f
clfu_kept_count	../netcache/clfu.c	/^clfu_kept_count(fc_clfu_root_t *root)$/;"	f
clfu_lock	../netcache/clfu.c	/^clfu_lock(fc_clfu_root_t *root, clfu_lock_mode_t lockmode, char *f, int l)$/;"	f
clfu_lock_mode_t	../include/cyclic_lfu.h	/^typedef enum {CLFU_LM_SHARED=1, CLFU_LM_EXCLUSIVE=2} clfu_lock_mode_t;$/;"	t	typeref:enum:__anon31
clfu_lock_type_t	../include/cyclic_lfu.h	/^typedef enum {CLFU_LT_NULL=0, CLFU_LT_UPGRADABLE=1, CLFU_LT_EXCLUSIVE=2} clfu_lock_type_t;$/;"	t	typeref:enum:__anon30
clfu_lookup_bl_stat	../netcache/clfu.c	/^clfu_lookup_bl_stat(char *f, int l)$/;"	f	file:
clfu_reclaim_node	../netcache/clfu.c	/^clfu_reclaim_node(fc_clfu_root_t *root)$/;"	f
clfu_remove	../netcache/clfu.c	/^clfu_remove(fc_clfu_root_t *root, lru_node_t *node)$/;"	f
clfu_report_bl_stat	../netcache/clfu.c	/^clfu_report_bl_stat()$/;"	f
clfu_set_debug	../netcache/clfu.c	/^clfu_set_debug(fc_clfu_root_t *root)$/;"	f
clfu_set_max	../netcache/clfu.c	/^clfu_set_max(fc_clfu_root_t *root, int cnt)$/;"	f
clfu_set_signature	../netcache/clfu.c	/^clfu_set_signature(fc_clfu_root_t *root, const char *signature)$/;"	f
clfu_sort_by_holdtime	../netcache/clfu.c	/^clfu_sort_by_holdtime(const void *a, const void *b)$/;"	f	file:
clfu_spin	../netcache/clfu.c	/^clfu_spin(fc_clfu_root_t *clfu_root)$/;"	f
clfu_unlock	../netcache/clfu.c	/^clfu_unlock(fc_clfu_root_t *root, char *f, int l)$/;"	f
clfu_update_bl_stat	../netcache/clfu.c	/^clfu_update_bl_stat(bl_t *found, double msec)$/;"	f	file:
clfu_upgrade	../netcache/clfu.c	/^clfu_upgrade(fc_clfu_root_t *root, fc_lru_root_t *lru, void *data, lru_node_t *ln)$/;"	f
clfu_upgradelock	../netcache/clfu.c	/^clfu_upgradelock(fc_clfu_root_t *root, char *f, int l)$/;"	f
client	../include/netcache.h	/^	void						*client; \/* tproxy 기능에 필요한 client의 정보 *\/$/;"	m	struct:tag_nc_kv_list
client_data_len	../include/netcache.h	/^	nc_size_t					client_data_len;$/;"	m	struct:tag_nc_kv_list
clock	../include/cyclic_lfu.h	/^	unsigned int 	clock; \/* initially 0, increased by 1 in every spin *\/$/;"	m	struct:__anon32
clockstamp	../include/lru.h	/^	nc_uint32_t				clockstamp; \/* refer to clfu *\/$/;"	m	struct:__anon37
close	../include/cfs_driver.h	/^	int								(*close)(dev_file_handle_t *handle);$/;"	m	struct:cfs_origin_driver
close_bfd_ctx	../netcache/backtrace.c	/^close_bfd_ctx(struct bfd_ctx *bc)$/;"	f	file:
close_context_t	../include/netcache.h	/^} close_context_t;$/;"	t	typeref:struct:tag_close_context
close_monitor_file	../test/driver_test.c	/^close_monitor_file()$/;"	f
clrtid	../netcache/util.c	/^clrtid()$/;"	f
cluster_ip	../test/driver_test.c	/^char 			cluster_ip[128]="";$/;"	v
cluster_ttl	../test/driver_test.c	/^int 			cluster_ttl=1;$/;"	v
clz	../netcache/bt_timer.c	64;"	d	file:
cnt	../include/log.h	/^    int    cnt;            \/\/ Log Count$/;"	m	struct:_log_handle
cnt	../netcache/mdb.c	/^	int 		cnt;$/;"	m	struct:property_pack_info	file:
cnt_client_bytes	../include/cfs_driver.h	/^	nc_uint64_t 					cnt_client_bytes;$/;"	m	struct:nc_volume_context
cnt_close	../include/cfs_driver.h	/^	nc_uint16_t						cnt_close; \/* # of calls of driver->close *\/$/;"	m	struct:nc_volume_context
cnt_create	../include/cfs_driver.h	/^	nc_uint16_t						cnt_create; \/* # of calls of driver->create *\/$/;"	m	struct:nc_volume_context
cnt_getattr	../include/cfs_driver.h	/^	nc_uint16_t						cnt_getattr; \/* # of calls of driver->getattr *\/$/;"	m	struct:nc_volume_context
cnt_mkdir	../include/cfs_driver.h	/^	nc_uint16_t						cnt_mkdir; \/* # of calls of driver->mkdir *\/$/;"	m	struct:nc_volume_context
cnt_mknod	../include/cfs_driver.h	/^	nc_uint16_t						cnt_mknod; \/* # of calls of driver->mknod *\/$/;"	m	struct:nc_volume_context
cnt_open	../include/cfs_driver.h	/^	nc_uint16_t						cnt_open; \/* # of calls of driver->open *\/$/;"	m	struct:nc_volume_context
cnt_origin_bytes	../include/cfs_driver.h	/^	nc_uint64_t 					cnt_origin_bytes;$/;"	m	struct:nc_volume_context
cnt_read	../include/cfs_driver.h	/^	nc_uint16_t						cnt_read; \/* # of calls of driver->read *\/$/;"	m	struct:nc_volume_context
cnt_readdir	../include/cfs_driver.h	/^	nc_uint16_t						cnt_readdir; \/* # of calls of driver->readdir *\/$/;"	m	struct:nc_volume_context
cnt_rename	../include/cfs_driver.h	/^	nc_uint16_t						cnt_rename; \/* # of calls of driver->rename *\/$/;"	m	struct:nc_volume_context
cnt_rmdir	../include/cfs_driver.h	/^	nc_uint16_t						cnt_rmdir; \/* # of calls of driver->rmdir *\/$/;"	m	struct:nc_volume_context
cnt_truncate	../include/cfs_driver.h	/^	nc_uint16_t						cnt_truncate; \/* # of calls of driver->truncate *\/$/;"	m	struct:nc_volume_context
cnt_unlink	../include/cfs_driver.h	/^	nc_uint16_t						cnt_unlink; \/* # of calls of driver->unlink *\/$/;"	m	struct:nc_volume_context
cnt_utimens	../include/cfs_driver.h	/^	nc_uint16_t						cnt_utimens; \/* # of calls of driver->utimens *\/$/;"	m	struct:nc_volume_context
cnt_write	../include/cfs_driver.h	/^	nc_uint16_t						cnt_write; \/* # of calls of driver->write *\/$/;"	m	struct:nc_volume_context
coldcaching	../test/driver_test.c	/^int 			coldcaching = 0;$/;"	v
collection_time	../include/ncapi.h	/^	nc_uint16_t		collection_time; \/* time when this statistis collection started *\/$/;"	m	struct:nc_volume_stat
command	../include/cfs_driver.h	/^	nc_cc_command_t	command;$/;"	m	struct:tag_nc_open_cc_quark
command	../include/ncapi.h	/^	nc_uint8_t 		command;  \/* JC_PURGE\/JC_PRELOAD *\/$/;"	m	struct:__anon42
command	../test/test_kv.c	/^	int 	command;$/;"	m	struct:tag_option	file:
command	../test/test_path.c	/^	int 	command;$/;"	m	struct:tag_option	file:
comp_pattern	../include/netcache.h	/^	void 				*comp_pattern; 	\/* 컴파일된 패턴 핸들*\/$/;"	m	struct:__anon54
compare_ml_stat	../netcache/util.c	/^compare_ml_stat(const void *a, const void *b)$/;"	f	file:
complete	../include/ncapi.h	/^	nc_uint32_t 		complete:1;			\/* 객체가 풀 캐싱된 경우엔 1, 아니면 0 *\/$/;"	m	struct:nc_object_info_tag
complete	../include/netcache_types.h	/^			  	nc_uint64_t      	complete:1; 		\/* 1 if all blocks are cached *\/$/;"	m	struct:__anon65::bitefields
completed	../include/asio.h	/^	nc_uint8_t				completed:1; 	\/* io complete, applied to cachemgr *\/$/;"	m	struct:nc_asio_context
completed	../include/block.h	/^	int					completed;$/;"	m	struct:tag_blk_apc_read_info
completed	../include/ncapi.h	/^	nc_int32_t 		completed;  \/* success count= completed - error, inprogress count=total - complete *\/$/;"	m	struct:__anon42
completed	../netcache/fhops.c	/^	int 				completed;$/;"	m	struct:fio_open_sync_info	file:
cond	../netcache/mdb.c	/^  pthread_cond_t cond;               \/* Condition variable to wait on *\/$/;"	m	struct:UnlockNotification	file:
condition_init	../netcache/util.c	/^condition_init(pthread_cond_t *cond)$/;"	f
condition_wait	../netcache/util.c	/^condition_wait(pthread_mutex_t *lock, pthread_cond_t *cond, long msec, int (*completed)(void *), void *cb, int forever)$/;"	f
container_of	../include/bt_tmlist.h	56;"	d
contentversion	../include/netcache.h	/^  	nc_uint32_t						contentversion; 	\/* the same as above *\/$/;"	m	struct:tag_fc_inode_info
continue_ifrunout	../include/glru.h	/^	int 			(*continue_ifrunout)(int alloced); \/* TRUE 리턴시 지정갯수 초과할당 상황이라도 추가할당 *\/$/;"	m	struct:tag_glru_operations
continue_ifrunout	../include/glru.h	/^	int 			(*continue_ifrunout)(int alloced);$/;"	m	struct:tag_glru
cookie	../include/netcache_types.h	/^			  	nc_uint64_t			cookie:1;			\/* cookie presents *\/$/;"	m	struct:__anon65::bitefields
count	../include/glru.h	/^	int 				count;$/;"	m	struct:tag_glru
count	../include/netcache.h	/^	int 				count; 		\/* purge 갯수 *\/$/;"	m	struct:__anon54
count	../include/netcache.h	/^	int 				count;$/;"	m	struct:__anon53
count	../include/util.h	/^	int 					count;$/;"	m	struct:tag_link_list
count	../include/util.h	/^	long 	count;$/;"	m	struct:__anon68
count	../netcache/clfu.c	/^	long long	count;$/;"	m	struct:tag_bl_t	file:
count	../netcache/diskcache.c	/^	long							count;$/;"	m	struct:tag_cachedir_state	file:
count	../netcache/heaptrack.c	/^	int			count;$/;"	m	struct:__anon6	file:
count	../netcache/heaptrack.c	/^	long		count;		\/* total alloc calls not freed *\/$/;"	m	struct:leak_info	file:
count	../netcache/part_mgr.c	/^	int					count;$/;"	m	struct:tag_part_table_info	file:
count	../netcache/part_mgr.c	/^	int 					count; \/* # of active paritions when creating this job*\/$/;"	m	struct:tag_query_inode	file:
count	../netcache/util.c	/^	long long	count;$/;"	m	struct:tag_mls_t	file:
count	../netcache/util.c	/^	nc_int32_t 		count; 		\/* # of allocations not freed yet *\/$/;"	m	struct:__anon11	file:
count	../netcache/util.c	/^        int					count;$/;"	m	struct:tag_alloc_info	file:
count	../netcache/volumeops.c	/^	int					count;		$/;"	m	struct:tag_PL_oi	file:
count	../netcache/volumeops.c	/^	long long	count;$/;"	m	struct:tag_pls_t	file:
count	../test/sorteddll.c	/^	int 					count;$/;"	m	struct:tag_link_list	file:
count_bits	../netcache/util.c	/^count_bits(volatile unsigned long *addr, int n)$/;"	f
counter	../netcache/backtrace.c	/^	bfd_vma counter;$/;"	m	struct:find_info	file:
counter	../rwtest/rwtest.c	/^int		counter;$/;"	v
countof	../netcache/bt_timer.c	18;"	d	file:
cptr	../test/vstr_test.c	/^typedef char *			cptr;$/;"	t	file:
crc	../include/netcache.h	/^  	nc_crc_t			crc; 				\/* 32bit header CRC *\/$/;"	m	struct:tag_fc_header_info_v30
crc32_1byte	../netcache/crc32.c	/^uint32_t crc32_1byte(const void *data, size_t length)$/;"	f
crc32_4bytes	../netcache/crc32.c	/^uint32_t crc32_4bytes(const void *data, size_t length)$/;"	f
crc32_8bytes	../netcache/crc32.c	/^crc32_8bytes(const void *data, size_t length)$/;"	f
crc32_8bytes_stream	../netcache/crc32.c	/^crc32_8bytes_stream(struct tag_blk_stream *blkstream, int length)$/;"	f
crc32_bitwise	../netcache/crc32.c	/^uint32_t crc32_bitwise(const void *data, size_t length)$/;"	f
crc32_halfbyte	../netcache/crc32.c	/^uint32_t crc32_halfbyte(const void *data, size_t length)$/;"	f
crc_errcnt	../include/netcache.h	/^	nc_int8_t 						crc_errcnt;		\/* crc error count *\/$/;"	m	struct:tag_fc_inode_info
crc_init	../netcache/util.c	/^crc_init()$/;"	f
crcsize	../include/netcache.h	/^	nc_uint32_t 					crcsize;$/;"	m	struct:tag_fc_inode_info
create	../include/cfs_driver.h	/^	struct dev_file_handle *		(*create)(struct cfs_origin_driver *drv, char *path, int mode, void *hint, int hint_len, nc_xtra_options_t *);$/;"	m	struct:cfs_origin_driver	typeref:struct:cfs_origin_driver::create
create_instance	../include/cfs_driver.h	/^	struct cfs_origin_driver *		(*create_instance)(char *signature, cfs_update_hint_callback_t hint_proc, cfs_update_result_callback_t result_proc); $/;"	m	struct:cfs_origin_driver	typeref:struct:cfs_origin_driver::create_instance
created	../include/netcache_types.h	/^			  	nc_uint64_t      	created:1; 			\/* inode가 신규로 생성된 경우 1 *\/$/;"	m	struct:__anon65::bitefields
cstat	../include/netcache.h	/^	nc_uint8_t						cstat; \/* cache stat *\/$/;"	m	struct:tag_fc_inode_info
ctime	../include/netcache.h	/^	nc_time_t			ctime; 				\/* 원본 생성 시각*\/$/;"	m	struct:tag_fc_header_info_v30
ctime	../include/netcache.h	/^	nc_time_t			ctime;$/;"	m	struct:tag_nc_mdb_inode_info
ctime	../include/netcache.h	/^  	nc_time_t      					ctime; 			\/**<cache 생성 시간*\/$/;"	m	struct:tag_fc_inode_info
ctime	../netcache/mdb.c	/^	nc_time_t		ctime;$/;"	m	struct:mdb_inserti_tag	file:
ctime	../util/nc_convert.c	/^	time_t            ctime;$/;"	m	struct:tag_fc_old_header_info	file:
ctx	../include/cfs_driver.h	/^	nc_origin_info_t 				*ctx;$/;"	m	struct:cfs_origin_driver
ctx_cnt	../include/cfs_driver.h	/^	int 							ctx_cnt; \/* # of context for a volume point *\/$/;"	m	struct:cfs_origin_driver
ctx_waitq	../include/netcache.h	/^	link_list_t						ctx_waitq; \/*nc_read요청 중 IO완료를 대기하는 대기열 *\/$/;"	m	struct:tag_fc_inode_info
ctx_waitq_age	../include/netcache.h	/^	nc_uint32_t						ctx_waitq_age;$/;"	m	struct:tag_fc_inode_info
ctz	../netcache/bt_timer.c	63;"	d	file:
current	../include/cyclic_lfu.h	/^	int				current;$/;"	m	struct:__anon32
current_dra	../include/netcache.h	/^	nc_int16_t 						current_dra;$/;"	m	struct:tag_fc_inode_info
current_nra	../include/netcache.h	/^	nc_int16_t 						current_nra;$/;"	m	struct:tag_fc_inode_info
cursor	../include/netcache.h	/^	DIR		*cursor;			\/* opendir*\/$/;"	m	struct:tag_expire_info
cursor	../include/netcache.h	/^	char					*cursor;$/;"	m	struct:apc_read_context
curtime	../netcache/bt_timer.c	/^	uint64_t			curtime;$/;"	m	struct:timerwheels	file:
custom_allocator	../include/netcache.h	/^	int 						custom_allocator;$/;"	m	struct:tag_nc_kv_list
cv	../netcache/volumeops.c	/^	nc_uint32_t				cv;$/;"	m	struct:orphanize_info	file:
cversion	../include/netcache.h	/^	nc_uint32_t			cversion;		\/* ir #24803 : 0인경우 1로 간주 , *\/$/;"	m	struct:tag_fc_header_info_v30
cversion	../include/netcache.h	/^	nc_uint32_t			cversion;$/;"	m	struct:purge_info
cversion	../include/netcache.h	/^	nc_uint32_t 		cversion; 		\/* ir #24803 : caching version *\/$/;"	m	struct:tag_nc_mdb_inode_info
cversion	../include/netcache.h	/^  	nc_uint32_t						cversion; 		\/* ir #24803 : caching version *\/$/;"	m	struct:tag_fc_inode_info
cversion	../netcache/mdb.c	/^	nc_uint32_t		cversion;$/;"	m	struct:mdb_inserti_tag	file:
cversion	../netcache/mdb.c	/^	nc_uint32_t		cversion;$/;"	m	struct:mdb_removei_tag	file:
d	../netcache/heaptrack.c	/^	void 			*d;$/;"	m	struct:node_	file:
data	../include/netcache.h	/^	char			data[4]; \/* for alignement purpose *\/$/;"	m	struct:tag_vstring
data	../include/netcache_types.h	/^	void					*data;$/;"	m	struct:tag_link_node
data	../include/wb_timer.h	/^	void	*data;$/;"	m	struct:__anon70
data	../include/wb_timer.h	/^	void 				*data;$/;"	m	struct:timer_list
data	../netcache/heaptrack.c	/^	char				data[0];$/;"	m	struct:__anon7	file:
data	../netcache/heaptrack.c	/^	void					*data;$/;"	m	struct:tag_shash_entry	file:
data	../netcache/wb_timer.c	/^	void	*data;$/;"	m	struct:tag_fork_run_info	file:
data	../test/sorteddll.c	/^	void					*data;$/;"	m	struct:tag_link_node	file:
data	../test/vstr_test.c	/^	char			data[4]; \/* for alignement purpose *\/$/;"	m	struct:tag_vstring	file:
dataidx	../netcache/ringbuffer.c	/^	int				dataidx; 	\/* 저장된 데이타의 첫번째 바이트 위치 *\/$/;"	m	struct:tag_nc_ringbuffer	file:
datasiz	../netcache/ringbuffer.c	/^	int				datasiz;	\/* 저장된 데이터 크기 *\/$/;"	m	struct:tag_nc_ringbuffer	file:
dblrupath	../netcache/mdb.c	/^	char				dblrupath[1024]; \/* lru db , temporary!!!*\/$/;"	m	struct:tag_nc_mdb_handle	file:
dbpath	../netcache/mdb.c	/^	char				dbpath[1024];$/;"	m	struct:tag_nc_mdb_handle	file:
dbvolpath	../netcache/mdb.c	/^	char				dbvolpath[1024];$/;"	m	struct:tag_nc_mdb_handle	file:
debug	../include/cyclic_lfu.h	/^ 	int 			debug;$/;"	m	struct:__anon32
debug	../netcache/hash.c	/^	int				    debug;$/;"	m	struct:u_hash_table	file:
decade	../include/netcache.h	/^	nc_int64_t	decade;$/;"	m	struct:__anon43
del_timer	../netcache/wb_timer.c	/^int del_timer(void *vt_base, struct timer_list *timer)$/;"	f
del_timer_sync	../include/wb_timer.h	155;"	d
delok	../include/netcache.h	/^	int					delok;$/;"	m	struct:purge_info
destroy_instance	../include/cfs_driver.h	/^	int 							(*destroy_instance)(struct cfs_origin_driver *driver);$/;"	m	struct:cfs_origin_driver
destroy_timer	../include/wb_timer.h	/^static inline int destroy_timer(struct timer_list *timer)$/;"	f
dev_file_handle	../include/cfs_driver.h	/^typedef struct dev_file_handle {$/;"	s
dev_file_handle_t	../include/cfs_driver.h	/^} dev_file_handle_t;$/;"	t	typeref:struct:dev_file_handle
devclass	../include/cfs_driver.h	/^	struct cfs_origin_driver		*devclass;$/;"	m	struct:cfs_origin_driver	typeref:struct:cfs_origin_driver::cfs_origin_driver
device_id	../include/ncapi.h	/^	char 				*device_id;			\/* 객체의 unique ID string, HTTP의 경우 etag, 존재하지 않으면 NULL *\/$/;"	m	struct:nc_object_info_tag
devid	../include/netcache.h	/^	dev_t			devid;$/;"	m	struct:tag_part_element
devid	../include/netcache.h	/^	nc_devid_t			devid;				\/* device id, ex: etag *\/$/;"	m	struct:tag_fc_header_info_v30
devid	../include/netcache.h	/^	nc_devid_t			devid;$/;"	m	struct:tag_nc_mdb_inode_info
devid	../include/netcache.h	/^	nc_devid_t 						devid;			\/**<특정 deivce에 저장된 객체의 ID *\/$/;"	m	struct:tag_fc_inode_info
devid	../netcache/mdb.c	/^	nc_devid_t 		devid;			\/**<특정 deivce에 저장된 객체의 ID *\/$/;"	m	struct:mdb_inserti_tag	file:
digest	../include/md5.h	/^  unsigned char digest[16];     \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon38
dio_block_io	../netcache/disk_io_ops.c	/^dio_block_io(nc_asio_vector_t *asiov, int ctxidx, nc_asio_type_t type, tp_data_t tcb)$/;"	f
dio_block_io_vector	../netcache/disk_io_ops.c	/^dio_block_io_vector(nc_asio_vector_t *asiov, nc_asio_type_t type, tp_data_t tcb)$/;"	f
dio_callback_t	../include/disk_io.h	/^typedef void (*dio_callback_t)(int fd, long long off, size_t len, char *buf, int err, void *cb);$/;"	t
dio_close_file	../netcache/disk_io_ops.c	/^dio_close_file(int fd)$/;"	f
dio_count_ioq	../netcache/disk_io_ops.c	/^dio_count_ioq(nc_part_element_t *part, int opcode, int isdone, int cnt)$/;"	f	file:
dio_done_context_t	../include/netcache.h	/^} dio_done_context_t;$/;"	t	typeref:struct:tag_dio_done_context
dio_file_size	../netcache/disk_io_ops.c	/^dio_file_size(int fd, nc_size_t *sz)$/;"	f
dio_get_params	../netcache/disk_io_ops.c	/^dio_get_params(void *viocb, nc_asio_vector_t **v, int *bidx, long *transfered, long *error)$/;"	f
dio_get_wait	../netcache/disk_io_ops.c	/^dio_get_wait(int *maxios, int *pending)$/;"	f
dio_handle_completed	../netcache/disk_io_ops.c	/^dio_handle_completed(void *ud, void *tcb) $/;"	f	file:
dio_init	../netcache/disk_io_ops.c	/^dio_init(int queuelen)$/;"	f
dio_io_callback_t	../netcache/disk_io_ops.c	/^typedef void (*dio_io_callback_t)(struct nc_iocb *iocb, size_t len, nc_int32_t err);$/;"	t	file:
dio_io_prep_pread	../netcache/disk_io_ops.c	/^dio_io_prep_pread(nc_iocb_t *nciocb, fc_inode_t *inode, fc_blk_t *block, nc_off_t off, void *data)$/;"	f	file:
dio_io_prep_pwrite	../netcache/disk_io_ops.c	/^dio_io_prep_pwrite(nc_iocb_t *nciocb, fc_inode_t *inode, fc_blk_t *block, nc_off_t off, void *data)$/;"	f	file:
dio_open_file	../netcache/disk_io_ops.c	/^dio_open_file(char *filename, long long fsize, int bcreat, int brdonly)$/;"	f
dio_open_file_direct	../netcache/disk_io_ops.c	/^dio_open_file_direct(char *filename, long long fsize, int bcreat, int brdonly)$/;"	f
dio_shutdown	../netcache/disk_io_ops.c	/^dio_shutdown()$/;"	f
dio_submit_done_event	../netcache/disk_io_ops.c	/^dio_submit_done_event(nc_iocb_t *iocb)$/;"	f	file:
dio_valid	../netcache/disk_io_ops.c	/^dio_valid(int fd)$/;"	f
dir_list	../test/test_kv.c	/^dir_list(nc_volume_context_t *vol, void *buf, const char *name, const nc_stat_t *statp, nc_off_t off)$/;"	f
dir_list	../test/test_path.c	/^dir_list(nc_volume_context_t *vol, void *buf, const char *name, const nc_stat_t *statp, nc_off_t off)$/;"	f
disk_header_size	../include/netcache.h	/^  	nc_int32_t			disk_header_size;	\/* 압축된 경우, 압축되어 저장된 디스크 헤더 크기 *\/$/;"	m	struct:tag_fc_common_header_info
disksize	../include/netcache.h	/^	nc_uint64_t 					disksize; \/* 디스크 객체 크기*\/$/;"	m	struct:tag_fc_inode_info
display	../include/trace.h	/^	char			display[64]; \/* for example DEBUG, TRACE, INFO,..etc *\/$/;"	m	struct:__anon67
dllist_t	../netcache/heaptrack.c	/^} dllist_t;$/;"	t	typeref:struct:__anon6	file:
dm_add_ctx_waitq	../netcache/diskcache.c	/^dm_add_ctx_waitq(fc_inode_t *inode, apc_read_context_t *rctx)$/;"	f
dm_allocate_origin_session	../netcache/diskcache.c	/^dm_allocate_origin_session(apc_open_context_t *aoc)$/;"	f
dm_apc_context_hang	../netcache/diskcache.c	/^dm_apc_context_hang(void *u)$/;"	f	file:
dm_apc_done	../netcache/diskcache.c	/^dm_apc_done(void *ud, int error)$/;"	f	file:
dm_apc_fast_reopen_internal	../netcache/diskcache.c	/^dm_apc_fast_reopen_internal(fc_inode_t *inode, apc_open_context_t *oc)$/;"	f
dm_apc_handle_event_for_freshcheck	../netcache/diskcache.c	/^dm_apc_handle_event_for_freshcheck(apc_open_context_t *oc)$/;"	f	file:
dm_apc_handle_event_for_freshcheck_internal	../netcache/diskcache.c	/^dm_apc_handle_event_for_freshcheck_internal(apc_open_context_t *oc)$/;"	f	file:
dm_apc_handle_event_for_miss	../netcache/diskcache.c	/^dm_apc_handle_event_for_miss(apc_open_context_t *oc)$/;"	f	file:
dm_apc_handle_event_for_miss_internal	../netcache/diskcache.c	/^dm_apc_handle_event_for_miss_internal(apc_open_context_t *oc)$/;"	f	file:
dm_apc_open_inode	../netcache/diskcache.c	/^dm_apc_open_inode(		nc_volume_context_t 	*volume, $/;"	f
dm_apc_open_inode_internal	../netcache/diskcache.c	/^dm_apc_open_inode_internal(apc_open_context_t *poc)$/;"	f	file:
dm_apc_prepare_context	../netcache/diskcache.c	/^dm_apc_prepare_context(apc_open_context_t *soc, int state)$/;"	f	file:
dm_apc_prepare_context_raw	../netcache/diskcache.c	/^dm_apc_prepare_context_raw(		nc_volume_context_t 	*volume, $/;"	f
dm_apc_schedule_async_open	../netcache/diskcache.c	/^dm_apc_schedule_async_open(apc_open_context_t *soc, int state, char *f, int l)$/;"	f	file:
dm_bind_block_nolock	../netcache/diskcache.c	/^dm_bind_block_nolock(fc_inode_t *inode, nc_blkno_t blkno, fc_blk_t * blk)$/;"	f
dm_bind_origin_session	../netcache/diskcache.c	/^dm_bind_origin_session(fc_inode_t *inode, nc_origin_session_t origin, char *f, int l)$/;"	f	file:
dm_block_status_batch_nolock	../netcache/diskcache.c	/^dm_block_status_batch_nolock(fc_inode_t *inode, nc_blkno_t baseno, bci_stat_t *ba, int maxm, int maxd, int maxf, int maxe, int makeref)$/;"	f
dm_block_status_nolock	../netcache/diskcache.c	/^dm_block_status_nolock(fc_inode_t *inode, fc_blk_t **blk, nc_blkno_t blkno, int makeref, char *f, int l)$/;"	f
dm_cache_offset	../netcache/diskcache.c	/^dm_cache_offset(fc_inode_t *inode, nc_blkno_t blkno)$/;"	f
dm_calc_header_size	../netcache/diskcache.c	/^dm_calc_header_size(fc_inode_t *inode)$/;"	f
dm_calc_header_size_v30	../netcache/diskcache.c	/^dm_calc_header_size_v30(fc_inode_t *inode)$/;"	f
dm_cancel_waitq	../netcache/diskcache.c	/^dm_cancel_waitq(fc_inode_t *inode, apc_read_context_t *rc)$/;"	f
dm_check_concurrent_limit_nolock	../netcache/diskcache.c	/^dm_check_concurrent_limit_nolock(fc_inode_t *inode)$/;"	f
dm_check_if_same_prop	../netcache/diskcache.c	/^dm_check_if_same_prop(fc_inode_t *inode, nc_stat_t *stat)$/;"	f
dm_check_magic	../netcache/diskcache.c	/^dm_check_magic(unsigned long mc)$/;"	f
dm_check_public	../netcache/diskcache.c	/^dm_check_public(char *path, nc_stat_t *stat, nc_mode_t mode)$/;"	f
dm_clear_uuid	../netcache/diskcache.c	/^dm_clear_uuid(uuid_t uuid)$/;"	f
dm_close_inode	../netcache/diskcache.c	/^dm_close_inode(fc_inode_t *inode, int write_close, int forceclose)$/;"	f
dm_commit_block_caching	../netcache/diskcache.c	/^dm_commit_block_caching(fc_inode_t *inode, fc_blk_t * blk)$/;"	f
dm_compare_blkno	../netcache/diskcache.c	/^dm_compare_blkno(void *a, void *b)$/;"	f	file:
dm_compress_vheader	../netcache/diskcache.c	/^dm_compress_vheader(nc_uint8_t *outbuf, nc_int32_t *outlen, nc_uint8_t *inbuf, nc_int32_t inlen)$/;"	f	file:
dm_copy_stat	../netcache/diskcache.c	/^dm_copy_stat(nc_stat_t *cobj, fc_inode_t *inode, int needclone)$/;"	f
dm_copy_stat_light	../netcache/diskcache.c	/^dm_copy_stat_light(nc_stat_t *cobj, fc_inode_t *inode)$/;"	f
dm_copy_uuid	../netcache/diskcache.c	/^dm_copy_uuid(uuid_t dest, uuid_t src)$/;"	f	file:
dm_create_cache_key	../netcache/diskcache.c	/^dm_create_cache_key(char *cache_id, char *property_list, nc_xtra_options_t *prop)$/;"	f	file:
dm_create_cache_object	../netcache/diskcache.c	/^dm_create_cache_object(	nc_volume_context_t *volume, $/;"	f	file:
dm_create_key_pair	../netcache/diskcache.c	/^dm_create_key_pair(	nc_volume_context_t *volume, $/;"	f	file:
dm_decompress_vheader	../netcache/diskcache.c	/^dm_decompress_vheader(nc_uint8_t *outbuf, nc_int32_t *outlen, nc_uint8_t *inbuf, nc_int32_t inlen)$/;"	f	file:
dm_defer_and_delegate_close	../netcache/diskcache.c	/^dm_defer_and_delegate_close(void *v)$/;"	f	file:
dm_delegate_close	../netcache/diskcache.c	/^dm_delegate_close(fc_inode_t *inode, nc_time_t attempt, int needref)$/;"	f	file:
dm_detach_driver	../netcache/diskcache.c	/^dm_detach_driver(fc_inode_t *inode, int needlock)$/;"	f
dm_disk_cacheable	../netcache/diskcache.c	/^dm_disk_cacheable(fc_inode_t *inode, int ocode)$/;"	f
dm_dump_inodes	../netcache/diskcache.c	/^dm_dump_inodes()$/;"	f
dm_dump_lv0	../netcache/diskcache.c	/^dm_dump_lv0(char *dbuf, int remained, fc_inode_t *inode)$/;"	f
dm_dump_lv1	../netcache/diskcache.c	/^dm_dump_lv1(char *dbuf, int remained, fc_inode_t *inode)$/;"	f
dm_dump_lv2	../netcache/diskcache.c	/^dm_dump_lv2(char *dbuf, int remained, fc_inode_t *inode)$/;"	f
dm_dump_mode	../netcache/diskcache.c	/^dm_dump_mode(char *buf, int len, nc_mode_t mode)$/;"	f
dm_dump_open_context	../netcache/diskcache.c	/^dm_dump_open_context(char *buf, int len, apc_open_context_t *o)$/;"	f
dm_dump_or_count_inode_opened	../netcache/diskcache.c	/^dm_dump_or_count_inode_opened(long tflag, int *total, int *free, int need_dump)$/;"	f
dm_dump_rctx	../netcache/diskcache.c	/^dm_dump_rctx(void *ud, void *cbd)$/;"	f	file:
dm_dump_waitq	../netcache/diskcache.c	/^dm_dump_waitq(char *buf, int len, fc_inode_t *inode)$/;"	f
dm_duplicate_inode	../netcache/diskcache.c	/^dm_duplicate_inode(fc_inode_t *oi, apc_open_context_t *oc)$/;"	f	file:
dm_evict_inode_nolock	../netcache/diskcache.c	/^dm_evict_inode_nolock(fc_inode_t *inode, int checkswap)$/;"	f
dm_expire_origin_session	../netcache/diskcache.c	/^dm_expire_origin_session(void *ud)$/;"	f	file:
dm_finish	../netcache/diskcache.c	/^dm_finish()$/;"	f
dm_finish_frio_nolock	../netcache/diskcache.c	/^dm_finish_frio_nolock(fc_inode_t *inode, int error)$/;"	f
dm_flush_inode	../netcache/diskcache.c	/^dm_flush_inode(fc_inode_t *inode)$/;"	f
dm_forcely_close_inode	../netcache/diskcache.c	/^dm_forcely_close_inode(fc_inode_t *inode, void *cbdata)$/;"	f
dm_free_inode	../netcache/diskcache.c	/^dm_free_inode(fc_inode_t *inode, int need_recycle)$/;"	f
dm_free_origin_session	../netcache/diskcache.c	/^dm_free_origin_session(nc_volume_context_t *volume, nc_origin_session_t origin, int bound, char *f, int l)$/;"	f
dm_get_block_nolock	../netcache/diskcache.c	/^dm_get_block_nolock(fc_inode_t *inode, nc_blkno_t blkno)$/;"	f
dm_get_case_element	../netcache/diskcache.c	/^dm_get_case_element(void *header)$/;"	f	file:
dm_get_signature	../netcache/diskcache.c	/^dm_get_signature(fc_inode_t *inode)$/;"	f
dm_hit_clfu	../netcache/diskcache.c	/^dm_hit_clfu(fc_inode_t *inode, int ntimes) $/;"	f	file:
dm_hit_clfu_nolock	../netcache/diskcache.c	/^dm_hit_clfu_nolock(fc_inode_t *inode, int ntimes) $/;"	f	file:
dm_init	../netcache/diskcache.c	/^dm_init(char *path, size_t cap, dm_reclaim_inode_callback_t proc)$/;"	f
dm_inode_check_owned	../netcache/diskcache.c	/^dm_inode_check_owned(fc_inode_t *inode)$/;"	f
dm_inode_for_each_property	../netcache/diskcache.c	/^dm_inode_for_each_property(fc_inode_t *inode, int (*do_it)(char *key, char *val, void *cb), void *cb)$/;"	f
dm_inode_idle	../netcache/diskcache.c	/^dm_inode_idle(void *vf)$/;"	f
dm_inode_lock	../netcache/diskcache.c	/^dm_inode_lock(fc_inode_t *inode, char *f, int l)$/;"	f
dm_inode_locked	../netcache/diskcache.c	/^dm_inode_locked()$/;"	f
dm_inode_offline_accessible	../netcache/diskcache.c	/^dm_inode_offline_accessible(nc_volume_context_t *volume, fc_inode_t *inode)$/;"	f	file:
dm_inode_size	../netcache/diskcache.c	/^dm_inode_size(fc_inode_t *inode, int realdatasize)$/;"	f
dm_inode_stat	../netcache/diskcache.c	/^dm_inode_stat(nc_volume_context_t *volume, char *cache_id, char *origin_path, nc_stat_t *stat, void *stat_hint, int *hint_len, nc_kv_list_t *kv, nc_mode_t mode, nc_hit_status_t *stathit, int enablemonitor)$/;"	f
dm_inode_unlock	../netcache/diskcache.c	/^dm_inode_unlock(fc_inode_t *inode, char *f, int l)$/;"	f
dm_inquiry_property	../netcache/diskcache.c	/^dm_inquiry_property(apc_open_context_t *oc)$/;"	f	file:
dm_invalidate_blks	../netcache/diskcache.c	/^dm_invalidate_blks(fc_inode_t *inode)$/;"	f	file:
dm_io_add_vector_nolock	../netcache/diskcache.c	/^dm_io_add_vector_nolock(fc_inode_t *inode, nc_asio_vector_t *v)$/;"	f
dm_io_remove_vector_nolock	../netcache/diskcache.c	/^dm_io_remove_vector_nolock(fc_inode_t *inode, nc_asio_vector_t *v)$/;"	f
dm_is_dirty	../netcache/diskcache.c	/^dm_is_dirty(fc_inode_t *inode)$/;"	f	file:
dm_is_header_dirty	../netcache/diskcache.c	/^dm_is_header_dirty(fc_inode_t *inode)$/;"	f	file:
dm_is_inode_reusable	../netcache/diskcache.c	/^dm_is_inode_reusable(fc_inode_t *inode)$/;"	f
dm_is_iobusy	../netcache/diskcache.c	/^dm_is_iobusy(fc_inode_t *inode)$/;"	f	file:
dm_is_mdb_dirty	../netcache/diskcache.c	/^dm_is_mdb_dirty(fc_inode_t *inode)$/;"	f
dm_is_mdb_required	../netcache/diskcache.c	/^dm_is_mdb_required(fc_inode_t *inode)$/;"	f
dm_is_valid_bind_nolock	../netcache/diskcache.c	/^dm_is_valid_bind_nolock(fc_inode_t *inode, fc_blk_t *blk, nc_blkno_t blkno)$/;"	f
dm_is_vary_meta_object_nolock	../netcache/diskcache.c	/^dm_is_vary_meta_object_nolock(fc_inode_t *inode)$/;"	f	file:
dm_is_writable	../netcache/diskcache.c	/^dm_is_writable(nc_mode_t mode)$/;"	f
dm_load_disk_cache	../netcache/diskcache.c	/^dm_load_disk_cache(nc_volume_context_t *volume, char *cachekey)$/;"	f	file:
dm_load_inode_extent	../netcache/diskcache.c	/^dm_load_inode_extent(nc_volume_context_t *volume, fc_inode_t *inode, nc_size_t sz, int checkcomplete)$/;"	f	file:
dm_lookup_cache	../netcache/diskcache.c	/^dm_lookup_cache(nc_volume_context_t *volume, $/;"	f	file:
dm_make_hash_key	../netcache/diskcache.c	/^dm_make_hash_key(int casesensitive, char *key)$/;"	f
dm_make_inode_online	../netcache/diskcache.c	/^dm_make_inode_online(fc_inode_t *inode, nc_path_lock_t *pl, nc_xtra_options_t *kv)$/;"	f	file:
dm_make_report	../netcache/diskcache.c	/^dm_make_report(fc_inode_t *inode, nc_xtra_options_t *kv, nc_hit_status_t 	hs)$/;"	f	file:
dm_make_signature	../netcache/diskcache.c	/^dm_make_signature()$/;"	f
dm_make_uuid	../netcache/diskcache.c	/^dm_make_uuid(uuid_t uuid)$/;"	f
dm_max_blkno	../netcache/diskcache.c	/^dm_max_blkno(nc_size_t sz)$/;"	f
dm_need_frio	../netcache/diskcache.c	/^dm_need_frio(fc_inode_t *inode)$/;"	f
dm_need_header_update	../netcache/diskcache.c	/^dm_need_header_update(fc_inode_t *inode)$/;"	f
dm_need_iowait_nolock	../netcache/diskcache.c	/^dm_need_iowait_nolock(fc_inode_t *inode)$/;"	f
dm_need_mdb_update	../netcache/diskcache.c	/^dm_need_mdb_update(fc_inode_t *inode, const char *reason)$/;"	f
dm_need_sync	../netcache/diskcache.c	/^dm_need_sync(fc_inode_t *inode) $/;"	f	file:
dm_need_to_remove	../netcache/diskcache.c	/^dm_need_to_remove(fc_inode_t *inode)$/;"	f	file:
dm_new_inode	../netcache/diskcache.c	/^dm_new_inode(nc_int32_t uid)$/;"	f
dm_online	../netcache/diskcache.c	/^dm_online()$/;"	f
dm_open_file_ifnot	../netcache/diskcache.c	/^dm_open_file_ifnot(int fd, char *fname, nc_size_t fsize, int bcreat, int bronly)$/;"	f	file:
dm_read_bytes	../netcache/diskcache.c	/^dm_read_bytes(nc_fio_handle_t fd, char *ptr, ssize_t sz, nc_off_t base)$/;"	f	file:
dm_read_header	../netcache/diskcache.c	/^dm_read_header(nc_fio_handle_t *fd\/*IN*\/, char *cpath\/*IN*\/, size_t *memsiz\/*OUT*\/, char *errmsg)$/;"	f	file:
dm_reclaim_inode_callback_t	../include/netcache.h	/^typedef int (*dm_reclaim_inode_callback_t)(char *rfname);$/;"	t
dm_remove_inode_while_close	../netcache/diskcache.c	/^dm_remove_inode_while_close(fc_inode_t *inode)$/;"	f	file:
dm_reset_inode_nolock	../netcache/diskcache.c	/^dm_reset_inode_nolock(fc_inode_t *inode) $/;"	f
dm_resize_extent	../netcache/diskcache.c	/^dm_resize_extent(fc_inode_t *inode, nc_off_t off)$/;"	f
dm_restore_inode_extent_v30	../netcache/diskcache.c	/^dm_restore_inode_extent_v30(fc_inode_t *inode, void *header, size_t memsiz, char *errmsg, int checkcomplete)$/;"	f	file:
dm_run_waitq	../netcache/diskcache.c	/^dm_run_waitq(fc_inode_t *inode, fc_blk_t * blk, int error)$/;"	f
dm_schedule_apc_read	../netcache/diskcache.c	/^dm_schedule_apc_read(	fc_inode_t 				*inode, $/;"	f
dm_set_inode_stat	../netcache/diskcache.c	/^dm_set_inode_stat(fc_inode_t *inode, nc_stat_t *stat, nc_mode_t mode, int update_cc_for_pseudoprop)$/;"	f
dm_shutdown	../netcache/diskcache.c	/^dm_shutdown()$/;"	f
dm_size_info	../netcache/diskcache.c	/^dm_size_info(fc_inode_t *inode, char *buf, int bufsiz)$/;"	f	file:
dm_steal_origin_session	../netcache/diskcache.c	/^dm_steal_origin_session(fc_inode_t *inode, cfs_off_t off, cfs_size_t siz)$/;"	f
dm_swap_cacheobject_ifneededed	../netcache/diskcache.c	/^dm_swap_cacheobject_ifneededed(fc_inode_t *inode)$/;"	f
dm_swapout_inode_nolock	../netcache/diskcache.c	/^dm_swapout_inode_nolock(void *ui)$/;"	f
dm_sync_disk_object	../netcache/diskcache.c	/^dm_sync_disk_object(fc_inode_t *inode, int bforce, size_t *hdrsiz, char *msg)$/;"	f	file:
dm_sync_disk_object_v30	../netcache/diskcache.c	/^dm_sync_disk_object_v30(fc_inode_t *inode, size_t *hdrsiz, char *msg, nc_time_t sytime)$/;"	f	file:
dm_unbind_block_nolock	../netcache/diskcache.c	/^dm_unbind_block_nolock(fc_inode_t *inode, nc_blkno_t blkno)$/;"	f
dm_unmap_block_nolock	../netcache/diskcache.c	/^dm_unmap_block_nolock(fc_inode_t *inode, fc_blk_t *blk)$/;"	f
dm_update_block_crc_nolock	../netcache/diskcache.c	/^dm_update_block_crc_nolock(fc_inode_t *inode, long blkno, nc_crc_t crc)$/;"	f
dm_update_caching_completeness_nolock	../netcache/diskcache.c	/^dm_update_caching_completeness_nolock(fc_inode_t *inode)$/;"	f	file:
dm_update_content_version	../netcache/diskcache.c	/^dm_update_content_version(fc_inode_t *inode)$/;"	f
dm_update_disk_object_size_nolock	../netcache/diskcache.c	/^dm_update_disk_object_size_nolock(fc_inode_t *inode, nc_blkno_t pblkno)$/;"	f
dm_update_hit	../netcache/diskcache.c	/^dm_update_hit(fc_inode_t *inode)$/;"	f
dm_update_iobusy	../netcache/diskcache.c	/^dm_update_iobusy(fc_inode_t *inode)$/;"	f	file:
dm_update_misshit	../netcache/diskcache.c	/^dm_update_misshit(fc_inode_t *inode, int hit)$/;"	f
dm_update_partition_info	../netcache/diskcache.c	/^dm_update_partition_info(char *path)$/;"	f	file:
dm_update_recent_nolock	../netcache/diskcache.c	/^dm_update_recent_nolock(nc_volume_context_t *volume, fc_inode_t *inode)$/;"	f	file:
dm_update_size_with_RI_nolock	../netcache/diskcache.c	/^dm_update_size_with_RI_nolock(fc_inode_t *inode, nc_off_t off, nc_size_t len)$/;"	f
dm_update_ttl	../netcache/diskcache.c	/^dm_update_ttl(fc_inode_t *inode, nc_stat_t *stat, nc_kv_list_t *reqkv, int result, int offline)$/;"	f
dm_update_viewcount	../netcache/diskcache.c	/^dm_update_viewcount(fc_inode_t *inode)$/;"	f
dm_upsert_template	../netcache/diskcache.c	/^dm_upsert_template(apc_open_context_t *openx)$/;"	f	file:
dm_verify_allocation	../netcache/diskcache.c	/^dm_verify_allocation(fc_inode_t *inode)$/;"	f
dm_verify_block_crc	../netcache/diskcache.c	/^dm_verify_block_crc(fc_inode_t *inode, long blkno, nc_crc_t crc)$/;"	f
dm_verify_header	../netcache/diskcache.c	/^dm_verify_header(void *header)$/;"	f	file:
dm_wait_io_complete	../netcache/diskcache.c	/^dm_wait_io_complete(fc_inode_t *inode)$/;"	f	file:
dm_write_bytes	../netcache/diskcache.c	/^dm_write_bytes(fc_inode_t *inode, char *ptr, ssize_t sz, nc_off_t base)$/;"	f	file:
do_crc	../netcache/util.c	/^do_crc(char *d, int len)$/;"	f
do_crc32	../netcache/diskcache.c	/^do_crc32(char *data, ssize_t len)$/;"	f	file:
doc	../include/netcache_types.h	/^				nc_uint64_t 		doc:1; 				\/* delete on close of cache object *\/$/;"	m	struct:__anon65::bitefields
doffset	../include/netcache.h	/^	nc_uint32_t 					doffset;			\/* 캐시 파일 내에서 실제 객체 데이타가 시작되는 옵셋*\/$/;"	m	struct:tag_fc_inode_info
donesignal	../netcache/mdb.c	/^	nc_cond_t	 		donesignal;$/;"	m	struct:tag_nc_mdb_handle	file:
donewaiters	../netcache/mdb.c	/^	int					donewaiters;$/;"	m	struct:tag_nc_mdb_handle	file:
driver	../include/cfs_driver.h	/^	struct cfs_origin_driver	*driver;$/;"	m	struct:dev_file_handle	typeref:struct:dev_file_handle::cfs_origin_driver
driver	../netcache/cfs_driver.c	/^	cfs_origin_driver_t			*driver;$/;"	m	struct:tag_driver_fi	file:
driver_data	../include/cfs_driver.h	/^	void 							*driver_data;	\/* driver specific data here *\/$/;"	m	struct:cfs_origin_driver
driver_data	../include/cfs_driver.h	/^	void 						*driver_data; \/* driver-specific data (dynamically allocated) *\/$/;"	m	struct:dev_file_handle
driver_file_data	../include/netcache.h	/^  	void *							driver_file_data;	\/**<driver\/device specific IO를 수행할 때 필요한 정보 블럭에 대한 포인터 *\/$/;"	m	struct:tag_fc_inode_info
ds__libaio_queue_length	../netcache/disk_io_ops.c	/^ds__libaio_queue_length()$/;"	f
dummy	../include/netcache.h	/^	nc_uint8_t  		dummy[56]; 		\/* 예약된 영역, 향후 확장시 이 영역 사용*\/$/;"	m	struct:tag_fc_header_info_v30
dummy__	../include/lru.h	/^	nc_uint8_t 				dummy__;$/;"	m	struct:__anon37
dump	../include/glru.h	/^	int				(*dump)(char *d, int l, void *udata);$/;"	m	struct:tag_glru_operations
dump	../include/glru.h	/^	int 			(*dump)(char *d, int l, void *udata);$/;"	m	struct:tag_glru
dump	../include/lru.h	/^  	fc_dump_t 			dump;$/;"	m	struct:tag_lru_root
dump_bits	../netcache/util.c	/^dump_bits(unsigned long *bitmap, int bitlen, char *buf, int buflen, int *vbits)$/;"	f
dump_resource	../netcache/util.c	/^dump_resource(void *k, void *v, void *ud)$/;"	f	file:
dump_session	../include/cfs_driver.h	/^	char * 							(*dump_session)(char *, int, void *);$/;"	m	struct:cfs_origin_driver
dump_wait_info	../netcache/diskcache.c	/^struct dump_wait_info {$/;"	s	file:
emagic	../test/sorteddll.c	/^	unsigned short 			emagic;$/;"	m	struct:tag_link_node	file:
encoding	../include/ncapi.h	/^	char			encoding[NC_MAX_STRINGLEN]; \/* utf-8? *\/$/;"	m	struct:tag_origin_info
end	../util/nc_checkfs.c	/^	int		end;$/;"	m	struct:__anon20	file:
endof	../netcache/bt_timer.c	22;"	d	file:
enroll	../include/glru.h	/^	int 			(*enroll)(void *map, glru_node_t *node);$/;"	m	struct:tag_glru
enroll	../include/glru.h	/^	int 			(*enroll)(void *map, glru_node_t *node);$/;"	m	struct:tag_glru_operations
entry	../include/wb_timer.h	/^	struct list_head 	entry;$/;"	m	struct:timer_list	typeref:struct:timer_list::list_head
epilog	../netcache/threadpool.c	/^	tp_epilog_t			epilog;$/;"	m	struct:tag_threadpool	file:
errbuffer	../test/db.c	/^static char errbuffer[256];$/;"	v	file:
error	../include/asio.h	/^	nc_int16_t				error; 			\/* IO error code, in success, 0 *\/$/;"	m	struct:nc_asio_context
error	../include/block.h	/^	int					error;$/;"	m	struct:tag_blk_apc_read_info
error	../include/block.h	/^  	nc_int16_t			error;		\/* block error code *\/$/;"	m	struct:tag_fc_blk
error	../include/ncapi.h	/^	nc_int32_t 		error;$/;"	m	struct:__anon42
error	../include/netcache.h	/^	int					error;$/;"	m	struct:tag_dio_done_context
error	../include/netcache.h	/^	int 					error;$/;"	m	struct:apc_read_context
error	../include/netcache.h	/^	unsigned long		error;$/;"	m	struct:tag_nio_done_context
error	../netcache/disk_io_ops.c	/^	int				error;$/;"	m	struct:nc_iocb	file:
error	../netcache/fhops.c	/^	int 				error;$/;"	m	struct:fio_open_sync_info	file:
event	../netcache/ringbuffer.c	/^	pthread_cond_t 	event[2];$/;"	m	struct:tag_nc_ringbuffer	file:
exception_filter	../netcache/backtrace.c	/^exception_filter(LPEXCEPTION_POINTERS info)$/;"	f	file:
expected	../include/util.h	131;"	d
expected	../include/util.h	137;"	d
expire_info_t	../include/netcache.h	/^} expire_info_t;$/;"	t	typeref:struct:tag_expire_info
expired	../include/netcache.h	/^	long	expired;			\/* # of expired files *\/$/;"	m	struct:tag_expire_info
expired	../netcache/bt_timer.c	/^	struct				timeout_list	expired;$/;"	m	struct:timerwheels	typeref:struct:timerwheels::timeout_list	file:
expires	../include/bt_timer.h	/^	bt_timeout_t			expires; \/* absolute*\/$/;"	m	struct:timeout
expires	../include/wb_timer.h	/^	unsigned long long 	expires;$/;"	m	struct:timer_list
f_bavail	../include/netcache_types.h	/^	nc_int64_t 		f_bavail;$/;"	m	struct:tag_statvfs
f_bavail	../include/statfs.h	/^	long long 	f_bavail;$/;"	m	struct:statfs
f_bfree	../include/netcache_types.h	/^	nc_int64_t 		f_bfree;$/;"	m	struct:tag_statvfs
f_bfree	../include/statfs.h	/^	long long 	f_bfree;$/;"	m	struct:statfs
f_blocks	../include/netcache_types.h	/^	nc_int64_t 		f_blocks;$/;"	m	struct:tag_statvfs
f_blocks	../include/statfs.h	/^	long long 	f_blocks;$/;"	m	struct:statfs
f_bsize	../include/netcache_types.h	/^	nc_uint32_t		f_bsize;$/;"	m	struct:tag_statvfs
f_bsize	../include/statfs.h	/^	long 	f_bsize;$/;"	m	struct:statfs
f_favail	../include/netcache_types.h	/^	nc_int64_t 		f_favail;$/;"	m	struct:tag_statvfs
f_ffree	../include/netcache_types.h	/^	nc_int64_t 		f_ffree;$/;"	m	struct:tag_statvfs
f_ffree	../include/statfs.h	/^	long long 	f_ffree;$/;"	m	struct:statfs
f_files	../include/netcache_types.h	/^	nc_int64_t 		f_files;$/;"	m	struct:tag_statvfs
f_files	../include/statfs.h	/^	long long 	f_files;$/;"	m	struct:statfs
f_flag	../include/netcache_types.h	/^	nc_int32_t 		f_flag;$/;"	m	struct:tag_statvfs
f_frsize	../include/netcache_types.h	/^	nc_uint32_t		f_frsize;$/;"	m	struct:tag_statvfs
f_fsid	../include/netcache_types.h	/^	nc_int32_t 		f_fsid;$/;"	m	struct:tag_statvfs
f_fsid	../include/statfs.h	/^	long 		f_fsid;$/;"	m	struct:statfs
f_namelen	../include/statfs.h	/^	long 		f_namelen;$/;"	m	struct:statfs
f_namemax	../include/netcache_types.h	/^	nc_int32_t 		f_namemax;$/;"	m	struct:tag_statvfs
f_prep	../include/asio.h	/^	int 				f_prep; 	\/* prepare_context call count *\/$/;"	m	struct:nc_asio_vector
f_type	../include/statfs.h	/^	long 	f_type;$/;"	m	struct:statfs
fc_accepted	../include/cfs_driver.h	/^	char							fc_accepted[128];$/;"	m	struct:nc_volume_context
fc_alwayscheck	../include/cfs_driver.h	/^	int 							fc_alwayscheck; 	\/* 항상 check되는 항목 갯수*\/$/;"	m	struct:nc_volume_context
fc_blk_t	../include/netcache_types.h	/^typedef struct tag_fc_blk			fc_blk_t;$/;"	t	typeref:struct:tag_fc_blk
fc_block_status_t	../include/netcache.h	/^} fc_block_status_t;$/;"	t	typeref:enum:__anon44
fc_cache_file_info_t	../netcache/diskcache.c	/^} fc_cache_file_info_t;$/;"	t	typeref:struct:__anon5	file:
fc_cache_status_t	../include/netcache.h	/^} fc_cache_status_t;$/;"	t	typeref:enum:__anon45
fc_check_idle_t	../include/lru.h	/^typedef int (*fc_check_idle_t)(void *);$/;"	t
fc_clfu_root_t	../include/cyclic_lfu.h	/^} fc_clfu_root_t;$/;"	t	typeref:struct:__anon32
fc_common_header_t	../include/netcache.h	/^} fc_common_header_t;$/;"	t	typeref:struct:tag_fc_common_header_info
fc_destructor_t	../include/lru.h	/^typedef int (*fc_destructor_t)(void *);$/;"	t
fc_done_handler	../include/netcache.h	/^typedef void (*fc_done_handler)(char *buffer, int len, int err);$/;"	t
fc_dump_node_proc_t	../include/lru.h	/^typedef int (*fc_dump_node_proc_t)(char *, int n, void *data);$/;"	t
fc_dump_t	../include/lru.h	/^typedef int (*fc_dump_t)(void *);$/;"	t
fc_fault_handler	../include/netcache.h	/^typedef int (*fc_fault_handler)(void *cbdata, fc_inode_t *f, long blkno, fc_blk_t *block[], int blkcnt, fc_done_handler cb);$/;"	t
fc_file_destructor_t	../include/netcache.h	/^typedef int (*fc_file_destructor_t)(fc_inode_t *fi);$/;"	t
fc_file_t	../include/fio.h	/^} fc_file_t;$/;"	t	typeref:struct:tag_nc_file_ref
fc_file_t	../include/netcache.h	/^} fc_file_t;$/;"	t	typeref:struct:tag_nc_file_ref
fc_graph	../include/cfs_driver.h	/^	link_list_t 					fc_graph;;$/;"	m	struct:nc_volume_context
fc_header_info_v30_t	../include/netcache.h	/^typedef struct tag_fc_header_info_v30 fc_header_info_v30_t;$/;"	t	typeref:struct:tag_fc_header_info_v30
fc_inode_t	../include/netcache.h	/^} fc_inode_t;$/;"	t	typeref:struct:tag_fc_inode_info
fc_lru_root_t	../include/lru.h	/^} fc_lru_root_t;$/;"	t	typeref:struct:tag_lru_root
fc_old_header_info_t	../util/nc_convert.c	/^} fc_old_header_info_t;$/;"	t	typeref:struct:tag_fc_old_header_info	file:
fc_policy	../include/cfs_driver.h	/^	nc_uint16_t						fc_policy;$/;"	m	struct:nc_volume_context
fc_stream_t	../include/netcache.h	/^} fc_stream_t;$/;"	t	typeref:struct:tag_fc_stream_info
fcid	../netcache/volumeops.c	/^	int 					fcid;$/;"	m	struct:tag_freshcheck_entry	file:
fcname	../netcache/volumeops.c	/^	char 					fcname[32];$/;"	m	struct:tag_freshcheck_entry	file:
fd	../include/netcache.h	/^	nc_fio_handle_t					fd;$/;"	m	struct:tag_fc_inode_info
fdump	../test/mem_test.c	/^void fdump(char *l)$/;"	f
ffz	../netcache/util.c	/^ffz(unsigned long word)$/;"	f	file:
fh	../netcache/fhops.c	/^	fc_file_t 			*fh;$/;"	m	struct:fio_open_sync_info	file:
fhandle	../include/block.h	/^	nc_file_handle_t	*fhandle;$/;"	m	struct:tag_blk_apc_read_info
file	../include/block.h	/^	char			*file;$/;"	m	struct:tag_fc_blk
file	../include/netcache.h	/^	char						*file;$/;"	m	struct:tag_nc_kv_list
file	../netcache/backtrace.c	/^	const char *file;$/;"	m	struct:find_info	file:
file	../netcache/clfu.c	/^	char		*file;$/;"	m	struct:tag_bl_t	file:
file	../netcache/disk_io_ops.c	/^	fc_inode_t			*file;$/;"	m	struct:nc_iocb_xtra	file:
file	../netcache/util.c	/^	char		*file;$/;"	m	struct:tag_mls_t	file:
file	../netcache/util.c	/^	char	file[64];$/;"	m	struct:__anon14	file:
file	../netcache/volumeops.c	/^	char		*file;$/;"	m	struct:tag_pls_t	file:
file_basetitle	../include/log.h	/^    char   file_basetitle[64];$/;"	m	struct:_log_handle
file_ext	../include/log.h	/^    char   file_ext[12];$/;"	m	struct:_log_handle
file_name	../include/log.h	/^    char   file_name[256];$/;"	m	struct:_log_handle
file_size	../include/log.h	/^    int    file_size;      \/\/ Log File size$/;"	m	struct:_log_handle
file_title	../include/log.h	/^    char   file_title[128];$/;"	m	struct:_log_handle
filetime	../netcache/util.c	/^filetime(char *buf, int len, time_t t)$/;"	f
fill_dir_proc	../test/driver_test.c	/^fill_dir_proc(nc_volume_context_t *mc, void *buf, const char *name, const nc_stat_t *statp, nc_off_t off)$/;"	f
fill_key	../include/glru.h	/^	void 			(*fill_key)(void *, const char *);$/;"	m	struct:tag_glru
fill_key	../include/glru.h	/^	void 			(*fill_key)(void *, const char *);$/;"	m	struct:tag_glru_operations
filled	../include/cfs_driver.h	/^	int			filled; \/* real read bytes *\/$/;"	m	struct:cfs_iov
find	../netcache/backtrace.c	/^find(struct bfd_ctx * b, DWORD offset, const char **file, const char **func, unsigned *line)$/;"	f	file:
find_first_zero_bit	../netcache/util.c	/^find_first_zero_bit(const unsigned long *addr, unsigned long size)$/;"	f
find_info	../netcache/backtrace.c	/^struct find_info {$/;"	s	file:
finished	../include/netcache_types.h	/^			nc_int8_t				finished;$/;"	m	struct:tag_apc_overlapped::__anon62::__anon64
fio_apc_dummy_complete	../netcache/fhops.c	/^fio_apc_dummy_complete(fc_blk_t *buffer, int xferbytes, int error, void *ud)$/;"	f	file:
fio_apc_read_complete	../netcache/fhops.c	/^fio_apc_read_complete(fc_blk_t *blk\/*used*\/, int xferbytes, int error, void *cbdata)$/;"	f	file:
fio_close	../netcache/fhops.c	/^fio_close(fc_file_t *fh, int force)$/;"	f
fio_close_allowable	../netcache/fhops.c	/^fio_close_allowable(fc_file_t *fh)$/;"	f
fio_fgetattr	../netcache/fhops.c	/^fio_fgetattr(fc_file_t *fh, nc_stat_t *s)$/;"	f
fio_find_property	../netcache/fhops.c	/^fio_find_property(nc_file_handle_t *fi, char *tag)$/;"	f
fio_flush	../netcache/fhops.c	/^fio_flush(nc_file_handle_t *fi)$/;"	f
fio_for_each_property	../netcache/fhops.c	/^fio_for_each_property(fc_file_t *fi, int (*do_it)(char *key, char *val, void *cb), void *cb)$/;"	f
fio_ftruncate	../netcache/fhops.c	/^fio_ftruncate(fc_file_t *fi, nc_size_t len)$/;"	f
fio_getattr	../netcache/fhops.c	/^fio_getattr(nc_volume_context_t *volume, char *originpath, nc_stat_t *s)$/;"	f
fio_invoke_io	../netcache/fhops.c	/^fio_invoke_io(fc_file_t *fh)$/;"	f
fio_is_writable	../netcache/fhops.c	/^fio_is_writable(nc_mode_t mode)$/;"	f	file:
fio_make_fhandle	../netcache/fhops.c	/^fio_make_fhandle(fc_inode_t *inode, nc_path_lock_t *pl, nc_mode_t mode, nc_xtra_options_t *req_prop)$/;"	f
fio_on_complete_apc_open	../netcache/fhops.c	/^fio_on_complete_apc_open(nc_file_handle_t *fhandle, nc_stat_t *stat, int error, void *callback_data)$/;"	f	file:
fio_open	../netcache/fhops.c	/^fio_open(nc_volume_context_t *volume, char *cachepath, char *originpath, nc_mode_t mode, nc_xtra_options_t *list)$/;"	f
fio_open_extended	../netcache/fhops.c	/^fio_open_extended(nc_volume_context_t *volume, char *cachepath, char *originpath, nc_mode_t mode, nc_stat_t *ns, nc_xtra_options_t *req_prop)$/;"	f
fio_open_extended_apc_internal	../netcache/fhops.c	/^fio_open_extended_apc_internal(	nc_volume_context_t 			*volume, $/;"	f
fio_open_extended_apc_wrap	../netcache/fhops.c	/^fio_open_extended_apc_wrap(	nc_volume_context_t 			*volume, $/;"	f
fio_open_sync_info	../netcache/fhops.c	/^typedef struct fio_open_sync_info {$/;"	s	file:
fio_osi_destroy	../netcache/fhops.c	/^fio_osi_destroy(fio_osi_t *osi, char *f, int l)$/;"	f	file:
fio_osi_init	../netcache/fhops.c	/^fio_osi_init(fio_osi_t *osi, nc_volume_context_t *volume, char *key, char *path, int mode, nc_stat_t *sp, nc_xtra_options_t *prop)$/;"	f	file:
fio_osi_t	../netcache/fhops.c	/^} fio_osi_t;$/;"	t	typeref:struct:fio_open_sync_info	file:
fio_osi_wait	../netcache/fhops.c	/^fio_osi_wait(fio_osi_t *osi)$/;"	f	file:
fio_read	../netcache/fhops.c	/^fio_read(fc_file_t *fi, char *buf, nc_off_t off, nc_size_t len)$/;"	f
fio_read_apc	../netcache/fhops.c	/^fio_read_apc(fc_file_t *fi, char *buf, nc_off_t off, nc_size_t len, nc_apc_read_callback_t callback, void *callbackdata)$/;"	f
fio_read_apc_blk_prepared	../netcache/fhops.c	/^fio_read_apc_blk_prepared(fc_blk_t *blk\/*used*\/, int xferbytes, int error, void *cbdata)$/;"	f
fio_read_apc_timeout	../netcache/fhops.c	/^fio_read_apc_timeout(void *ud)$/;"	f	file:
fio_result_code	../netcache/fhops.c	/^fio_result_code(fc_file_t *fi)$/;"	f
fio_write	../netcache/fhops.c	/^fio_write(fc_file_t *fi, char *buf, nc_off_t off, size_t len)$/;"	f
fired	../netcache/mdb.c	/^  int fired;                         \/* True after unlock event has occurred *\/$/;"	m	struct:UnlockNotification	file:
first	../include/bt_tmlist.h	/^	struct hlist_node *first;$/;"	m	struct:hlist_head	typeref:struct:hlist_head::hlist_node
firstattempt	../include/netcache.h	/^	nc_time_t			firstattempt; \/* close 시도가 시작된 시점*\/$/;"	m	struct:tag_close_context
flag	../include/bt_timer.h	/^	int						flag;$/;"	m	struct:timeout
flag	../include/netcache.h	/^  	nc_uint32_t 		flag;				\/* 이전 버전과 호환성 문제로 위치고정, 향후 다용도로 사용 *\/$/;"	m	struct:tag_fc_common_header_info
flag	../include/trace.h	/^	nc_uint32_t  	flag;$/;"	m	struct:__anon67
flag	../netcache/ringbuffer.c	/^	nc_uint32_t		flag; 		\/* error flag *\/$/;"	m	struct:tag_nc_ringbuffer	file:
fls	../include/bitmap.h	/^static inline int fls(int x)$/;"	f
fls	../netcache/bt_timer.c	62;"	d	file:
flush	../include/cfs_driver.h	/^	int								(*flush)(struct tag_fc_inode_info *handle);$/;"	m	struct:cfs_origin_driver
fmagic	../include/glru.h	/^	nc_uint32_t 		fmagic;		$/;"	m	struct:tag_glru
fmagic	../include/netcache.h	/^	nc_uint32_t				fmagic;$/;"	m	struct:apc_read_context
fmagic	../include/netcache.h	/^	nc_uint32_t	fmagic;$/;"	m	struct:tag_opaque
fmagic	../include/netcache_types.h	/^	nc_uint16_t 			fmagic;$/;"	m	struct:tag_apc_overlapped
fmagic	../netcache/heaptrack.c	/^	unsigned long long 	fmagic;$/;"	m	struct:__anon7	file:
foff	../include/cfs_driver.h	/^	nc_off_t	foff; 	\/* file offset *\/$/;"	m	struct:cfs_iov
foffset	../include/block.h	/^	nc_off_t			foffset;	\/* 다음 읽기 위치: 객체 내의 바이트 옵셋 *\/$/;"	m	struct:tag_blk_apc_read_info
foffset	../include/netcache.h	/^	nc_off_t				foffset;$/;"	m	struct:apc_read_context
force_nocache	../include/netcache.h	/^	nc_uint32_t     		force_nocache:1;$/;"	m	struct:apc_open_context
force_private	../include/netcache.h	/^	nc_uint32_t				force_private:1;$/;"	m	struct:apc_open_context
forceclose	../test/driver_test.c	/^int 			forceclose = 0; \/* force close mode *\/$/;"	v
forkedrun	../include/bt_timer.h	/^	short					forkedrun; \/* 1: 별개의 쓰레드에서 실행이 필요*\/$/;"	m	struct:timeout
found	../netcache/part_mgr.c	/^	nc_uint8_t 				found; \/* 1 if entry found in a partition *\/$/;"	m	struct:tag_query_inode	file:
fp	../include/log.h	/^    FILE*  fp;             \/\/ file pointer of LogFile$/;"	m	struct:_log_handle
fr_availsize	../include/netcache.h	/^	nc_int64_t						fr_availsize; \/* non-rangeable IO중에 현재까지 가져온 크기 *\/$/;"	m	struct:tag_fc_inode_info
free	../include/glru.h	/^	void *			(*free)(glru_node_t *gnode, void *data);$/;"	m	struct:tag_glru
free	../include/glru.h	/^	void *			(*free)(glru_node_t *gnode, void *data);$/;"	m	struct:tag_glru_operations
free	../netcache/heaptrack.c	/^free(void *v)$/;"	f
free_context	../include/cfs_driver.h	/^	void 							(*free_context)(struct cfs_origin_driver *drv, nc_origin_session_t ctx);$/;"	m	struct:cfs_origin_driver
freed	../include/cfs_driver.h	/^	nc_uint32_t 					freed:1; \/* 1:더이상 접근할 수 없는 볼륨 *\/$/;"	m	struct:nc_volume_context
freeidx	../netcache/ringbuffer.c	/^	int				freeidx; 	\/* write를 시작하는 위치 *\/$/;"	m	struct:tag_nc_ringbuffer	file:
frees	../netcache/part_mgr.c	/^	link_list_t 		frees;$/;"	m	struct:tag_part_table_info	file:
frio_inprogress	../include/netcache_types.h	/^				nc_uint64_t 		frio_inprogress:1; 	\/* norandom_io가 진행 중이면 1 *\/$/;"	m	struct:__anon65::bitefields
fs_bfree	../include/netcache.h	/^	size_t			fs_bfree;$/;"	m	struct:tag_part_element
fs_bfree	../netcache/diskcache.c	/^	size_t							fs_bfree;$/;"	m	struct:tag_cachedir_state	file:
fs_bsize	../include/netcache.h	/^	size_t			fs_bsize;$/;"	m	struct:tag_part_element
fs_bsize	../netcache/diskcache.c	/^	size_t							fs_bsize;$/;"	m	struct:tag_cachedir_state	file:
fs_usedper	../include/netcache.h	/^	float			fs_usedper; \/* used percent *\/$/;"	m	struct:tag_part_element
fs_usedper	../netcache/diskcache.c	/^	float							fs_usedper; \/* used percent *\/$/;"	m	struct:tag_cachedir_state	file:
ftruncate	../include/cfs_driver.h	/^	int 							(*ftruncate)(struct cfs_origin_driver *drv, struct dev_file_handle *, nc_size_t len);$/;"	m	struct:cfs_origin_driver
func	../include/netcache_types.h	/^			apc_completion_proc_t	func;$/;"	m	struct:tag_apc_overlapped::__anon62::__anon63
func	../netcache/backtrace.c	/^	const char *func;$/;"	m	struct:find_info	file:
func	../netcache/wb_timer.c	/^	void	(*func)(void *);$/;"	m	struct:tag_fork_run_info	file:
func	../test/sorteddll.c	/^	char 				func[64];$/;"	m	struct:tag_link_node	file:
func_name	../include/wb_timer.h	/^	char 				func_name[32];$/;"	m	struct:timer_list
function	../include/wb_timer.h	/^	void 				(*function) (void *);$/;"	m	struct:timer_list
g__NC_BLOCK_PG_MARKER	../netcache/bc_mgr.c	/^fc_blk_t					g__NC_BLOCK_PG_MARKER = {$/;"	v
g__adynamic_memory_usage	../netcache/cfs_apix.c	/^nc_int64_t 					g__adynamic_memory_usage = 0LL;$/;"	v
g__asio_thread_pool	../common/asio_mgr.c	/^tp_handle_t 		g__asio_thread_pool = NULL;$/;"	v
g__blk_cache	../netcache/bc_mgr.c	/^fc_clfu_root_t			*	g__blk_cache  			= NULL;$/;"	v
g__blk_count	../netcache/bc_mgr.c	/^int 						g__blk_count = 0;$/;"	v
g__blk_rd_disk	../netcache/cfs_apix.c	/^unsigned int 				g__blk_rd_disk = 0; \/* # of chunk read count *\/$/;"	v
g__blk_rd_fault	../netcache/cfs_apix.c	/^unsigned int 				g__blk_rd_fault = 0; \/* 디스크 캐시를 로딩했으나, 사용되지 않고 사라진 청크 갯수*\/$/;"	v
g__blk_rd_network	../netcache/cfs_apix.c	/^unsigned int 				g__blk_rd_network  = 0; \/* # of origin chunk read count *\/$/;"	v
g__blk_wr_disk	../netcache/cfs_apix.c	/^unsigned int 				g__blk_wr_disk = 0; \/* #of chunk write count *\/$/;"	v
g__block_spin_interval	../netcache/cfs_apix.c	/^int 						g__block_spin_interval = 60;$/;"	v
g__bulk_count	../netcache/bc_mgr.c	/^nc_int32_t					g__bulk_count 			= 0;$/;"	v
g__busy_asio	../netcache/cfs_apix.c	/^int							g__busy_asio		= 0;$/;"	v
g__cache_ra_blk_cnt	../netcache/cfs_apix.c	/^int							g__cache_ra_blk_cnt = 1; \/* 상동 *\/$/;"	v
g__cache_size	../netcache/bc_mgr.c	/^nc_size_t					g__cache_size 			= 1024; $/;"	v
g__chi	../netcache/cfs_apix.c	/^mavg_t						*g__chi; \/* context handling*\/$/;"	v
g__clfu_blk_base	../netcache/bc_mgr.c	/^int							g__clfu_blk_base = 0;$/;"	v
g__clfu_blk_base_percent	../netcache/bc_mgr.c	/^int							g__clfu_blk_base_percent = 0;$/;"	v
g__clfu_blk_kept	../netcache/bc_mgr.c	/^int							g__clfu_blk_kept = 0;$/;"	v
g__clfu_blk_total	../netcache/bc_mgr.c	/^int							g__clfu_blk_total = 0;$/;"	v
g__clfu_inode_base	../netcache/diskcache.c	/^int						g__clfu_inode_base = 0;$/;"	v
g__clfu_inode_base_percent	../netcache/diskcache.c	/^int						g__clfu_inode_base_percent = 0;$/;"	v
g__clfu_inode_kept	../netcache/diskcache.c	/^int						g__clfu_inode_kept = 0;$/;"	v
g__clfu_inode_total	../netcache/diskcache.c	/^int						g__clfu_inode_total = 0;$/;"	v
g__closei	../netcache/cfs_apix.c	/^mavg_t						*g__closei;$/;"	v
g__cluster_ip	../netcache/cfs_apix.c	/^char 						g__cluster_ip[128]="";$/;"	v
g__cluster_ttl	../netcache/cfs_apix.c	/^int 						g__cluster_ttl = 1;$/;"	v
g__cm_interval	../netcache/cfs_apix.c	/^long						g__cm_interval = 60000; \/* 60 secs *\/$/;"	v
g__cold_ratio	../netcache/cfs_apix.c	/^int 						g__cold_ratio = 30; \/* percent *\/$/;"	v
g__default_gid	../netcache/cfs_apix.c	/^int							g__default_gid = 0;$/;"	v
g__default_group	../netcache/cfs_apix.c	/^char						g__default_group[128] = "nobody";$/;"	v
g__default_uid	../netcache/cfs_apix.c	/^int							g__default_uid = 0;$/;"	v
g__default_user	../netcache/cfs_apix.c	/^char						g__default_user[128] = "nobody"; \/* nobody *\/$/;"	v
g__delayed_sync	../netcache/diskcache.c	/^int 					g__delayed_sync = 1;	\/* 헤더 싱크 delay *\/$/;"	v
g__dm_reclaim_highmark	../netcache/diskcache.c	/^int 		g__dm_reclaim_highmark 		= DM_RECLAIM_HIGHMARK;$/;"	v
g__dm_reclaim_lowmark	../netcache/diskcache.c	/^int 		g__dm_reclaim_lowmark 		= DM_RECLAIM_LOWMARK;$/;"	v
g__dri	../netcache/cfs_apix.c	/^mavg_t						*g__dri; \/* disk read io 시간*\/$/;"	v
g__dskio	../netcache/cfs_apix.c	/^mavg_t						*g__dskio; \/* disk block io 시간(read\/write 모두)*\/$/;"	v
g__dynamic_memory_usage	../netcache/cfs_apix.c	/^nc_int64_t 					g__dynamic_memory_usage = 0LL;$/;"	v
g__enable_cold_caching	../netcache/cfs_apix.c	/^int 						g__enable_cold_caching = U_FALSE;$/;"	v
g__enable_offline_cache	../netcache/diskcache.c	/^int 		g__enable_offline_cache 	= 1;$/;"	v
g__false_read_limit	../netcache/cfs_apix.c	/^float						g__false_read_limit = 0.5; 	\/* default 0.1% *\/$/;"	v
g__forceclose	../netcache/cfs_apix.c	/^int 						g__forceclose 		= 0;$/;"	v
g__fresh_result	../netcache/diskcache.c	/^char 		g__fresh_result[][32] = {$/;"	v
g__inode_cache	../netcache/cacheops.c	/^fc_clfu_root_t				*g__inode_cache;$/;"	v
g__inode_cache_lock	../netcache/cacheops.c	/^nc_ulock_t 			g__inode_cache_lock;$/;"	v
g__inode_count	../netcache/diskcache.c	/^long					g__inode_count = 0;$/;"	v
g__inode_heap	../netcache/bc_mgr.c	/^memmgr_heap_t			g__inode_heap;$/;"	v
g__inode_heap_size	../netcache/bc_mgr.c	/^nc_size_t					g__inode_heap_size = 24*1024*1024;$/;"	v
g__inode_heap_size	../netcache/bc_mgr.c	/^nc_size_t					g__inode_heap_size = 512*1024*1024;$/;"	v
g__inode_max_count	../netcache/diskcache.c	/^long					g__inode_max_count = 100000;$/;"	v
g__inode_opened	../netcache/diskcache.c	/^long 					g__inode_opened = 0;$/;"	v
g__intelligent_cold_caching	../netcache/cfs_apix.c	/^int 						g__intelligent_cold_caching = 0; \/* 1: cold content에 대한 과도한 disk부하 회피*\/$/;"	v
g__local_ip	../netcache/cfs_apix.c	/^char 						g__local_ip[128]="";$/;"	v
g__max_asio_vector_count	../common/asio_mgr.c	/^int 				g__max_asio_vector_count = NC_MAX_VECTORIO;$/;"	v
g__nc_inited	../netcache/cfs_apix.c	/^int 						g__nc_inited 		= 0;$/;"	v
g__need_fastcrc	../netcache/cfs_apix.c	/^int							g__need_fastcrc = 0; \/* 0:entire chunk, posivie in bytes *\/$/;"	v
g__need_stat_backup	../netcache/cfs_apix.c	/^int 						g__need_stat_backup = 1;$/;"	v
g__netblkr	../netcache/cfs_apix.c	/^mavg_t						*g__netblkr; \/* IO schedule후 block데이타를 origin에서 수신할 때까지 걸린 시간 *\/$/;"	v
g__nri	../netcache/cfs_apix.c	/^mavg_t						*g__nri; \/* origin read 시간*\/$/;"	v
g__oapc_count	../netcache/cfs_apix.c	/^int							g__oapc_count = 0;$/;"	v
g__octx_bind_count	../netcache/diskcache.c	/^int 				g__octx_bind_count = 0;$/;"	v
g__octx_count	../netcache/diskcache.c	/^int				g__octx_count = 0;$/;"	v
g__openi	../netcache/cfs_apix.c	/^mavg_t						*g__openi;$/;"	v
g__origin_ra_blk_cnt	../netcache/cfs_apix.c	/^int							g__origin_ra_blk_cnt= 0; \/* nc_init에서 초기화됨 *\/$/;"	v
g__page_count	../netcache/bc_mgr.c	/^nc_int32_t					g__page_count 			= 0;$/;"	v
g__page_heap	../netcache/bc_mgr.c	/^memmgr_heap_t			g__page_heap;$/;"	v
g__page_size	../netcache/bc_mgr.c	/^int 						g__page_size = 0;$/;"	v
g__path_cache	../netcache/volumeops.c	/^glru_t 								*g__path_cache = NULL ;$/;"	v
g__pending_close	../netcache/cfs_apix.c	/^int 						g__pending_close = 0;$/;"	v
g__pending_inodeop	../netcache/cfs_apix.c	/^int 						g__pending_inodeop = 0;$/;"	v
g__pending_io	../netcache/cfs_apix.c	/^int 						g__pending_io = 0;$/;"	v
g__pending_open	../netcache/cfs_apix.c	/^int 						g__pending_open = 0;$/;"	v
g__pending_purge	../netcache/cfs_apix.c	/^int 						g__pending_purge = 0;$/;"	v
g__pending_stat	../netcache/cfs_apix.c	/^int 						g__pending_stat = 0;$/;"	v
g__per_block_pages	../netcache/bc_mgr.c	/^int 						g__per_block_pages = 0;$/;"	v
g__pl_poolsize	../netcache/volumeops.c	/^nc_int32_t 					g__pl_poolsize = 256;$/;"	v
g__pl_poolsize	../netcache/volumeops.c	/^nc_int32_t 					g__pl_poolsize = 5000;$/;"	v
g__pl_refs	../netcache/volumeops.c	/^nc_int32_t					g__pl_refs 	   = 0; \/* for debugging*\/$/;"	v
g__prepblk	../netcache/cfs_apix.c	/^mavg_t						*g__prepblk;$/;"	v
g__preppage	../netcache/cfs_apix.c	/^mavg_t						*g__preppage;$/;"	v
g__rapc	../netcache/cfs_apix.c	/^mavg_t						*g__rapc; \/* readapc 시간*\/$/;"	v
g__readahead_MB	../netcache/cfs_apix.c	/^int 						g__readahead_MB 	= 2; \/*기본 2MB *\/$/;"	v
g__readi	../netcache/cfs_apix.c	/^mavg_t						*g__readi;$/;"	v
g__stat_frees	../common/blk_io.c	/^int 							g__stat_frees  = 0;$/;"	v
g__strict_crc_check	../netcache/cfs_apix.c	/^int							g__strict_crc_check = 0;$/;"	v
g__tb_seed	../netcache/diskcache.c	/^nc_uint64_t				g__tb_seed		= 0;$/;"	v
g__tb_seq	../netcache/diskcache.c	/^nc_uint64_t				g__tb_seq		= 0;$/;"	v
g__total_blks_allocated	../netcache/bc_mgr.c	/^nc_int32_t					g__total_blks_allocated 			= 0;$/;"	v
g__trace_error	../netcache/trace.c	/^PUBLIC_IF int 			g__trace_error = T_ERROR;$/;"	v
g__trace_mask	../netcache/trace.c	/^int						g__trace_mask = T_WARN|T_ERROR|T_INFO;$/;"	v
g__trace_proc	../netcache/trace.c	/^t_trace_callback		g__trace_proc = NULL;$/;"	v
g__wapc	../netcache/cfs_apix.c	/^mavg_t						*g__wapc; \/* blk_ri_wait 시간*\/$/;"	v
g__write_bytes	../netcache/cfs_apix.c	/^nc_uint64_t 				g__write_bytes = 0;$/;"	v
g__write_count	../netcache/cfs_apix.c	/^nc_uint64_t 				g__write_count = 0;$/;"	v
g_debugmask	../netcache/cfs_apix.c	/^int g_debugmask = 0;$/;"	v
g_maskarray	../netcache/cfs_apix.c	/^int g_maskarray[6] =$/;"	v
g_maskidx	../netcache/cfs_apix.c	/^int g_maskidx = 0;$/;"	v
g_output	../netcache/backtrace.c	/^static char * g_output = NULL;$/;"	v	file:
g_prev	../netcache/backtrace.c	/^static LPTOP_LEVEL_EXCEPTION_FILTER g_prev = NULL;$/;"	v	file:
g_trc_log	../netcache/trace.c	/^LOG_HANDLE             *g_trc_log = NULL;$/;"	v
gdata	../include/glru.h	/^	void 			*gdata;$/;"	m	struct:tag_glru_node
get_bc	../netcache/backtrace.c	/^get_bc(struct output_buffer *ob , struct bfd_set *set , const char *procname)$/;"	f	file:
get_jiffies	../netcache/wb_timer.c	/^unsigned long long get_jiffies(void)$/;"	f
get_memory_usage	../netcache/util.c	/^get_memory_usage()$/;"	f
get_parent	../netcache/util.c	/^get_parent(char *parent, int sz, char *path)$/;"	f
get_random	../netcache/util.c	/^get_random()$/;"	f
getattr	../include/cfs_driver.h	/^	int								(*getattr)(struct cfs_origin_driver *drv, char *path, nc_stat_t *old_s, nc_stat_t *new_s, nc_xtra_options_t *kv, nc_mode_t, struct apc_open_context *oc);$/;"	m	struct:cfs_origin_driver
geterrstr	../test/db.c	/^static const char *geterrstr(DWORD errcode)$/;"	f	file:
gettid	../netcache/util.c	/^gettid()$/;"	f
glru_check_idle	../netcache/glru.c	/^glru_check_idle(void *vgn)$/;"	f
glru_commit	../netcache/glru.c	/^glru_commit(glru_t *glru, glru_node_t *gnode)$/;"	f
glru_destroy	../netcache/glru.c	/^glru_destroy(glru_t *glru)$/;"	f
glru_dump	../netcache/glru.c	/^glru_dump(char *b, int l, glru_node_t *gnode)$/;"	f
glru_dump_all	../netcache/glru.c	/^glru_dump_all(glru_t *glru)$/;"	f
glru_find_victim	../netcache/glru.c	/^glru_find_victim(glru_t *glru)$/;"	f	file:
glru_for_each	../netcache/glru.c	/^glru_for_each(glru_t *glru, int (*proc)(void *glru_node, void *), void *uc)$/;"	f
glru_free_entry	../netcache/glru.c	/^glru_free_entry(void *vgn)$/;"	f	file:
glru_get_from_pool_internal	../netcache/glru.c	/^glru_get_from_pool_internal(glru_t *glru)$/;"	f	file:
glru_get_lock	../netcache/glru.c	/^pthread_mutex_t * glru_get_lock(glru_t *glru)$/;"	f
glru_getref	../netcache/glru.c	/^glru_getref(glru_t *glru, glru_node_t *gnode)$/;"	f
glru_hit	../netcache/glru.c	/^glru_hit(glru_t *glru, glru_node_t *gnode)$/;"	f	file:
glru_init	../netcache/glru.c	/^glru_init(int max_entries, glru_operation_map_t *map, char *name) $/;"	f
glru_lock	../netcache/glru.c	/^glru_lock(glru_t *glru)$/;"	f
glru_makeref	../netcache/glru.c	/^glru_makeref(glru_t *glru, glru_node_t *gnode)$/;"	f
glru_node_t	../include/glru.h	/^typedef struct tag_glru_node glru_node_t;$/;"	t	typeref:struct:tag_glru_node
glru_operation_map_t	../include/glru.h	/^} glru_operation_map_t;$/;"	t	typeref:struct:tag_glru_operations
glru_progress_nolock	../netcache/glru.c	/^glru_progress_nolock(glru_t *glru, glru_node_t *gnode)$/;"	f
glru_ref	../netcache/glru.c	/^glru_ref(glru_t *glru, glru_node_t **gnode, const char *key, void *map, u_boolean_t allocifnotexist, u_boolean_t setprogress, const char *f, int l)$/;"	f
glru_t	../include/glru.h	/^} glru_t;$/;"	t	typeref:struct:tag_glru
glru_unlock	../netcache/glru.c	/^glru_unlock(glru_t *glru)$/;"	f
glru_unref	../netcache/glru.c	/^glru_unref(glru_t *glru, glru_node_t *gnode)$/;"	f
glru_unregister	../netcache/glru.c	/^glru_unregister(glru_t *glru, void *map, glru_node_t *gnode)$/;"	f
glru_waiton_progress	../netcache/glru.c	/^glru_waiton_progress(glru_t *glru, glru_node_t *gnode, const char *key )$/;"	f	file:
gmode	../test/driver_test.c	/^mode_t 			gmode = O_RDONLY;$/;"	v
gmode	../test/volume_test.c	/^mode_t 			gmode = O_RDONLY;$/;"	v
groot	../include/glru.h	/^	void 			*groot;$/;"	m	struct:tag_glru_node
handle	../netcache/backtrace.c	/^	bfd * handle;$/;"	m	struct:bfd_ctx	file:
handle	../netcache/cfs_driver.c	/^	void 					*handle;$/;"	m	struct:__anon3	file:
handle	../netcache/util.c	/^	void 	*handle;$/;"	m	struct:__anon14	file:
handled	../netcache/mdb.c	/^	int 			handled;	\/* # of use *\/$/;"	m	struct:tag_mdb_session	file:
handled	../netcache/mdb.c	/^	nc_cond_t		handled;$/;"	m	struct:mdb_inserti_tag	file:
handled	../netcache/mdb.c	/^	nc_cond_t		handled;$/;"	m	struct:mdb_remove_rowi_tag	file:
handled	../netcache/mdb.c	/^	nc_cond_t		handled;$/;"	m	struct:mdb_removei_tag	file:
handled	../netcache/mdb.c	/^	nc_cond_t		handled;$/;"	m	struct:mdb_update_rowi_tag	file:
handled	../netcache/part_mgr.c	/^	int 					handled; \/* # of lookuped partition *\/$/;"	m	struct:tag_query_inode	file:
handler	../common/blk_io.c	/^	blk_iot_handler_proc_t	handler;$/;"	m	struct:iot_handler_info	file:
handler	../netcache/threadpool.c	/^	tp_job_handler_t 	handler;$/;"	m	struct:tag_threadpool	file:
hang_timer	../include/asio.h	/^	bt_timer_t 			hang_timer;$/;"	m	struct:nc_asio_vector
hard_remove	../include/netcache.h	/^	nc_int32_t		hard_remove;		\/* 1: mdb record 제거 & 캐시파일 삭제, 0이면 메모리 free만*\/	$/;"	m	struct:apc_remove_context
hdr_version	../include/netcache.h	/^	nc_int8_t 						hdr_version:4;$/;"	m	struct:tag_fc_inode_info
head	../include/util.h	/^	struct tag_link_node	*head;$/;"	m	struct:tag_link_list	typeref:struct:tag_link_list::tag_link_node
head	../netcache/ringbuffer.c	/^	char			*head; $/;"	m	struct:tag_nc_ringbuffer	file:
head	../test/sorteddll.c	/^	struct tag_link_node	*head;$/;"	m	struct:tag_link_list	typeref:struct:tag_link_list::tag_link_node	file:
header_size	../include/netcache.h	/^  	nc_int32_t			header_size;	 	\/* total header size, 압축되지 않은 상태에서의 크기 *\/$/;"	m	struct:tag_fc_common_header_info
header_size	../include/netcache.h	/^  	nc_int32_t 						header_size; 	\/* header size in bytes *\/$/;"	m	struct:tag_fc_inode_info
headerversion	../include/netcache.h	/^  	nc_uint32_t						headerversion;  	\/* monotonic increase by 1 *\/$/;"	m	struct:tag_fc_inode_info
heapalloc	../include/netcache.h	/^	nc_int64_t	heapalloc;$/;"	m	struct:tag_memmgr_heap
heapalloc_aligned	../include/netcache.h	/^	nc_int64_t	heapalloc_aligned;$/;"	m	struct:tag_memmgr_heap
heapsize	../include/netcache.h	/^	nc_int64_t	heapsize;$/;"	m	struct:tag_memmgr_heap
hertz	../netcache/bt_timer.c	/^	uint64_t			hertz;$/;"	m	struct:timerwheels	file:
hid	../include/netcache.h	/^	nc_uint64_t			hid;$/;"	m	struct:tag_nc_mdb_inode_info
hid	../include/netcache.h	/^	nc_uint64_t 					hid;				\/* hash id(MDB 저장시 locality(결국 성능) 향상용) *\/$/;"	m	struct:tag_fc_inode_info
hid	../netcache/mdb.c	/^	nc_uint64_t		hid;$/;"	m	struct:mdb_inserti_tag	file:
hid	../netcache/mdb.c	/^	nc_uint64_t		hid;$/;"	m	struct:mdb_removei_tag	file:
hint_proc	../include/cfs_driver.h	/^	cfs_update_hint_callback_t 		hint_proc;$/;"	m	struct:cfs_origin_driver
hitcount	../include/lru.h	/^	nc_uint16_t				hitcount; \/* useful only for LRU *\/$/;"	m	struct:__anon37
hlist_add_after	../include/bt_tmlist.h	/^static __inline__ void hlist_add_after(struct hlist_node *n, struct hlist_node *next)$/;"	f
hlist_add_before	../include/bt_tmlist.h	/^static __inline__ void hlist_add_before(struct hlist_node *n, struct hlist_node *next)$/;"	f
hlist_add_head	../include/bt_tmlist.h	/^static __inline__ void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f
hlist_del	../include/bt_tmlist.h	/^static __inline__ void hlist_del(struct hlist_node *n)$/;"	f
hlist_del_init	../include/bt_tmlist.h	/^static __inline__ void hlist_del_init(struct hlist_node *n)$/;"	f
hlist_del_rcu	../include/bt_tmlist.h	/^static inline void hlist_del_rcu(struct hlist_node *n)$/;"	f
hlist_del_rcu_init	../include/bt_tmlist.h	533;"	d
hlist_empty	../include/bt_tmlist.h	/^static __inline__ int hlist_empty(const struct hlist_head *h)$/;"	f
hlist_entry	../include/bt_tmlist.h	574;"	d
hlist_for_each	../include/bt_tmlist.h	577;"	d
hlist_for_each_entry	../include/bt_tmlist.h	592;"	d
hlist_for_each_entry_continue	../include/bt_tmlist.h	604;"	d
hlist_for_each_entry_from	../include/bt_tmlist.h	616;"	d
hlist_for_each_entry_safe	../include/bt_tmlist.h	629;"	d
hlist_for_each_safe	../include/bt_tmlist.h	581;"	d
hlist_head	../include/bt_tmlist.h	/^struct hlist_head {$/;"	s
hlist_node	../include/bt_tmlist.h	/^struct hlist_node {$/;"	s
hlist_unhashed	../include/bt_tmlist.h	/^static __inline__ int hlist_unhashed(const struct hlist_node *h)$/;"	f
hlock	../include/block.h	/^	nc_lock_t			hlock;$/;"	m	struct:tag_blk_apc_read_info
hot_ratio	../include/cyclic_lfu.h	/^	int				hot_ratio; \/* default 70% *\/$/;"	m	struct:__anon32
howmany	../include/cfs_driver.h	20;"	d
hsignal	../include/block.h	/^	nc_cond_t			hsignal;$/;"	m	struct:tag_blk_apc_read_info
hsignal	../netcache/fhops.c	/^	pthread_cond_t		hsignal;$/;"	m	struct:fio_open_sync_info	file:
ht_add_symbol_if_absent	../netcache/heaptrack.c	/^ht_add_symbol_if_absent(char *p)$/;"	f	file:
ht_append	../netcache/heaptrack.c	/^ht_append(dllist_t *root, void *data, node_t *m)$/;"	f	file:
ht_compare_li	../netcache/heaptrack.c	/^ht_compare_li(const void *a, const void *b)$/;"	f	file:
ht_compare_symbols	../netcache/heaptrack.c	/^ht_compare_symbols(const void *a, const void *b)$/;"	f	file:
ht_count	../netcache/heaptrack.c	/^ht_count(dllist_t *root)$/;"	f	file:
ht_dump_mh	../netcache/heaptrack.c	/^ht_dump_mh(char *buf, int len, __mh_t *pa)$/;"	f	file:
ht_get_head	../netcache/heaptrack.c	/^ht_get_head(dllist_t *root)$/;"	f	file:
ht_get_next	../netcache/heaptrack.c	/^ht_get_next(node_t *m)$/;"	f	file:
ht_lineinfo	../netcache/heaptrack.c	/^ht_lineinfo(char *buf, void *address, char *symbol)$/;"	f	file:
ht_remove	../netcache/heaptrack.c	/^ht_remove(dllist_t *root, node_t *m)$/;"	f	file:
ht_shash_add	../netcache/heaptrack.c	/^ht_shash_add(shash_t *ht, void *addr\/*aligned*\/, void *d\/*mh_t*\/)$/;"	f	file:
ht_shash_dump	../netcache/heaptrack.c	/^ht_shash_dump(shash_t *ht)$/;"	f	file:
ht_shash_lookup	../netcache/heaptrack.c	/^ht_shash_lookup(shash_t *ht, void *p)$/;"	f	file:
ht_shash_remove	../netcache/heaptrack.c	/^ht_shash_remove(shash_t *ht, void *addr)$/;"	f	file:
ht_sort	../netcache/heaptrack.c	/^ht_sort(dllist_t *root)$/;"	f	file:
ht_swap	../netcache/heaptrack.c	/^ht_swap(struct leak_info *a, struct leak_info *b)$/;"	f	file:
hweight32	../include/bitmap.h	/^static inline unsigned int hweight32(unsigned int w)$/;"	f
hweight64	../include/bitmap.h	/^static inline unsigned long hweight64(uint64_t w)$/;"	f
hweight_long	../include/bitmap.h	/^static inline unsigned long hweight_long(unsigned long w)$/;"	f
hz_bytes2string	../netcache/util.c	/^hz_bytes2string(char *buf, int len, nc_uint64_t val)$/;"	f
hz_string	../netcache/util.c	/^hz_string(char *buf, int len, char *ibuf)$/;"	f
i	../include/md5.h	/^  UINT4 i[2];                   \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon38
ic_allocate_inode	../netcache/cacheops.c	/^ic_allocate_inode(nc_volume_context_t *volume, int alloc_ext)$/;"	f	file:
ic_cache_state_t	../include/netcache.h	/^typedef enum { IS_FREED = 0, IS_ORPHAN = 1, IS_CACHED = 2} ic_cache_state_t;$/;"	t	typeref:enum:__anon46
ic_free_count_nolock	../netcache/cacheops.c	/^ic_free_count_nolock()$/;"	f
ic_free_object	../netcache/cacheops.c	/^ic_free_object(fc_inode_t *inode)$/;"	f
ic_free_object_nolock	../netcache/cacheops.c	/^ic_free_object_nolock(fc_inode_t *inode)$/;"	f
ic_get_stat	../netcache/cacheops.c	/^ic_get_stat(int *total, int *cached, int *freed, int *xtotal, int *xcached, int *xfreed)$/;"	f
ic_hit_nolock	../netcache/cacheops.c	/^ic_hit_nolock(fc_inode_t *inode, int ntimes) $/;"	f
ic_init	../netcache/cacheops.c	/^ic_init()$/;"	f
ic_is_busy	../netcache/cacheops.c	/^ic_is_busy(fc_inode_t *inode) $/;"	f
ic_is_cached_nolock	../netcache/cacheops.c	/^ic_is_cached_nolock(fc_inode_t *inode) $/;"	f
ic_is_hot	../netcache/cacheops.c	/^ic_is_hot(fc_inode_t *inode)$/;"	f
ic_pop_freelist	../netcache/cacheops.c	/^ic_pop_freelist()$/;"	f	file:
ic_prepare_inode_raw_nolock	../netcache/cacheops.c	/^ic_prepare_inode_raw_nolock( 	nc_volume_context_t 	*volume, $/;"	f
ic_prepare_inode_with_minode_nolock	../netcache/cacheops.c	/^ic_prepare_inode_with_minode_nolock (nc_volume_context_t *volume, nc_mdb_inode_info_t *minode, int progress)$/;"	f
ic_push_to_freelist_nolock	../netcache/cacheops.c	/^ic_push_to_freelist_nolock(fc_inode_t *inode)$/;"	f	file:
ic_register_cache_object_nolock	../netcache/cacheops.c	/^ic_register_cache_object_nolock(nc_volume_context_t *volume, fc_inode_t *inode)$/;"	f
ic_set_busy	../netcache/cacheops.c	/^ic_set_busy(fc_inode_t *inode, int su, char *f, int l)$/;"	f
ic_shutdown	../netcache/cacheops.c	/^ic_shutdown()$/;"	f
ic_spin_cache_ring	../netcache/cacheops.c	/^ic_spin_cache_ring(void *d)$/;"	f	file:
ic_unregister_cache_object_nolock	../netcache/cacheops.c	/^ic_unregister_cache_object_nolock(nc_volume_context_t *volume, fc_inode_t *inode)$/;"	f
id	../include/asio.h	/^ 	nc_uint64_t 	id;$/;"	m	struct:tag_asio_debug
id	../include/lru.h	/^	int					id;$/;"	m	struct:tag_lru_root
id	../include/netcache.h	/^	nc_uint64_t 			id;$/;"	m	struct:apc_open_context
id	../netcache/cfs_apix.c	/^	int		id;$/;"	m	struct:__anon2	file:
idle	../netcache/bc_mgr.c	/^	int		idle;$/;"	m	struct:bcm_stat	file:
idle	../netcache/disk_io_ops.c	/^	int			idle;$/;"	m	struct:io_thread_info	file:
ignore	../include/netcache.h	/^	int				ignore; 	\/* 1로 설정되면 해당 키는 kv_for_each()에서 무시 *\/$/;"	m	struct:tag_nc_kv_node
immutable	../include/netcache_types.h	/^			  	nc_uint64_t      	immutable:1; 		\/* immutable *\/$/;"	m	struct:__anon65::bitefields
imode	../include/netcache.h	/^	nc_mode_t						imode;			\/**<객체의 read\/write등 현재 open mode *\/$/;"	m	struct:tag_fc_inode_info
imode	../netcache/mdb.c	/^	nc_uint32_t		imode;$/;"	m	struct:mdb_inserti_tag	file:
in	../include/md5.h	/^  unsigned char in[64];                              \/* input buffer *\/$/;"	m	struct:__anon38
in_prop	../include/netcache.h	/^	nc_xtra_options_t       *in_prop;$/;"	m	struct:apc_open_context
index	../include/asio.h	/^	nc_int32_t 				index;$/;"	m	struct:nc_asio_context
indexof	../netcache/bt_timer.c	25;"	d	file:
init_bfd_ctx	../netcache/backtrace.c	/^init_bfd_ctx(struct bfd_ctx *bc, const char * procname, struct output_buffer *ob)$/;"	f	file:
init_timer	../include/wb_timer.h	/^static inline void init_timer(struct timer_list *timer)$/;"	f
init_timers	../netcache/wb_timer.c	/^void *init_timers(void)$/;"	f
inlist	../include/netcache_types.h	/^			nc_int8_t				inlist;$/;"	m	struct:tag_link_node::__anon56::__anon57
inode	../include/block.h	/^	fc_inode_t		*inode;$/;"	m	struct:tag_fc_blk
inode	../include/fio.h	/^	fc_inode_t 			*inode;$/;"	m	struct:tag_nc_file_ref
inode	../include/netcache.h	/^	fc_inode_t			*inode;$/;"	m	struct:tag_close_context
inode	../include/netcache.h	/^	fc_inode_t		*inode;$/;"	m	struct:apc_remove_context
inode	../include/netcache.h	/^	fc_inode_t 				*inode;$/;"	m	struct:apc_read_context
inode	../include/netcache.h	/^	fc_inode_t 		*inode;$/;"	m	struct:__anon52
inode	../include/netcache.h	/^	fc_inode_t  			*inode;$/;"	m	struct:apc_open_context
inode	../include/netcache.h	/^	struct tag_fc_inode_info 	*inode;$/;"	m	struct:tag_nc_file_ref	typeref:struct:tag_nc_file_ref::tag_fc_inode_info
inode	../include/util.h	/^	void 	*inode;$/;"	m	struct:tag_blk_stream
inode	../netcache/ringbuffer.c	/^	fc_inode_t 		*inode;$/;"	m	struct:tag_nc_ringbuffer	file:
inode_cache	../netcache/diskcache.c	/^	fc_clfu_root_t					*inode_cache;$/;"	m	struct:tag_cachedir_state	file:
inode_callback_info_tag	../netcache/volumeops.c	/^struct inode_callback_info_tag {$/;"	s	file:
inode_free	../netcache/diskcache.c	/^	fc_lru_root_t					*inode_free;$/;"	m	struct:tag_cachedir_state	file:
inode_signature	../include/netcache.h	/^	long long 		inode_signature;$/;"	m	struct:__anon52
inodebusy	../include/netcache.h	/^	nc_int8_t						inodebusy;			\/* 1:현재 대상객체에 대한 비동기 open 진생 중, reclaim하면 안됨 *\/$/;"	m	struct:tag_fc_inode_info
inodetofree	../include/netcache.h	/^	fc_inode_t  			*inodetofree;$/;"	m	struct:apc_open_context
inprop	../include/netcache.h	/^	nc_xtra_options_t 		*inprop;$/;"	m	struct:apc_read_context
insert	../netcache/mdb.c	/^	int				insert;$/;"	m	struct:mdb_inserti_tag	file:
int32_t	../netcache/crc32.c	/^typedef __int32 int32_t;$/;"	t	file:
internal_add_timer	../netcache/wb_timer.c	/^static void internal_add_timer(tvec_base_t * base, struct timer_list *timer)$/;"	f	file:
intg	../netcache/threadpool.c	/^	int					intg;	\/* 1: thread-pool에서 queue에서 job 자체스케줄링, 0: 자체스케줄링 안함*\/$/;"	m	struct:tag_threadpool	file:
intval	../test/test_kv.c	/^		int 	intval;$/;"	m	union:tag_option::__anon18	file:
intval	../test/test_path.c	/^		int 	intval;$/;"	m	union:tag_option::__anon19	file:
inuse	../netcache/bc_mgr.c	/^	int		inuse;$/;"	m	struct:bcm_stat	file:
io_thread_info	../netcache/disk_io_ops.c	/^typedef struct io_thread_info {$/;"	s	file:
io_thread_info_t	../netcache/disk_io_ops.c	/^} io_thread_info_t;$/;"	t	typeref:struct:io_thread_info	file:
iob	../include/asio.h	/^	nc_asio_context_t	*iob;$/;"	m	struct:nc_asio_vector
iobusy	../include/netcache.h	/^	nc_int8_t						iobusy:1;			\/* NEW) 2020-2-10 by weon 1 if io busy*\/$/;"	m	struct:tag_fc_inode_info
iocb	../netcache/disk_io_ops.c	/^	struct iocb		iocb;$/;"	m	struct:nc_iocb	typeref:struct:nc_iocb::iocb	file:
iocb_xtra	../netcache/disk_io_ops.c	/^	iocb_xtra_t		iocb_xtra; \/* iov때문에 아래 확장됨, node위치는 위에 놓아야함 *\/$/;"	m	struct:nc_iocb	file:
iocb_xtra_t	../netcache/disk_io_ops.c	/^} iocb_xtra_t;$/;"	t	typeref:struct:nc_iocb_xtra	file:
ioflag	../include/ncapi.h	/^	unsigned short 	ioflag;$/;"	m	struct:tag_origin_info
ios	../include/netcache.h	/^	int				ios;$/;"	m	struct:tag_part_element
iot	../include/asio.h	/^	nc_asio_type_t		iot[2];				\/* io type *\/$/;"	m	struct:nc_asio_vector
iot	../netcache/disk_io_ops.c	/^	int					iot;$/;"	m	struct:nc_iocb_xtra	file:
iot_handler_info	../common/blk_io.c	/^struct iot_handler_info {$/;"	s	file:
iov	../netcache/disk_io_ops.c	/^	struct iovec		iov[0];$/;"	m	struct:nc_iocb_xtra	typeref:struct:nc_iocb_xtra::iovec	file:
iov_allocated_context	../include/asio.h	/^	nc_int32_t 			iov_allocated_context;$/;"	m	struct:nc_asio_vector
iov_asio_bio_callback	../include/asio.h	/^	nc_asio_block_io_callback_t	iov_asio_bio_callback;$/;"	m	struct:nc_asio_vector
iov_asio_callback	../include/asio.h	/^	nc_asio_callback_t			iov_asio_callback;	\/* called whenever a block IO completed regardless of success *\/$/;"	m	struct:nc_asio_vector
iov_asio_prep_context_callback	../include/asio.h	/^	nc_asio_prepare_callback_t	iov_asio_prep_context_callback;	\/* called whenever a block IO completed regardless of success *\/$/;"	m	struct:nc_asio_vector
iov_async	../include/asio.h	/^	nc_uint8_t 			iov_async:1;			\/* 1 when the operation should be run in background *\/$/;"	m	struct:nc_asio_vector
iov_cb	../include/asio.h	/^	void				*iov_cb; $/;"	m	struct:nc_asio_vector
iov_cnt	../include/asio.h	/^	nc_int32_t			iov_cnt;			\/* # of blocks necessary to do IO *\/$/;"	m	struct:nc_asio_vector
iov_complex	../include/asio.h	/^	nc_uint8_t			iov_complex:1;		\/* 1 if iot[0] in {OSD_READ} *\/$/;"	m	struct:nc_asio_vector
iov_done_callback	../include/asio.h	/^	nc_done_callback_t			iov_done_callback;	\/* called whenever vector destroyed *\/$/;"	m	struct:nc_asio_vector
iov_done_cb	../include/asio.h	/^	void				*iov_done_cb; $/;"	m	struct:nc_asio_vector
iov_donecnt	../include/asio.h	/^	nc_int32_t			iov_donecnt[2];		\/* # of blocks handled so far *\/$/;"	m	struct:nc_asio_vector
iov_error	../include/asio.h	/^	nc_int16_t			iov_error;			$/;"	m	struct:nc_asio_vector
iov_freed	../include/asio.h	/^	nc_int16_t 			iov_freed;$/;"	m	struct:nc_asio_vector
iov_hung	../include/asio.h	/^	nc_uint8_t 			iov_hung:1;			\/* 1 when the operation should be run in background *\/$/;"	m	struct:nc_asio_vector
iov_id	../include/asio.h	/^	nc_uint32_t			iov_id;				\/* vector IO unique ID *\/$/;"	m	struct:nc_asio_vector
iov_inode	../include/asio.h	/^	fc_inode_t			*iov_inode;$/;"	m	struct:nc_asio_vector
iov_inprogress	../include/asio.h	/^	nc_uint8_t 			iov_inprogress:1;	\/* 1 : IO가 현재 진행 중이며, 언제 끝날지 모르는 상태 *\/$/;"	m	struct:nc_asio_vector
iov_kv_in	../include/asio.h	/^	nc_kv_list_t 		*iov_kv_in; 		$/;"	m	struct:nc_asio_vector
iov_kv_out	../include/asio.h	/^	nc_kv_list_t 		*iov_kv_out; 			$/;"	m	struct:nc_asio_vector
iov_kv_out_nf	../include/asio.h	/^	int					 iov_kv_out_nf; \/* 1 if free needed *\/$/;"	m	struct:nc_asio_vector
iov_needproperty	../include/asio.h	/^	nc_uint8_t 			iov_needproperty:1;		\/* 1 : IO가 현재 진행 중이며, 언제 끝날지 모르는 상태 *\/$/;"	m	struct:nc_asio_vector
iov_priv	../include/asio.h	/^	void 				*iov_priv;$/;"	m	struct:nc_asio_vector
iov_requested_bytes	../include/asio.h	/^	nc_int64_t 			iov_requested_bytes;$/;"	m	struct:nc_asio_vector
iov_sblkno	../include/asio.h	/^	nc_blkno_t			iov_sblkno;			\/* start blk # *\/$/;"	m	struct:nc_asio_vector
iov_signature	../include/asio.h	/^	nc_uint64_t			iov_signature;		\/* inode signature  which used to check inconsistency between job and inode *\/$/;"	m	struct:nc_asio_vector
iov_user_callback	../include/asio.h	/^	nc_user_callback_t			iov_user_callback;	\/* called whenever a block IO completed regardless of success *\/$/;"	m	struct:nc_asio_vector
iov_xfer_blks	../include/asio.h	/^	nc_int32_t 			iov_xfer_blks;		\/* # of blks filled *\/$/;"	m	struct:nc_asio_vector
iov_xfer_bytes	../include/asio.h	/^	nc_int64_t 			iov_xfer_bytes;$/;"	m	struct:nc_asio_vector
is_in_xfile	../test/driver_test.c	/^is_in_xfile(char *path)$/;"	f
iserror	../include/cfs_driver.h	/^	int								(*iserror)(int code);$/;"	m	struct:cfs_origin_driver
ishard	../include/netcache.h	/^	int  				ishard; 	\/* hard purge이면 1 *\/$/;"	m	struct:__anon54
ishard	../netcache/mdb.c	/^	nc_uint32_t		ishard;$/;"	m	struct:mdb_remove_rowi_tag	file:
isidle	../include/glru.h	/^	int 			(*isidle)(void  *);$/;"	m	struct:tag_glru
isidle	../include/glru.h	/^	int 			(*isidle)(void *);$/;"	m	struct:tag_glru_operations
isidle	../netcache/threadpool.c	/^	tp_isidle_t 		isidle;$/;"	m	struct:tag_threadpool	file:
iskey	../include/netcache.h	/^	int  				iskey; 		\/* key match이면 1, 0이면 path match *\/$/;"	m	struct:__anon54
isrwlock	../netcache/hash.c	/^	int 				isrwlock; 	\/* 1 : rw lock would be used *\/$/;"	m	struct:u_hash_table	file:
issamecode	../include/cfs_driver.h	/^	int								(*issamecode)(int cachedcode, int newcode);$/;"	m	struct:cfs_origin_driver
itimer	../test/gprof-helper.c	/^	struct itimerval itimer;$/;"	m	struct:wrapper_s	typeref:struct:wrapper_s::itimerval	file:
ival	../test/test_kv.c	34;"	d	file:
ival	../test/test_path.c	37;"	d	file:
jiff	../include/util.h	/^typedef unsigned long long jiff;$/;"	t
jindex	../netcache/part_mgr.c	/^	int 					jindex; \/* partition index *\/$/;"	m	struct:tag_query_inode_inode_quark	file:
jobid	../include/ncapi.h	/^	uuid_t 			jobid;$/;"	m	struct:__anon42
k_uuid	../test/uuid_test.c	/^static uuid_t	k_uuid;$/;"	v	file:
k_uuid_init	../test/uuid_test.c	/^static int 		k_uuid_init = 0;$/;"	v	file:
kept	../include/cyclic_lfu.h	/^	long				kept;$/;"	m	struct:__anon32
key	../include/kv.h	/^	char 			*key;$/;"	m	struct:__anon36
key	../include/netcache.h	/^	char 				*key;$/;"	m	struct:purge_info
key	../include/netcache.h	/^	char 			*key;$/;"	m	struct:tag_nc_kv_node
key	../netcache/fhops.c	/^	char 				*key;$/;"	m	struct:fio_open_sync_info	file:
key	../netcache/hash.c	/^	void *			key;$/;"	m	struct:u_hash_node	file:
key	../netcache/mdb.c	/^	char			*key;$/;"	m	struct:mdb_inserti_tag	file:
key	../netcache/mdb.c	/^	char			*key;$/;"	m	struct:mdb_removei_tag	file:
keychanged	../include/netcache.h	/^			nc_uint32_t         	keychanged:1;$/;"	m	struct:apc_open_context::__anon49::__anon50
kv_add_val	../netcache/kv.c	/^kv_add_val(nc_kv_list_t *root, char *key, char *val)$/;"	f
kv_add_val_d	../netcache/kv.c	/^kv_add_val_d(nc_kv_list_t *root, char *key, char *val, const char *f, int l)$/;"	f
kv_add_val_extended	../netcache/kv.c	/^kv_add_val_extended(nc_kv_list_t *root, char *key, char *val, const char *f, int l, int ignore)$/;"	f
kv_cleanup	../netcache/kv.c	/^kv_cleanup(nc_xtra_options_t *kv)$/;"	f	file:
kv_clone	../netcache/kv.c	/^kv_clone(nc_xtra_options_t *root, char *f, int l)$/;"	f
kv_clone_d	../netcache/kv.c	/^kv_clone_d(nc_xtra_options_t *root, const char *file, int l)$/;"	f
kv_count_allocated	../netcache/kv.c	/^kv_count_allocated()$/;"	f
kv_create	../netcache/kv.c	/^kv_create(char *f, int l)$/;"	f
kv_create_d	../netcache/kv.c	/^kv_create_d(char *f, int l)$/;"	f
kv_create_pool_d	../netcache/kv.c	/^kv_create_pool_d(void *cb, void *(*allocator )(void *cb, size_t sz), const char *f, int l)$/;"	f
kv_destroy	../netcache/kv.c	/^kv_destroy(nc_kv_list_t *root) $/;"	f
kv_dump_allocated	../netcache/kv.c	/^kv_dump_allocated()$/;"	f
kv_dump_oob	../netcache/kv.c	/^kv_dump_oob(char *buf, int l, nc_xtra_options_t *opt)$/;"	f
kv_dump_property	../netcache/kv.c	/^kv_dump_property(nc_xtra_options_t *root, char *buf, int len)$/;"	f
kv_dump_property_debugger	../netcache/kv.c	/^kv_dump_property_debugger(nc_xtra_options_t *root)$/;"	f
kv_find_val	../netcache/kv.c	/^kv_find_val(nc_kv_list_t *root, char *key, int bcase)$/;"	f
kv_find_val_extened	../netcache/kv.c	/^kv_find_val_extened(nc_kv_list_t *root, char *key, int bcase, int ignore)$/;"	f
kv_for_each	../netcache/kv.c	/^kv_for_each(nc_kv_list_t *root, int (*do_it)(char *key, char *val, void *cb), void *cb)$/;"	f
kv_for_each_and_remove	../netcache/kv.c	/^kv_for_each_and_remove(nc_kv_list_t *root, int (*do_it)(char *key, char *val, void *cb), void *cb)$/;"	f
kv_get_client	../netcache/kv.c	/^kv_get_client(nc_xtra_options_t *kv)$/;"	f
kv_get_opaque	../netcache/kv.c	/^kv_get_opaque(nc_xtra_options_t *root)$/;"	f
kv_get_raw_code	../netcache/kv.c	/^kv_get_raw_code(nc_xtra_options_t *root)$/;"	f
kv_get_stat_key	../netcache/kv.c	/^kv_get_stat_key(nc_xtra_options_t *root)$/;"	f
kv_is_pooled	../netcache/kv.c	/^kv_is_pooled(nc_xtra_options_t *kv)$/;"	f
kv_oob_command	../netcache/kv.c	/^kv_oob_command(nc_xtra_options_t *kv, char *cmd, nc_size_t len)$/;"	f
kv_oob_endofdata	../netcache/kv.c	/^kv_oob_endofdata(nc_xtra_options_t *kv)$/;"	f
kv_oob_error	../netcache/kv.c	/^kv_oob_error(nc_xtra_options_t *kv, int err)$/;"	f
kv_oob_lock	../netcache/kv.c	/^kv_oob_lock(nc_xtra_options_t *opt)$/;"	f
kv_oob_read	../netcache/kv.c	/^kv_oob_read(nc_xtra_options_t *kv, char  *data, size_t len, long tomsec)$/;"	f
kv_oob_set_error	../netcache/kv.c	/^kv_oob_set_error(nc_xtra_options_t *kv, int err)$/;"	f
kv_oob_set_notifier	../netcache/kv.c	/^kv_oob_set_notifier(nc_xtra_options_t *kv, int (*callback)(nc_xtra_options_t *kv, void*), void *callback_data)$/;"	f
kv_oob_unlock	../netcache/kv.c	/^kv_oob_unlock(nc_xtra_options_t *opt)$/;"	f
kv_oob_valid	../netcache/kv.c	/^kv_oob_valid(nc_xtra_options_t *opt)$/;"	f
kv_oob_write	../netcache/kv.c	/^kv_oob_write(nc_xtra_options_t *kv, char *data, size_t len)$/;"	f
kv_oob_write_eot	../netcache/kv.c	/^kv_oob_write_eot(nc_xtra_options_t *kv)$/;"	f
kv_remove	../netcache/kv.c	/^kv_remove(nc_kv_list_t *root, char *key, int casesensitive)$/;"	f
kv_replace	../netcache/kv.c	/^kv_replace(nc_kv_list_t *root, char *key, char *value, int bcase)$/;"	f
kv_set_client	../netcache/kv.c	/^kv_set_client(nc_xtra_options_t *kv, void *client, int len)$/;"	f
kv_set_nttl	../netcache/kv.c	/^kv_set_nttl(nc_xtra_options_t *root, nc_time_t nttl)$/;"	f
kv_set_opaque	../netcache/kv.c	/^kv_set_opaque(nc_xtra_options_t *root, void *opaque)$/;"	f
kv_set_pttl	../netcache/kv.c	/^kv_set_pttl(nc_xtra_options_t *root, nc_time_t pttl)$/;"	f
kv_set_raw_code	../netcache/kv.c	/^kv_set_raw_code(nc_xtra_options_t *root, int code)$/;"	f
kv_set_stat_key	../netcache/kv.c	/^kv_set_stat_key(nc_xtra_options_t *root, void *keyid)$/;"	f
kv_setup_ring	../netcache/kv.c	/^kv_setup_ring(nc_xtra_options_t *kv, size_t bufsiz)$/;"	f
kv_update_trace	../netcache/kv.c	/^kv_update_trace(nc_kv_list_t *root, char *f, int l)$/;"	f
kv_valid	../netcache/kv.c	/^kv_valid(nc_xtra_options_t *opt)$/;"	f
l_encoding	../include/cfs_driver.h	/^	char 							l_encoding[128];$/;"	m	struct:cfs_origin_driver
lasterror	../include/cfs_driver.h	/^	int 							(*lasterror)(void);$/;"	m	struct:cfs_origin_driver
lastrun	../include/netcache.h	/^	time_t	lastrun;			\/* last expiration time *\/$/;"	m	struct:tag_expire_info
lastsynctime	../include/netcache.h	/^	nc_time_t 						lastsynctime; \/* 마지막으로 동기된 시점 *\/$/;"	m	struct:tag_fc_inode_info
lasttuned	../include/cyclic_lfu.h	/^	time_t			lasttuned;$/;"	m	struct:__anon32
leak_info	../netcache/heaptrack.c	/^struct leak_info {$/;"	s	file:
len	../include/cfs_driver.h	/^	int				len;$/;"	m	struct:tag_nc_open_cc_quark
len	../include/cfs_driver.h	/^	int			len;	\/* buffer size *\/$/;"	m	struct:cfs_iov
len	../include/netcache.h	/^	int 	len; 	\/* opaque length *\/$/;"	m	struct:tag_opaque
len	../include/netcache.h	/^	nc_int16_t		len;$/;"	m	struct:tag_vstring
len	../include/netcache.h	/^	nc_size_t				len;$/;"	m	struct:apc_read_context
len	../include/shm_wrapper.h	/^	size_t 				len;$/;"	m	struct:nc_shm_tag
len	../netcache/diskcache.c	/^	int		len;$/;"	m	struct:dump_wait_info	file:
len	../test/vstr_test.c	/^	nc_int16_t		len;$/;"	m	struct:tag_vstring	file:
length	../include/asio.h	/^	nc_int32_t 				length;$/;"	m	struct:nc_asio_context
length	../include/block.h	/^	int					length;		\/* 읽기 요청 총 바이트 수*\/$/;"	m	struct:tag_blk_apc_read_info
length	../netcache/util.c	/^		nc_uint32_t 	length;$/;"	m	struct:__anon12	file:
length	../netcache/util.c	/^		nc_uint32_t 	length;$/;"	m	struct:__anon13	file:
likely	../include/util.h	129;"	d
likely	../include/util.h	135;"	d
line	../include/block.h	/^	int				line;$/;"	m	struct:tag_fc_blk
line	../include/netcache.h	/^	int 						line;$/;"	m	struct:tag_nc_kv_list
line	../netcache/backtrace.c	/^	unsigned line;$/;"	m	struct:find_info	file:
line	../netcache/clfu.c	/^	int			line;$/;"	m	struct:tag_bl_t	file:
line	../netcache/mdb.c	/^	long 	line;$/;"	m	struct:__anon10	file:
line	../netcache/util.c	/^	int			line;$/;"	m	struct:__anon15	file:
line	../netcache/util.c	/^	int			line;$/;"	m	struct:tag_mls_t	file:
line	../netcache/volumeops.c	/^	int			line;$/;"	m	struct:tag_pls_t	file:
line	../test/sorteddll.c	/^	int 				line;$/;"	m	struct:tag_link_node	file:
link	../include/cfs_driver.h	/^	int								(*link)(struct cfs_origin_driver *drv, char *path1, char *path2);$/;"	m	struct:cfs_origin_driver
link_add_n_sort	../netcache/util.c	/^link_add_n_sort(link_list_t *list, void *data, link_node_t *m, int (*_comp)(void *a, void *b))$/;"	f
link_add_n_sort	../test/sorteddll.c	/^link_add_n_sort(link_list_t *list, void *data, link_node_t *m, int (*_comp)(void *a, void *b), const char *f, int l)$/;"	f
link_append	../netcache/util.c	/^link_append(link_list_t *list, void *data, link_node_t *m)$/;"	f
link_contains	../netcache/util.c	/^link_contains(link_list_t *list, link_node_t *m)$/;"	f
link_count	../netcache/util.c	/^link_count(link_list_t *list, int forward)$/;"	f
link_del	../netcache/util.c	/^link_del(link_list_t *list, link_node_t *m)$/;"	f
link_dump	../netcache/util.c	/^link_dump(char *prefix, link_list_t *list, int forward)$/;"	f	file:
link_empty	../netcache/util.c	/^link_empty(link_list_t *list)$/;"	f
link_foreach	../netcache/util.c	/^link_foreach(link_list_t *list, int (*proc)(void *, void *), void *ud)$/;"	f
link_get_head	../netcache/util.c	/^link_get_head(link_list_t *list)$/;"	f
link_get_head_node	../netcache/util.c	/^link_get_head_node(link_list_t *list)$/;"	f
link_get_head_noremove	../netcache/util.c	/^link_get_head_noremove(link_list_t *list)$/;"	f
link_get_head_noremove	../test/sorteddll.c	/^link_get_head_noremove(link_list_t *list)$/;"	f
link_get_next	../netcache/util.c	/^link_get_next(link_list_t *list, link_node_t *node)$/;"	f
link_get_next	../test/sorteddll.c	/^link_get_next(link_list_t *list, link_node_t *node)$/;"	f
link_get_node_prev	../netcache/util.c	/^link_get_node_prev(link_list_t *list, link_node_t *node)$/;"	f
link_get_prev	../netcache/util.c	/^link_get_prev(link_list_t *list, link_node_t *node)$/;"	f
link_get_tail	../netcache/util.c	/^link_get_tail(link_list_t *list)$/;"	f
link_get_tail_node_noremove	../netcache/util.c	/^link_get_tail_node_noremove(link_list_t *list)$/;"	f	file:
link_get_tail_noremove	../netcache/util.c	/^link_get_tail_noremove(link_list_t *list)$/;"	f
link_join	../netcache/util.c	/^link_join(link_list_t *a, link_list_t *b)$/;"	f
link_list_t	../include/util.h	/^} link_list_t;$/;"	t	typeref:struct:tag_link_list
link_list_t	../test/sorteddll.c	/^} link_list_t;$/;"	t	typeref:struct:tag_link_list	file:
link_move_head	../netcache/util.c	/^link_move_head(link_list_t *list, link_node_t *m)$/;"	f
link_node_t	../include/netcache_types.h	/^} link_node_t;$/;"	t	typeref:struct:tag_link_node
link_node_t	../test/sorteddll.c	/^} link_node_t;$/;"	t	typeref:struct:tag_link_node	file:
link_node_valid	../netcache/util.c	/^link_node_valid(link_node_t *m)$/;"	f
link_prepend	../netcache/util.c	/^link_prepend(link_list_t *list, void *data, link_node_t *m)$/;"	f
link_prove	../netcache/util.c	/^link_prove(link_list_t *list, int forward)$/;"	f
link_sort	../netcache/util.c	/^link_sort(link_list_t *list, int (*compare)(void *a, void *b))$/;"	f
link_verify	../netcache/util.c	/^link_verify(link_list_t *list)$/;"	f
linux_kernel_version	../netcache/util.c	/^linux_kernel_version(int *M, int *m, int *p)$/;"	f
lioctl	../include/cfs_driver.h	/^	int								(*lioctl)(struct cfs_origin_driver *drv, int cmd, void *val, int vallen);$/;"	m	struct:cfs_origin_driver
lip_compare	../netcache/heaptrack.c	/^lip_compare(const void *a, const void *b)$/;"	f	file:
list	../common/asio_mgr.c	/^	link_list_t		list;$/;"	m	struct:__anon1	file:
list	../include/fio.h	/^	nc_kv_list_t 		list; \/*extended key-value list if any*\/$/;"	m	struct:tag_nc_file_ref
list	../include/kv.h	/^	link_list_t 	list;$/;"	m	struct:__anon35
list	../include/lru.h	/^  	link_list_t        	list;$/;"	m	struct:tag_lru_root
list	../include/netcache.h	/^	link_list_t 		list; 		\/* inode 리스트*\/$/;"	m	struct:__anon54
list	../include/netcache.h	/^	link_list_t 		list;$/;"	m	struct:__anon53
list	../include/netcache.h	/^	nc_kv_list_t 				*list; \/*extended key-value list if any*\/$/;"	m	struct:tag_nc_file_ref
list	../include/tlc_queue.h	/^	link_list_t			list;$/;"	m	struct:tlcqueue
list	../netcache/part_mgr.c	/^	link_list_t			list;$/;"	m	struct:tag_part_table_info	file:
list_for_each	../include/bt_tmlist.h	324;"	d
list_for_each_continue_rcu	../include/bt_tmlist.h	458;"	d
list_for_each_entry	../include/bt_tmlist.h	366;"	d
list_for_each_entry_continue	../include/bt_tmlist.h	393;"	d
list_for_each_entry_rcu	../include/bt_tmlist.h	443;"	d
list_for_each_entry_reverse	../include/bt_tmlist.h	379;"	d
list_for_each_entry_safe	../include/bt_tmlist.h	407;"	d
list_for_each_prev	../include/bt_tmlist.h	346;"	d
list_for_each_rcu	../include/bt_tmlist.h	418;"	d
list_for_each_safe	../include/bt_tmlist.h	356;"	d
list_for_each_safe_rcu	../include/bt_tmlist.h	433;"	d
list_head	../include/bt_tmlist.h	/^struct list_head {$/;"	s
ll2dp	../netcache/util.c	/^ll2dp(char *buf, int buf_len, long long n)$/;"	f
lno	../netcache/util.c	/^	int		lno;$/;"	m	struct:__anon14	file:
lo_check	../netcache/util.c	/^lo_check(int sno_to_lock)$/;"	f
lo_pop	../netcache/util.c	/^lo_pop()$/;"	f
lo_push	../netcache/util.c	/^lo_push(int sno_to_lock, char *f, int l)$/;"	f
local_ip	../test/driver_test.c	/^char 			local_ip[128]="";$/;"	v
localtime_r	../include/util.h	365;"	d
localtime_r	../netcache/util.c	/^localtime_r(const time_t *timep, struct tm *result)$/;"	f
lock	../common/asio_mgr.c	/^	pthread_spinlock_t lock;$/;"	m	struct:__anon1	file:
lock	../include/asio.h	/^	nc_path_lock_t		*lock;$/;"	m	struct:nc_asio_vector
lock	../include/cfs_driver.h	/^	nc_ulock_t						lock;$/;"	m	struct:nc_volume_context
lock	../include/cfs_driver.h	/^	pthread_mutex_t 			lock;$/;"	m	struct:nc_path_lock_tag
lock	../include/cfs_driver.h	/^	pthread_rwlock_t 			lock;$/;"	m	struct:nc_path_lock_tag
lock	../include/cyclic_lfu.h	/^		void			*lock;$/;"	m	union:__anon32::__anon33
lock	../include/fio.h	/^	nc_path_lock_t		*lock;$/;"	m	struct:tag_nc_file_ref
lock	../include/glru.h	/^	pthread_mutex_t 	lock;$/;"	m	struct:tag_glru
lock	../include/log.h	/^	pthread_mutex_t lock;$/;"	m	struct:_log_handle
lock	../include/netcache.h	/^	nc_path_lock_t				*lock;$/;"	m	struct:tag_nc_file_ref
lock	../include/netcache.h	/^	pthread_mutex_t					lock;$/;"	m	struct:tag_fc_inode_info
lock	../include/netcache_types.h	/^			pthread_mutex_t			lock;$/;"	m	struct:tag_apc_overlapped::__anon62::__anon64
lock	../include/tlc_queue.h	/^    pthread_mutex_t     *lock;	\/* condition lock, used only if waitable=1 *\/$/;"	m	struct:tlcqueue
lock	../include/wb_timer.h	/^	pthread_mutex_t 	lock;$/;"	m	struct:timer_list
lock	../netcache/bt_timer.c	/^	pthread_mutex_t		lock;$/;"	m	struct:timerwheels	file:
lock	../netcache/diskcache.c	/^	pthread_mutex_t					lock;$/;"	m	struct:tag_cachedir_state	file:
lock	../netcache/hash.c	/^	pthread_mutex_t		*lock;$/;"	m	struct:u_hash_table	file:
lock	../netcache/mdb.c	/^	mdb_rwlock_t 		lock;$/;"	m	struct:tag_nc_mdb_handle	file:
lock	../netcache/mdb.c	/^	nc_lock_t		lock;$/;"	m	struct:mdb_inserti_tag	file:
lock	../netcache/mdb.c	/^	nc_lock_t		lock;$/;"	m	struct:mdb_remove_rowi_tag	file:
lock	../netcache/mdb.c	/^	nc_lock_t		lock;$/;"	m	struct:mdb_removei_tag	file:
lock	../netcache/mdb.c	/^	nc_lock_t		lock;$/;"	m	struct:mdb_update_rowi_tag	file:
lock	../netcache/mdb.c	/^	pthread_mutex_t 	lock;$/;"	m	struct:mdb_rwlock	file:
lock	../netcache/part_mgr.c	/^	pthread_mutex_t		lock;$/;"	m	struct:tag_part_table_info	file:
lock	../netcache/part_mgr.c	/^	pthread_mutex_t 		lock;$/;"	m	struct:tag_query_inode	file:
lock	../netcache/ringbuffer.c	/^	pthread_mutex_t lock;$/;"	m	struct:tag_nc_ringbuffer	file:
lock	../netcache/threadpool.c	/^	pthread_mutex_t		lock;$/;"	m	struct:tag_threadpool	file:
lock	../netcache/wb_timer.c	/^	pthread_mutex_t lock;$/;"	m	struct:tvec_t_base_s	file:
lock	../rwtest/rwtest.c	/^	pthread_mutex_t		lock;$/;"	m	struct:nc_rw_lock	file:
lock	../test/gprof-helper.c	/^	pthread_mutex_t lock;$/;"	m	struct:wrapper_s	file:
lock_info_t	../netcache/util.c	/^} lock_info_t;$/;"	t	typeref:struct:__anon15	file:
lock_timer	../netcache/wb_timer.c	/^void lock_timer(void *base, int lock)$/;"	f
locked	../include/asio.h	/^	nc_int8_t 			locked;$/;"	m	struct:nc_asio_vector
locked	../netcache/bc_mgr.c	/^	int		locked;$/;"	m	struct:bcm_stat	file:
lockmode	../netcache/hash.c	/^	int 				lockmode; 	\/* 1 : lock used for every operation *\/$/;"	m	struct:u_hash_table	file:
lockshared	../netcache/hash.c	/^	int				    lockshared;$/;"	m	struct:u_hash_table	file:
locktype	../include/cyclic_lfu.h	/^	clfu_lock_type_t	locktype;$/;"	m	struct:__anon32
logLock	../netcache/log.c	/^pthread_mutex_t logLock;$/;"	v
log_dir	../include/log.h	/^    char   log_dir[256];$/;"	m	struct:_log_handle
log_file	../test/driver_test.c	/^char			log_file[512] = "g:\\\\logs\\\\nc.log";$/;"	v
log_file	../test/volume_test.c	/^char			log_file[512] = ".\/vt.log";$/;"	v
lookup	../include/glru.h	/^	void *			(*lookup)(void *, const char *);$/;"	m	struct:tag_glru
lookup	../include/glru.h	/^	void *			(*lookup)(void *, const char *);$/;"	m	struct:tag_glru_operations
lookup_ml_stat	../netcache/util.c	/^lookup_ml_stat(char *f, int l)$/;"	f	file:
lookup_section	../netcache/backtrace.c	/^lookup_section(bfd *abfd, asection *sec, void *opaque_data)$/;"	f	file:
loopcnt	../test/driver_test.c	/^int 			loopcnt = 1000;$/;"	v
loopcnt	../test/volume_test.c	/^int 			loopcnt = 1000;$/;"	v
lpmap_clear	../netcache/blkio_lpmap.c	/^lpmap_clear(fc_inode_t *inode)$/;"	f
lpmap_dump	../netcache/blkio_lpmap.c	/^lpmap_dump(fc_inode_t *inode, int tflag, const char *caller)$/;"	f
lpmap_free_nolock	../netcache/blkio_lpmap.c	/^lpmap_free_nolock(fc_inode_t *inode, nc_blkno_t blkno)$/;"	f
lpmap_physical_offset	../netcache/blkio_lpmap.c	/^lpmap_physical_offset(fc_inode_t *inode, nc_blkno_t blkno, int alloc)$/;"	f
lru	../include/cyclic_lfu.h	/^	fc_lru_root_t	**lru;		\/* in periodic way, we move ptr to lru to the next band *\/$/;"	m	struct:__anon32
lru_cap	../include/lru.h	/^  	int					lru_cap;  \/* # of max elements should be in *\/$/;"	m	struct:tag_lru_root
lru_cnt	../include/lru.h	/^  	int					lru_cnt;  \/*# of elements, used to trigger cache reclaim *\/$/;"	m	struct:tag_lru_root
lru_node_t	../include/lru.h	/^} lru_node_t;$/;"	t	typeref:struct:__anon37
lsd_free	../netcache/cfs_driver.c	/^lsd_free(void *d)$/;"	f	file:
magic	../include/block.h	/^	nc_uint32_t			magic;$/;"	m	struct:tag_blk_apc_read_info
magic	../include/cfs_driver.h	/^	nc_uint32_t						magic;$/;"	m	struct:cfs_origin_driver
magic	../include/cfs_driver.h	/^	nc_uint32_t						magic;$/;"	m	struct:nc_volume_context
magic	../include/netcache.h	/^	nc_uint16_t 		magic;$/;"	m	struct:tag_nc_mdb_inode_info
magic	../include/netcache.h	/^	nc_uint32_t 				magic;$/;"	m	struct:tag_nc_file_ref
magic	../include/netcache.h	/^	nc_uint32_t 				magic;$/;"	m	struct:tag_nc_kv_list
magic	../include/netcache.h	/^  	nc_uint32_t			magic;$/;"	m	struct:tag_fc_common_header_info
magic	../include/wb_timer.h	/^	unsigned long 		magic;$/;"	m	struct:timer_list
magic	../netcache/disk_io_ops.c	/^	unsigned short		magic;$/;"	m	struct:nc_iocb_xtra	file:
magic	../netcache/mdb.c	/^	nc_uint32_t			magic;$/;"	m	struct:mdb_rwlock	file:
magic	../netcache/mdb.c	/^	nc_uint32_t 		magic; \/* 0xA55A5AA5 *\/$/;"	m	struct:tag_nc_mdb_handle	file:
magic	../netcache/part_mgr.c	/^	nc_uint16_t 			magic;$/;"	m	struct:tag_query_inode	file:
magic	../netcache/threadpool.c	/^	nc_uint64_t 		magic;$/;"	m	struct:tag_threadpool	file:
magic	../netcache/util.c	/^		nc_uint16_t 	magic;$/;"	m	struct:__anon13	file:
magic	../netcache/util.c	/^		nc_uint32_t 	magic;$/;"	m	struct:__anon12	file:
magic	../test/sorteddll.c	/^	unsigned short 			magic;$/;"	m	struct:tag_link_node	file:
magic	../util/nc_convert.c	/^	unsigned long     magic;$/;"	m	struct:tag_fc_old_header_info	file:
main	../rwtest/rwtest.c	/^main()$/;"	f
main	../test/db.c	/^int main(int argc, char *argv[])$/;"	f
main	../test/driver_test.c	/^main(int argc, char *argv[])$/;"	f
main	../test/integrity_test.c	/^main(int argc, char *argv[])$/;"	f
main	../test/list_test.c	/^main()$/;"	f
main	../test/mem_test.c	/^int main()$/;"	f
main	../test/rb_test.c	/^int main()$/;"	f
main	../test/sorteddll.c	/^main()$/;"	f
main	../test/test_kv.c	/^main(int argc, const char *argv[])$/;"	f
main	../test/test_path.c	/^main(const char *argv[], int argc)$/;"	f
main	../test/uuid_test.c	/^main()$/;"	f
main	../test/volume_test.c	/^main(int argc, char *argv[])$/;"	f
main	../test/vstr_test.c	/^main()$/;"	f
main	../util/nc_checkfs.c	/^main(int argc, char *argv[])$/;"	f
make_crc	../netcache/util.c	/^make_crc(char *buf, int len)$/;"	f
make_timeout	../netcache/util.c	/^make_timeout( struct timespec *to, long msec, clockid_t cid)$/;"	f
malloc	../netcache/heaptrack.c	/^malloc(size_t sz)$/;"	f
malloc_internal	../netcache/heaptrack.c	/^malloc_internal(size_t sz)$/;"	f	file:
malloc_usable_size	../netcache/heaptrack.c	/^malloc_usable_size(void *v)$/;"	f
map	../include/shm_wrapper.h	/^	nc_shm_mapf_t 	map;$/;"	m	struct:nc_shm_tag
mapped	../include/netcache.h	/^	nc_uint32_t 					mapped;$/;"	m	struct:tag_fc_inode_info
mappedcnt	../include/block.h	/^	nc_uint16_t		mappedcnt; 		\/* total mapped page count *\/$/;"	m	struct:tag_fc_blk
match_info_t	../include/netcache.h	/^} match_info_t;$/;"	t	typeref:struct:__anon53
match_inode_t	../include/netcache.h	/^} match_inode_t;$/;"	t	typeref:struct:__anon52
match_target	../include/netcache.h	/^	nc_uint8_t 			match_target; \/* 0: key, 1: path *\/$/;"	m	struct:__anon53
mavg_create	../netcache/mavg.c	/^mavg_create(char *name)$/;"	f
mavg_name	../netcache/mavg.c	/^mavg_name(mavg_t *hm)$/;"	f
mavg_stat	../netcache/mavg.c	/^mavg_stat(mavg_t *hm, long *cnt, double *vmin, double *vmax, double *vavg)$/;"	f
mavg_t	../include/util.h	/^} mavg_t;$/;"	t	typeref:struct:__anon68
mavg_update	../netcache/mavg.c	/^mavg_update(mavg_t *hm, double v)$/;"	f
max	../include/hash.h	26;"	d
max	../include/util.h	43;"	d
max	../netcache/ringbuffer.c	68;"	d	file:
max_cnt	../include/log.h	/^    int    max_cnt;        \/\/ Max LogCount$/;"	m	struct:_log_handle
max_count	../include/glru.h	/^	int 				max_count;$/;"	m	struct:tag_glru
max_threads	../netcache/threadpool.c	/^	int					max_threads;$/;"	m	struct:tag_threadpool	file:
maxblkno	../include/netcache.h	/^  	nc_blkno_t     					maxblkno;$/;"	m	struct:tag_fc_inode_info
maxbusy	../netcache/threadpool.c	/^	int 				maxbusy;	\/* # of running threads *\/$/;"	m	struct:tag_threadpool	file:
maxretry	../netcache/mdb.c	/^	int 			maxretry;	\/* max allowable retry *\/$/;"	m	struct:tag_mdb_session	file:
mc	../include/cfs_driver.h	/^	struct nc_volume_context 		*mc;$/;"	m	struct:cfs_origin_driver	typeref:struct:cfs_origin_driver::nc_volume_context
mc	../netcache/volumeops.c	/^	nc_volume_context_t	*mc;$/;"	m	struct:tag_volume_context_fi	file:
mcategory	../netcache/hash.c	/^	int				    mcategory;$/;"	m	struct:u_hash_table	file:
mdb	../include/netcache.h	/^	nc_mdb_handle_t		*mdb;$/;"	m	struct:tag_part_element
mdb_acquire_writer	../netcache/mdb.c	/^mdb_acquire_writer(nc_mdb_handle_t *mdb, int wt)$/;"	f	file:
mdb_batch_upsert_handler	../netcache/mdb.c	/^mdb_batch_upsert_handler(void *u)$/;"	f	file:
mdb_blocking_prepare_v2	../netcache/mdb.c	/^mdb_blocking_prepare_v2($/;"	f	file:
mdb_blocking_step	../netcache/mdb.c	/^mdb_blocking_step(sqlite3_stmt *pStmt)$/;"	f	file:
mdb_busy_handler	../netcache/mdb.c	/^mdb_busy_handler(void *pArg, int nbusy)$/;"	f	file:
mdb_check_error	../netcache/mdb.c	/^mdb_check_error(nc_mdb_handle_t *mdb, int ret)$/;"	f	file:
mdb_check_exist_object	../netcache/mdb.c	/^mdb_check_exist_object(nc_mdb_handle_t *mdb, mdb_session_t *dbs, char *type, char *object)$/;"	f	file:
mdb_check_exists	../netcache/mdb.c	/^mdb_check_exists(nc_mdb_handle_t *mdb, mdb_session_t *dbs, char *table, char *column)$/;"	f	file:
mdb_check_leak	../netcache/mdb.c	/^mdb_check_leak(void *u)$/;"	f
mdb_check_object_exist	../netcache/mdb.c	/^mdb_check_object_exist(nc_mdb_handle_t *mdb, mdb_session_t *dbs, char *objecttype, char *objectname)$/;"	f	file:
mdb_check_status	../netcache/mdb.c	/^mdb_check_status(char *buf, int len)$/;"	f
mdb_check_valid	../netcache/mdb.c	/^mdb_check_valid( nc_mdb_handle_t *mdb)$/;"	f
mdb_checkpoint_timer	../netcache/mdb.c	/^mdb_checkpoint_timer(void *u)$/;"	f	file:
mdb_close	../netcache/mdb.c	/^mdb_close(nc_mdb_handle_t *tdb)$/;"	f
mdb_counter	../netcache/mdb.c	/^mdb_counter(int type)$/;"	f	file:
mdb_create_session	../netcache/mdb.c	/^mdb_create_session(nc_mdb_handle_t *mdb, char * dbname)$/;"	f	file:
mdb_force_checkpoint	../netcache/mdb.c	/^mdb_force_checkpoint(nc_mdb_handle_t *mdb, mdb_session_t * dbs, int forced)$/;"	f	file:
mdb_get_cached_stmt	../netcache/mdb.c	/^mdb_get_cached_stmt(nc_mdb_handle_t *mdb, mdb_session_t *session, int idx)$/;"	f	file:
mdb_get_counter	../netcache/mdb.c	/^mdb_get_counter(nc_uint64_t *r, nc_uint64_t *w, nc_uint64_t *m)$/;"	f
mdb_get_lru_entries	../netcache/mdb.c	/^mdb_get_lru_entries(nc_mdb_handle_t *mdb, struct purge_info *pi, int maxcount)$/;"	f
mdb_get_primary	../netcache/mdb.c	/^mdb_get_primary(char *buf)$/;"	f
mdb_hash	../netcache/mdb.c	/^mdb_hash(sqlite3_context *context, int argc, sqlite3_value **argv) $/;"	f	file:
mdb_inode_pack_properties	../netcache/mdb.c	/^mdb_inode_pack_properties(nc_xtra_options_t *property, size_t *packed_size)$/;"	f	file:
mdb_inode_unpack_properties	../netcache/mdb.c	/^mdb_inode_unpack_properties(char *packed_array)$/;"	f	file:
mdb_insert	../netcache/mdb.c	/^mdb_insert(nc_mdb_handle_t *mdb, fc_inode_t *inode)$/;"	f
mdb_inserti_t	../netcache/mdb.c	/^} mdb_inserti_t;$/;"	t	typeref:struct:mdb_inserti_tag	file:
mdb_inserti_tag	../netcache/mdb.c	/^typedef struct mdb_inserti_tag {$/;"	s	file:
mdb_invalidate	../netcache/mdb.c	/^mdb_invalidate(nc_mdb_handle_t *mdb, int preservecase, char *signature, char *qid)$/;"	f
mdb_line_t	../netcache/mdb.c	/^} mdb_line_t;$/;"	t	typeref:struct:__anon10	file:
mdb_list_purge_targets	../netcache/mdb.c	/^mdb_list_purge_targets(	nc_volume_context_t *volume, $/;"	f
mdb_load	../netcache/mdb.c	/^mdb_load(nc_mdb_handle_t *mdb, int casepreserve, char *signature, char *object_key)$/;"	f
mdb_op_insert	../netcache/mdb.c	/^mdb_op_insert(	$/;"	f	file:
mdb_op_purge_rowid	../netcache/mdb.c	/^mdb_op_purge_rowid(	nc_mdb_handle_t	*	mdb,$/;"	f	file:
mdb_op_update_rowid	../netcache/mdb.c	/^mdb_op_update_rowid(	nc_mdb_handle_t	*	mdb,$/;"	f	file:
mdb_opcode_t	../netcache/mdb.c	/^} mdb_opcode_t;$/;"	t	typeref:enum:__anon9	file:
mdb_open	../netcache/mdb.c	/^mdb_open(nc_part_element_t *part, char *partition)$/;"	f
mdb_pool_free	../netcache/mdb.c	/^mdb_pool_free(void *m)$/;"	f
mdb_pool_init	../netcache/mdb.c	/^mdb_pool_init(void *u)$/;"	f
mdb_pool_malloc	../netcache/mdb.c	/^mdb_pool_malloc(int sz)$/;"	f
mdb_pool_realloc	../netcache/mdb.c	/^mdb_pool_realloc(void *m, int sz)$/;"	f
mdb_pool_roundup	../netcache/mdb.c	/^mdb_pool_roundup(int sz)$/;"	f
mdb_pool_shutdown	../netcache/mdb.c	/^mdb_pool_shutdown(void *u)$/;"	f
mdb_pool_size	../netcache/mdb.c	/^mdb_pool_size(void *m)$/;"	f
mdb_pop_session	../netcache/mdb.c	/^mdb_pop_session(nc_mdb_handle_t *mdb, int needcreate)$/;"	f	file:
mdb_purge	../netcache/mdb.c	/^mdb_purge(	nc_volume_context_t *volume, $/;"	f
mdb_purge_rowid	../netcache/mdb.c	/^mdb_purge_rowid(nc_mdb_handle_t 	*mdb,$/;"	f
mdb_purge_volume	../netcache/mdb.c	/^mdb_purge_volume(char *volume, nc_uint32_t version)$/;"	f
mdb_purge_with_key	../netcache/mdb.c	/^mdb_purge_with_key(	nc_volume_context_t *	volume, $/;"	f	file:
mdb_push_session	../netcache/mdb.c	/^mdb_push_session(nc_mdb_handle_t *mdb, mdb_session_t *dbs, int needclose)$/;"	f	file:
mdb_read_version_internal__	../netcache/mdb.c	/^mdb_read_version_internal__(nc_mdb_handle_t *mdb, mdb_session_t *dbs, char *vname)$/;"	f	file:
mdb_read_volume_age	../netcache/mdb.c	/^mdb_read_volume_age(nc_mdb_handle_t *mdb, char *volume)$/;"	f
mdb_read_volumes_version	../netcache/mdb.c	/^mdb_read_volumes_version(char *volume)$/;"	f
mdb_register_hash_function	../netcache/mdb.c	/^mdb_register_hash_function(sqlite3 *db)$/;"	f	file:
mdb_release_writer	../netcache/mdb.c	/^mdb_release_writer(nc_mdb_handle_t *mdb, mdb_session_t *s, int wt)$/;"	f	file:
mdb_remove_rowi_tag	../netcache/mdb.c	/^typedef struct mdb_remove_rowi_tag {$/;"	s	file:
mdb_remove_rowid_direct	../netcache/mdb.c	/^mdb_remove_rowid_direct(nc_mdb_handle_t	*mdb, uuid_t uuid, nc_int64_t rowid)$/;"	f
mdb_removei_t	../netcache/mdb.c	/^} mdb_removei_t;$/;"	t	typeref:struct:mdb_removei_tag	file:
mdb_removei_tag	../netcache/mdb.c	/^typedef struct mdb_removei_tag {$/;"	s	file:
mdb_reuse	../netcache/mdb.c	/^mdb_reuse(nc_mdb_handle_t *mdb, uuid_t uuid, nc_int64_t rowid, nc_time_t vtime, nc_uint32_t nver)$/;"	f
mdb_reuse_direct	../netcache/mdb.c	/^mdb_reuse_direct(nc_mdb_handle_t *mdb, mdb_session_t *dbs,  uuid_t uuid, nc_int64_t rowid, nc_time_t vtime, nc_uint32_t nver)$/;"	f	file:
mdb_rrow_t	../netcache/mdb.c	/^} mdb_rrow_t;$/;"	t	typeref:struct:mdb_remove_rowi_tag	file:
mdb_rwlock	../netcache/mdb.c	/^typedef struct mdb_rwlock {$/;"	s	file:
mdb_rwlock_init	../netcache/mdb.c	/^mdb_rwlock_init(mdb_rwlock_t *rwlock)$/;"	f	file:
mdb_rwlock_rdlock	../netcache/mdb.c	/^mdb_rwlock_rdlock(mdb_rwlock_t *rwlock, char *f, int l)$/;"	f	file:
mdb_rwlock_t	../netcache/mdb.c	/^} mdb_rwlock_t;$/;"	t	typeref:struct:mdb_rwlock	file:
mdb_rwlock_unlock	../netcache/mdb.c	/^mdb_rwlock_unlock(mdb_rwlock_t *rwlock)$/;"	f	file:
mdb_rwlock_wrlock	../netcache/mdb.c	/^mdb_rwlock_wrlock(mdb_rwlock_t *rwlock, char *f, int l)$/;"	f	file:
mdb_session_t	../netcache/mdb.c	/^} mdb_session_t ;$/;"	t	typeref:struct:tag_mdb_session	file:
mdb_tx_info_t	../include/netcache.h	/^} mdb_tx_info_t;$/;"	t	typeref:struct:__anon43
mdb_txno_compare	../netcache/mdb.c	/^mdb_txno_compare(mdb_tx_info_t *a, mdb_tx_info_t *b)$/;"	f
mdb_txno_isnull	../netcache/mdb.c	/^mdb_txno_isnull(mdb_tx_info_t *z)$/;"	f
mdb_txno_null	../netcache/mdb.c	/^mdb_txno_null(mdb_tx_info_t *z)$/;"	f
mdb_unlock_notify_cb	../netcache/mdb.c	/^mdb_unlock_notify_cb(void **apArg, int nArg)$/;"	f	file:
mdb_update_rowi_tag	../netcache/mdb.c	/^typedef struct mdb_update_rowi_tag {$/;"	s	file:
mdb_update_rowid	../netcache/mdb.c	/^mdb_update_rowid(nc_mdb_handle_t	*mdb,$/;"	f
mdb_updrow_t	../netcache/mdb.c	/^} mdb_updrow_t;$/;"	t	typeref:struct:mdb_update_rowi_tag	file:
mdb_upgrade_version_internal__	../netcache/mdb.c	/^mdb_upgrade_version_internal__(nc_mdb_handle_t *mdb, mdb_session_t *dbs, char *volume, nc_uint32_t version)$/;"	f	file:
mdb_wait_done	../netcache/mdb.c	/^mdb_wait_done(nc_mdb_handle_t *mdb, mdb_tx_info_t *txno)$/;"	f
mdb_wait_for_unlock_notify	../netcache/mdb.c	/^mdb_wait_for_unlock_notify(sqlite3 *db)$/;"	f	file:
mdbversion	../include/netcache.h	/^  	nc_uint32_t						mdbversion; 	 	\/* meta 정보가 바뀔때마다 1씩 증가*\/$/;"	m	struct:tag_fc_inode_info
mem_alloc	../netcache/memmgr.c	/^mem_alloc(memmgr_heap_t *heap, nc_size_t memsz, int aligned, int category, int force, const char *f, int l)$/;"	f
mem_free	../netcache/memmgr.c	/^mem_free(memmgr_heap_t *heap, void *p, int aligned, nc_size_t memsz, const char *f, int l)$/;"	f
mem_init	../netcache/memmgr.c	/^mem_init(memmgr_heap_t *heap, long long memsz)$/;"	f
mem_realloc	../netcache/memmgr.c	/^mem_realloc(memmgr_heap_t *heap, void *p, nc_size_t memsz, int category, const char *f, int l)$/;"	f
mem_stat	../netcache/memmgr.c	/^mem_stat(memmgr_heap_t *heap, nc_int64_t *used, nc_int64_t *total)$/;"	f
mem_strdup	../netcache/memmgr.c	/^mem_strdup(memmgr_heap_t *heap, char *str, int category, const char *f, int l)$/;"	f
memalign	../netcache/heaptrack.c	/^memalign(size_t align, size_t size)$/;"	f
memmgr_heap_t	../include/netcache.h	/^} memmgr_heap_t;$/;"	t	typeref:struct:tag_memmgr_heap
memory	../include/block.h	/^	nc_uint8_t	*memory; \/* 실제 page크기 메모리에 대한 포인터 *\/$/;"	m	struct:tag_page_ctrl
memory_monitor	../netcache/cfs_apix.c	/^memory_monitor(void *d)$/;"	f	file:
memres	../include/netcache_types.h	/^				nc_uint64_t 		memres:1; 			\/* 1 if the file data cached only on RAM *\/$/;"	m	struct:__anon65::bitefields
method	../include/ncapi.h	/^	char  				*method;$/;"	m	struct:__anon39
mhit_ratio	../netcache/cfs_apix.c	346;"	d	file:
min	../include/bitmap.h	78;"	d
min	../include/hash.h	23;"	d
min	../include/util.h	47;"	d
min	../netcache/heaptrack.c	38;"	d	file:
min	../netcache/ringbuffer.c	71;"	d	file:
min_threads	../netcache/threadpool.c	/^	int					min_threads;$/;"	m	struct:tag_threadpool	file:
minode	../netcache/part_mgr.c	/^	nc_mdb_inode_info_t		*minode;$/;"	m	struct:tag_query_inode	file:
missratio	../include/netcache.h	/^	float 							missratio;$/;"	m	struct:tag_fc_inode_info
mkdir	../include/cfs_driver.h	/^	int 							(*mkdir)(struct cfs_origin_driver *drv, char *path, mode_t mode);$/;"	m	struct:cfs_origin_driver
mknod	../include/cfs_driver.h	/^	int 							(*mknod)(struct cfs_origin_driver *drv, char *path, mode_t mode, void *hint, int hint_len);$/;"	m	struct:cfs_origin_driver
mls_t	../netcache/util.c	/^typedef struct tag_mls_t mls_t; $/;"	t	typeref:struct:tag_mls_t	file:
mnt	../test/driver_test.c	/^nc_volume_context_t	*mnt = NULL;$/;"	v
mnt_cnt	../test/driver_test.c	/^int 			mnt_cnt = 0;$/;"	v
mnt_m	../test/driver_test.c	/^nc_volume_context_t	*mnt_m[128];$/;"	v
mnt_to_create	../test/driver_test.c	/^int 			mnt_to_create = 15;$/;"	v
mod_timer	../netcache/wb_timer.c	/^int mod_timer(void *vt_base, struct timer_list *timer, unsigned long long expires)$/;"	f
mode	../include/cfs_driver.h	/^	int 						mode;$/;"	m	struct:dev_file_handle
mode	../include/fio.h	/^	mode_t 				mode;$/;"	m	struct:tag_nc_file_ref
mode	../include/ncapi.h	/^	nc_uint16_t		mode;   \/* bitwise comination, (1<<0):READ, (1<<1):WRITE *\/$/;"	m	struct:nc_volume_stat
mode	../include/netcache.h	/^	nc_mode_t			mode;$/;"	m	struct:tag_fc_header_info_v30
mode	../include/netcache.h	/^	nc_mode_t			mode;$/;"	m	struct:tag_nc_mdb_inode_info
mode	../include/netcache.h	/^	nc_mode_t 					mode;$/;"	m	struct:tag_nc_file_ref
mode	../include/netcache.h	/^	nc_mode_t   			mode;$/;"	m	struct:apc_open_context
mode	../netcache/fhops.c	/^	int 				mode;$/;"	m	struct:fio_open_sync_info	file:
mode	../netcache/mdb.c	/^	nc_mode_t		mode;$/;"	m	struct:mdb_update_rowi_tag	file:
mode_dump	../netcache/util.c	/^mode_dump(char *mbuf, int len, nc_mode_t mode)$/;"	f
modification_time	../include/ncapi.h	/^	nc_time_t 	 		modification_time; 	\/* 객체가 변경된 시간, 0이면 해당 필드 무효, UTC time *\/$/;"	m	struct:nc_object_info_tag
monitor	../include/cfs_driver.h	/^	void 							(*monitor)(void *cb, nc_hit_status_t hs);$/;"	m	struct:nc_volume_context
monitor_file	../test/driver_test.c	/^char			monitor_file[512] = "";$/;"	v
monitor_pf	../test/driver_test.c	/^FILE *			monitor_pf = NULL;$/;"	v
msg_out	../util/nc_checkfs.c	/^msg_out(const char *fmt, ...)$/;"	f
mtime	../include/netcache.h	/^	nc_time_t			mtime;				\/* 원본 최종 변경 시각*\/$/;"	m	struct:tag_fc_header_info_v30
mtime	../include/netcache.h	/^	nc_time_t			mtime;$/;"	m	struct:tag_nc_mdb_inode_info
mtime	../include/netcache.h	/^  	nc_time_t      					mtime;			\/**<last update time *\/$/;"	m	struct:tag_fc_inode_info
mtime	../netcache/mdb.c	/^	nc_time_t		mtime;$/;"	m	struct:mdb_inserti_tag	file:
mtime	../util/nc_convert.c	/^	time_t            mtime;$/;"	m	struct:tag_fc_old_header_info	file:
mustexpire	../include/netcache_types.h	/^				nc_uint64_t			mustexpire:1;		\/* ir #31909; 1: vtime까지만 유효, 이후엔 무조건 폐기 *\/$/;"	m	struct:__anon65::bitefields
mustreval	../include/netcache_types.h	/^			  	nc_uint64_t      	mustreval:1; 		\/* 대상 객체에 접근할 때 마다 반드시 원본에 신선도 검사 필요 *\/$/;"	m	struct:__anon65::bitefields
mustrevalidate	../include/ncapi.h	/^	nc_uint32_t 		mustrevalidate:1;	\/* 객체가 항상 revalidation이 필요하면 1, 아니면 0 *\/$/;"	m	struct:nc_object_info_tag
mutex	../netcache/mdb.c	/^  pthread_mutex_t mutex;             \/* Mutex to protect structure *\/$/;"	m	struct:UnlockNotification	file:
my_compare	../test/list_test.c	/^my_compare(void *a, void *b)$/;"	f
my_data_t	../test/list_test.c	/^} my_data_t;$/;"	t	typeref:struct:N	file:
my_exit	../test/driver_test.c	/^void my_exit()$/;"	f
my_exit	../test/test_kv.c	/^void my_exit()$/;"	f
my_exit	../test/test_path.c	/^void my_exit()$/;"	f
my_exit	../test/volume_test.c	/^void my_exit()$/;"	f
my_exit2	../test/driver_test.c	/^void my_exit2(int a)$/;"	f
my_output	../test/driver_test.c	/^void my_output(FILE *iof, char *fmt, ...)$/;"	f
my_pthread_create	../netcache/util.c	/^int my_pthread_create(pthread_t *restrict thread,$/;"	f
my_thread_info	../netcache/util.c	/^struct my_thread_info {$/;"	s	file:
my_type_t	../test/sorteddll.c	/^} my_type_t;$/;"	t	typeref:struct:__anon17	file:
mycomp	../test/sorteddll.c	/^int mycomp(void *a, void *b)$/;"	f
n	../netcache/heaptrack.c	/^	struct node_ 	*n;$/;"	m	struct:node_	typeref:struct:node_::node_	file:
n_ttl	../include/cfs_driver.h	/^	int 							n_ttl; \/* negative TTL in secs *\/$/;"	m	struct:nc_volume_context
name	../include/bt_timer.h	/^	char					name[96]; \/* 이전 bt_timer의 크기와 맞추기위해서 (solproxy와 바이너리 연동성확보)*\/$/;"	m	struct:timeout
name	../include/cfs_driver.h	/^	char 							name[NC_MAX_STRINGLEN];$/;"	m	struct:cfs_origin_driver
name	../include/glru.h	/^	char 				name[64];$/;"	m	struct:tag_glru
name	../include/util.h	/^	char 	*name;$/;"	m	struct:__anon68
name	../netcache/backtrace.c	/^	char * name;$/;"	m	struct:bfd_set	file:
name	../netcache/cfs_apix.c	/^	char	name[32];$/;"	m	struct:__anon2	file:
name	../netcache/cfs_driver.c	/^	char					name[NC_MAX_STRINGLEN];$/;"	m	struct:__anon3	file:
name	../netcache/threadpool.c	/^	char 				*name;$/;"	m	struct:tag_threadpool	file:
nav_node	../include/netcache.h	/^	link_node_t						nav_node; 			\/* 생성된 inode 추적용 *\/$/;"	m	struct:tag_fc_inode_info
nbits_to_hold_value	../netcache/bitmap.c	248;"	d	file:
nc_MD5Final	../netcache/md5.c	/^void nc_MD5Final (mdContext)$/;"	f
nc_MD5Init	../netcache/md5.c	/^void nc_MD5Init( mdContext )$/;"	f
nc_MD5Update	../netcache/md5.c	/^void nc_MD5Update (mdContext, inBuf, inLen)$/;"	f
nc_MD5_CTX	../include/md5.h	/^} nc_MD5_CTX;$/;"	t	typeref:struct:__anon38
nc_add_dm	../netcache/cfs_apix.c	/^nc_add_dm(nc_int32_t category, nc_int32_t sz)$/;"	f
nc_add_handle	../netcache/util.c	/^nc_add_handle(void *handle, const char *type, const char *f, int l)$/;"	f
nc_add_partition	../netcache/cfs_apix.c	/^nc_add_partition(char *path, int weight)$/;"	f
nc_adjust_ra	../netcache/cfs_apix.c	/^nc_adjust_ra()$/;"	f	file:
nc_aligned_free	../netcache/util.c	/^nc_aligned_free(void *ptr_aligned)$/;"	f
nc_aligned_malloc	../netcache/util.c	/^nc_aligned_malloc(nc_size_t size, int alignment, int category, const char *f, int l)$/;"	f
nc_aligned_ptr_t	../include/netcache_types.h	/^} nc_aligned_ptr_t;$/;"	t	typeref:struct:__anon58
nc_aligned_realloc	../netcache/util.c	/^nc_aligned_realloc(void *p, nc_size_t old_size, nc_size_t size, int alignment, int category, const char *f, int l)$/;"	f
nc_apc_open_callback_t	../include/ncapi.h	/^typedef void (*nc_apc_open_callback_t)(nc_file_handle_t *, nc_stat_t *, int , void *);$/;"	t
nc_apc_read_callback_t	../include/ncapi.h	/^typedef void (*nc_apc_read_callback_t)(nc_file_handle_t *handle, int xfered, int error, void *cbdata);$/;"	t
nc_apcop_t	../include/netcache_types.h	/^} nc_apcop_t;$/;"	t	typeref:enum:__anon59
nc_api_stat	../netcache/cfs_apix.c	/^nc_api_stat_t nc_api_stat[] = $/;"	v
nc_api_stat_t	../netcache/cfs_apix.c	/^} nc_api_stat_t;$/;"	t	typeref:struct:__anon2	file:
nc_asio_block_io_callback_t	../include/asio.h	/^typedef int (*nc_asio_block_io_callback_t)(struct nc_asio_vector *,  int cidx, nc_off_t offset, char *buffer, int len);$/;"	t
nc_asio_callback_t	../include/asio.h	/^typedef void (*nc_asio_callback_t)(nc_asio_vector_t *, int idx, nc_off_t offset, void *tcb, nc_off_t len\/*실제 해당 context에서 저장한 바이트 수*\/, unsigned long err);$/;"	t
nc_asio_context	../include/asio.h	/^struct nc_asio_context {$/;"	s
nc_asio_context_t	../include/netcache_types.h	/^typedef struct nc_asio_context 		nc_asio_context_t;$/;"	t	typeref:struct:nc_asio_context
nc_asio_particle_t	../include/asio.h	/^} nc_asio_particle_t;$/;"	t	typeref:struct:__anon23
nc_asio_prepare_callback_t	../include/asio.h	/^typedef int (*nc_asio_prepare_callback_t)(struct nc_asio_vector *,  int cidx, nc_off_t offset, int prepchunk, int check_inode_lock);$/;"	t
nc_asio_type_t	../include/netcache_types.h	/^typedef enum {IOT_UNKN=0, IOT_CACHE_READ=1, IOT_CACHE_WRITE=2, IOT_OSD_READ=3, IOT_OSD_WRITE=4, IOT_OSD_READ_ENTIRE=5, IOT_NULL=6 } nc_asio_type_t;$/;"	t	typeref:enum:__anon55
nc_asio_vector	../include/asio.h	/^struct nc_asio_vector {$/;"	s
nc_asio_vector_t	../include/netcache_types.h	/^typedef struct nc_asio_vector 		nc_asio_vector_t;$/;"	t	typeref:struct:nc_asio_vector
nc_blkno_t	../include/netcache_types.h	/^typedef nc_uint32_t			nc_blkno_t;$/;"	t
nc_block_size	../netcache/cfs_apix.c	/^nc_block_size()$/;"	f
nc_block_state_t	../include/block.h	/^} __attribute__((packed)) nc_block_state_t;$/;"	t	typeref:enum:__anon24
nc_buid_t	../include/netcache_types.h	/^typedef unsigned int		nc_buid_t;$/;"	t
nc_cache_monitor_t	../include/ncapi.h	/^typedef void 	(*nc_cache_monitor_t)(void *cb, nc_hit_status_t hs);$/;"	t
nc_cache_validator_t	../include/ncapi.h	/^typedef nc_validation_result_t (*nc_cache_validator_t)(nc_object_info_t *object, nc_stat_t *stat, void *cbdata);$/;"	t
nc_cached_clock	../netcache/util.c	/^nc_cached_clock()$/;"	f
nc_cc_command_t	../include/netcache_types.h	/^} nc_cc_command_t;$/;"	t	typeref:enum:__anon66
nc_change_mask	../netcache/cfs_apix.c	/^nc_change_mask(nc_uint32_t mask)$/;"	f
nc_check_memory	../netcache/util.c	/^nc_check_memory(void *memp, size_t sz)$/;"	f
nc_check_path_limit	../netcache/cfs_apix.c	/^nc_check_path_limit(const char *path)$/;"	f	file:
nc_close	../netcache/cfs_apix.c	/^nc_close(nc_file_handle_t *fi, int force)$/;"	f
nc_close_allowable	../netcache/cfs_apix.c	/^nc_close_allowable(nc_file_handle_t *fh)$/;"	f
nc_close_cc	../netcache/cfs_apix.c	/^nc_close_cc	(nc_open_cc_t * 		pcc)$/;"	f
nc_cond	../include/util.h	/^typedef struct nc_cond {$/;"	s
nc_cond_t	../include/util.h	/^} nc_cond_t;$/;"	t	typeref:struct:nc_cond
nc_crc_t	../include/netcache.h	/^typedef nc_uint32_t 	nc_crc_t;$/;"	t
nc_create_mount_context	../include/ncapi.h	555;"	d
nc_create_volume_context	../netcache/cfs_apix.c	/^nc_create_volume_context(	char *drvname,  $/;"	f
nc_del_handle	../netcache/util.c	/^nc_del_handle(void *handle, const char *f, int l)$/;"	f
nc_destroy_mount_context	../include/ncapi.h	556;"	d
nc_destroy_volume_context	../netcache/cfs_apix.c	/^nc_destroy_volume_context(nc_volume_context_t *volume)$/;"	f
nc_devid_t	../include/ncapi.h	/^typedef		char	nc_devid_t[128];$/;"	t
nc_done_callback_t	../include/asio.h	/^typedef void (*nc_done_callback_t)(void *);$/;"	t
nc_dump_param	../netcache/cfs_apix.c	/^nc_dump_param()$/;"	f	file:
nc_dump_report	../netcache/cfs_apix.c	/^nc_dump_report(int sig)$/;"	f	file:
nc_dump_resources	../netcache/util.c	/^nc_dump_resources()$/;"	f
nc_dump_stack	../netcache/cfs_apix.c	/^nc_dump_stack(int sig)$/;"	f
nc_enum_file_property	../netcache/cfs_apix.c	/^nc_enum_file_property(nc_file_handle_t *fi, int (*do_it)(char *key, char *val, void *cb), void *cb)$/;"	f
nc_errno	../netcache/cfs_apix.c	/^nc_errno()$/;"	f
nc_fgetattr	../netcache/cfs_apix.c	/^nc_fgetattr(nc_file_handle_t *fh, nc_stat_t *s)$/;"	f
nc_file_handle_t	../include/netcache_types.h	/^typedef struct tag_nc_file_ref 	nc_file_handle_t;$/;"	t	typeref:struct:tag_nc_file_ref
nc_fill_dir_proc_t	../include/ncapi.h	/^typedef int (*nc_fill_dir_proc_t) (	$/;"	t
nc_find_property	../netcache/cfs_apix.c	/^nc_find_property(nc_file_handle_t *fi, char *tag)$/;"	f
nc_fio_handle_t	../include/netcache_types.h	/^typedef HANDLE				nc_fio_handle_t;$/;"	t
nc_fio_handle_t	../include/netcache_types.h	/^typedef int					nc_fio_handle_t;$/;"	t
nc_flush	../netcache/cfs_apix.c	/^nc_flush(nc_file_handle_t *fi)$/;"	f
nc_freshcheck_entry_t	../netcache/volumeops.c	/^} nc_freshcheck_entry_t;$/;"	t	typeref:struct:tag_freshcheck_entry	file:
nc_get_heap_alloc_counter_x	../netcache/heaptrack.c	/^nc_get_heap_alloc_counter_x()$/;"	f
nc_get_heap_allocated	../netcache/heaptrack.c	/^nc_get_heap_allocated()$/;"	f
nc_get_revision	../netcache/cfs_apix.c	/^nc_get_revision()$/;"	f	file:
nc_getattr	../netcache/cfs_apix.c	/^nc_getattr(nc_volume_context_t *volume, char *path, nc_stat_t *s)$/;"	f
nc_getattr_extended	../netcache/cfs_apix.c	/^nc_getattr_extended(nc_volume_context_t *volume, char *cache_id, char *path, nc_stat_t *s, nc_xtra_options_t *kv, mode_t mode)$/;"	f
nc_gid_t	../include/netcache_types.h	/^typedef nc_int32_t 	nc_gid_t;$/;"	t
nc_global_options	../test/test_kv.c	/^} nc_global_options[] =  {$/;"	v	typeref:struct:tag_option
nc_global_options	../test/test_path.c	/^} nc_global_options[] =  {$/;"	v	typeref:struct:tag_option
nc_hit_status_t	../include/ncapi.h	/^} nc_hit_status_t;$/;"	t	typeref:enum:__anon40
nc_init	../netcache/cfs_apix.c	/^int PUBLIC_IF nc_init()$/;"	f
nc_inode_uid	../netcache/cfs_apix.c	/^nc_inode_uid(nc_file_handle_t *fh)$/;"	f
nc_int16_t	../include/netcache_types.h	/^typedef short				nc_int16_t;$/;"	t
nc_int32_t	../include/netcache_types.h	/^typedef int					nc_int32_t;$/;"	t
nc_int32_t	../netcache/ringbuffer.c	/^typedef int				nc_int32_t;$/;"	t	file:
nc_int64_t	../include/netcache_types.h	/^typedef long long int			nc_int64_t;$/;"	t
nc_int8_t	../include/netcache_types.h	/^typedef char 				nc_int8_t;$/;"	t
nc_iocb	../netcache/disk_io_ops.c	/^typedef struct nc_iocb {$/;"	s	file:
nc_iocb_t	../netcache/disk_io_ops.c	/^} nc_iocb_t;$/;"	t	typeref:struct:nc_iocb	file:
nc_iocb_xtra	../netcache/disk_io_ops.c	/^typedef struct nc_iocb_xtra {$/;"	s	file:
nc_ioctl	../netcache/cfs_apix.c	/^nc_ioctl(nc_volume_context_t *volume, int cmd, void *val, int vallen)$/;"	f
nc_job_report_t	../include/ncapi.h	/^} nc_job_report_t;$/;"	t	typeref:struct:__anon42
nc_kv_list_t	../include/kv.h	/^} nc_kv_list_t;$/;"	t	typeref:struct:__anon35
nc_kv_list_t	../include/netcache.h	/^} nc_kv_list_t;$/;"	t	typeref:struct:tag_nc_kv_list
nc_kv_t	../include/kv.h	/^} nc_kv_t;$/;"	t	typeref:struct:__anon36
nc_kv_t	../include/netcache.h	/^} nc_kv_t;$/;"	t	typeref:struct:tag_nc_kv_node
nc_lasterror	../netcache/util.c	/^nc_lasterror(char *buf, int len) $/;"	f
nc_lb_handle_t	../include/netcache_types.h	/^typedef void * 					nc_lb_handle_t;$/;"	t
nc_load_driver	../netcache/cfs_apix.c	/^nc_load_driver(char *name, char *path)$/;"	f
nc_lock	../include/util.h	/^typedef struct nc_lock {$/;"	s
nc_lock_t	../include/util.h	/^} nc_lock_t;$/;"	t	typeref:struct:nc_lock
nc_lookup_cc	../netcache/cfs_apix.c	/^nc_lookup_cc(nc_open_cc_t * pcc, nc_cc_command_t command)$/;"	f
nc_mdb_handle_t	../include/mdb.h	/^typedef struct tag_nc_mdb_handle nc_mdb_handle_t;$/;"	t	typeref:struct:tag_nc_mdb_handle
nc_mdb_handle_t	../include/netcache.h	/^typedef struct tag_nc_mdb_handle nc_mdb_handle_t;$/;"	t	typeref:struct:tag_nc_mdb_handle
nc_mdb_inode_info_t	../include/netcache.h	/^} nc_mdb_inode_info_t; $/;"	t	typeref:struct:tag_nc_mdb_inode_info
nc_mode_t	../include/netcache_types.h	/^typedef nc_int32_t 	nc_mode_t;$/;"	t
nc_mount_context_t	../include/ncapi.h	223;"	d
nc_obitinfo_t	../include/netcache_types.h	/^} nc_obitinfo_t; \/* cache object bit info *\/$/;"	t	typeref:union:__anon65
nc_object_info_t	../include/ncapi.h	/^} nc_object_info_t;$/;"	t	typeref:struct:nc_object_info_tag
nc_object_info_tag	../include/ncapi.h	/^typedef struct nc_object_info_tag {$/;"	s
nc_off_t	../include/netcache_types.h	/^typedef long long 			nc_off_t;$/;"	t
nc_offline_policy_proc_t	../include/ncapi.h	/^typedef int (*nc_offline_policy_proc_t)(char *url,  int httpcode, void *usercontext);$/;"	t
nc_opaque_t	../include/netcache.h	/^} nc_opaque_t;$/;"	t	typeref:struct:tag_opaque
nc_open	../netcache/cfs_apix.c	/^nc_open(nc_volume_context_t *volume, char *path, int mode)$/;"	f
nc_open_cc	../netcache/cfs_apix.c	/^nc_open_cc(		nc_open_cc_t * 		pcc,$/;"	f
nc_open_cc_quark_t	../include/cfs_driver.h	/^} nc_open_cc_quark_t;$/;"	t	typeref:struct:tag_nc_open_cc_quark
nc_open_cc_t	../include/netcache_types.h	/^typedef struct tag_nc_open_cc 	nc_open_cc_t;$/;"	t	typeref:struct:tag_nc_open_cc
nc_open_extended	../netcache/cfs_apix.c	/^nc_open_extended(nc_volume_context_t *volume, char *cache_id, char *path, int mode, nc_xtra_options_t *kv)$/;"	f
nc_open_extended2	../netcache/cfs_apix.c	/^nc_open_extended2(nc_volume_context_t *volume, char *cache_id, char *path, int mode, nc_stat_t *s, nc_kv_list_t *kv)$/;"	f
nc_open_extended_apc	../netcache/cfs_apix.c	/^nc_open_extended_apc(nc_volume_context_t *volume, char *cache_id, char *path, int mode, nc_stat_t *s, nc_kv_list_t *kv, nc_apc_open_callback_t proc, void *userdata)$/;"	f
nc_option_t	../include/netcache_types.h	/^typedef struct tag_nc_kv_node 	nc_option_t;$/;"	t	typeref:struct:tag_nc_kv_node
nc_origin_info_t	../include/netcache_types.h	/^typedef struct tag_origin_info 		nc_origin_info_t;$/;"	t	typeref:struct:tag_origin_info
nc_origin_io_command_t	../include/ncapi.h	/^} nc_origin_io_command_t;$/;"	t	typeref:struct:__anon39
nc_origin_monitor2_t	../include/ncapi.h	/^typedef void 	(*nc_origin_monitor2_t)(nc_uint32_t txid, nc_xtra_options_t *req_headers, void *cb, char *method, char *origin, char *request, char *reply, double elapsed, double sentb, double receivedb, char *infostring);$/;"	t
nc_origin_monitor_t	../include/ncapi.h	/^typedef void 	(*nc_origin_monitor_t)(void *cb, char *method, char *origin, char *request, char *reply, double elapsed, double sentb, double receivedb);$/;"	t
nc_origin_phase_handler_t	../include/ncapi.h	/^typedef int (*nc_origin_phase_handler_t)(	int phase_id, $/;"	t
nc_origin_session_t	../include/cfs_driver.h	/^typedef void * nc_origin_session_t;$/;"	t
nc_page_ctrl_t	../include/block.h	/^} nc_page_ctrl_t;$/;"	t	typeref:struct:tag_page_ctrl
nc_part_element_t	../include/netcache.h	/^} nc_part_element_t;$/;"	t	typeref:struct:tag_part_element
nc_path_lock_state_t	../include/cfs_driver.h	/^} nc_path_lock_state_t;$/;"	t	typeref:enum:__anon28
nc_path_lock_t	../include/netcache_types.h	/^typedef struct nc_path_lock_tag nc_path_lock_t;$/;"	t	typeref:struct:nc_path_lock_tag
nc_path_lock_tag	../include/cfs_driver.h	/^struct nc_path_lock_tag {$/;"	s
nc_pthread_cond_destroy	../netcache/util.c	/^nc_pthread_cond_destroy(pthread_cond_t *cond, const char *file, int lno)$/;"	f
nc_pthread_cond_init	../netcache/util.c	/^nc_pthread_cond_init(pthread_cond_t * restrict cond,  const pthread_condattr_t  *restrict attr, const char *file, int lno)$/;"	f
nc_pthread_mutex_destroy	../netcache/util.c	/^nc_pthread_mutex_destroy(pthread_mutex_t *mutex, const char *file, int lno)$/;"	f
nc_pthread_mutex_init	../netcache/util.c	/^nc_pthread_mutex_init(pthread_mutex_t * restrict mutex,  const pthread_mutexattr_t  *restrict attr, const char *file, int lno)$/;"	f
nc_purge	../netcache/cfs_apix.c	/^nc_purge(nc_volume_context_t *volume, char *pattern, int iskey, int ishard)$/;"	f
nc_raw_dump_report	../netcache/heaptrack.c	/^nc_raw_dump_report(void  (*dump_proc)(char *))$/;"	f
nc_read	../netcache/cfs_apix.c	/^nc_read(nc_file_handle_t *fi, char *buf, nc_off_t off, nc_size_t len)$/;"	f
nc_read_apc	../netcache/cfs_apix.c	/^nc_read_apc(nc_file_handle_t *fi, char *buf, nc_off_t off, nc_size_t len, nc_apc_read_callback_t callback, void *callbackdata)$/;"	f
nc_readahead_bytes	../netcache/cfs_apix.c	/^nc_readahead_bytes()$/;"	f
nc_ref_count	../netcache/cfs_apix.c	/^nc_ref_count(nc_file_handle_t *fi)$/;"	f
nc_resource_t	../netcache/util.c	/^} nc_resource_t;$/;"	t	typeref:struct:__anon14	file:
nc_result_code	../netcache/cfs_apix.c	/^nc_result_code(nc_file_handle_t * fi)$/;"	f
nc_ringbuffer_t	../include/ringbuffer.h	/^typedef struct tag_nc_ringbuffer nc_ringbuffer_t;$/;"	t	typeref:struct:tag_nc_ringbuffer
nc_ringbuffer_t	../netcache/ringbuffer.c	/^typedef struct tag_nc_ringbuffer nc_ringbuffer_t;$/;"	t	typeref:struct:tag_nc_ringbuffer	file:
nc_rw_destroy	../rwtest/rwtest.c	/^nc_rw_destroy(struct nc_rw_lock *rwl)$/;"	f
nc_rw_get_running	../rwtest/rwtest.c	/^nc_rw_get_running(struct nc_rw_lock *rwl)$/;"	f	file:
nc_rw_init	../rwtest/rwtest.c	/^nc_rw_init(struct nc_rw_lock *rwl, int maxwaiters)$/;"	f
nc_rw_lock	../rwtest/rwtest.c	/^struct nc_rw_lock {$/;"	s	file:
nc_rw_lock_t	../include/nc_rwlock.h	/^typedef struct nc_rw_lock nc_rw_lock_t; $/;"	t	typeref:struct:nc_rw_lock
nc_rw_lock_t	../rwtest/nc_rwlock.h	/^typedef struct nc_rw_lock nc_rw_lock_t; $/;"	t	typeref:struct:nc_rw_lock
nc_rw_rdlock	../rwtest/rwtest.c	/^nc_rw_rdlock(struct nc_rw_lock *rwl)$/;"	f
nc_rw_rdunlock	../rwtest/rwtest.c	/^nc_rw_rdunlock(struct nc_rw_lock *rwl)$/;"	f
nc_rw_wrlock	../rwtest/rwtest.c	/^nc_rw_wrlock(struct nc_rw_lock *rwl)$/;"	f
nc_rw_wrunlock	../rwtest/rwtest.c	/^nc_rw_wrunlock(struct nc_rw_lock *rwl)$/;"	f
nc_schedule_type_t	../include/asio.h	/^typedef enum {ASIO_ASYNC = 0, ASIO_SYNC = 1} nc_schedule_type_t;$/;"	t	typeref:enum:__anon21
nc_set_param	../netcache/cfs_apix.c	/^nc_set_param(int cmd, void *val, int vallen)$/;"	f
nc_setup_log	../netcache/cfs_apix.c	/^nc_setup_log(nc_uint32_t mask, char *path, nc_int32_t szMB, nc_int32_t rotate)$/;"	f
nc_shm_mapf_t	../include/shm_wrapper.h	/^typedef HANDLE 	nc_shm_mapf_t;$/;"	t
nc_shm_mapf_t	../include/shm_wrapper.h	/^typedef int 	nc_shm_mapf_t;$/;"	t
nc_shm_t	../include/shm_wrapper.h	/^} nc_shm_t;$/;"	t	typeref:struct:nc_shm_tag
nc_shm_tag	../include/shm_wrapper.h	/^typedef struct nc_shm_tag {$/;"	s
nc_shutdown	../netcache/cfs_apix.c	/^nc_shutdown()$/;"	f
nc_size_t	../include/netcache_types.h	/^typedef long long 			nc_size_t;$/;"	t
nc_ssize_t	../include/netcache_types.h	/^typedef long long 			nc_ssize_t;$/;"	t
nc_stat	../include/ncapi.h	/^struct nc_stat {$/;"	s
nc_stat_t	../include/ncapi.h	/^typedef struct nc_stat 	nc_stat_t;$/;"	t	typeref:struct:nc_stat
nc_statvfs_t	../include/netcache_types.h	/^} nc_statvfs_t;$/;"	t	typeref:struct:tag_statvfs
nc_strerror	../netcache/util.c	/^nc_strerror(DWORD dw, char *buf, int len) $/;"	f
nc_strerror	../netcache/util.c	/^nc_strerror(int eno, char *buf, int len) $/;"	f
nc_sub_dm	../netcache/cfs_apix.c	/^nc_sub_dm(nc_int32_t category, nc_int32_t sz)$/;"	f
nc_time2string	../netcache/util.c	/^nc_time2string(time_t *t, char *buf,int len)$/;"	f
nc_time_t	../include/netcache_types.h	/^typedef nc_uint32_t			nc_time_t;$/;"	t
nc_timespec	../include/netcache_types.h	/^struct nc_timespec {$/;"	s
nc_uid_t	../include/netcache_types.h	/^typedef nc_int32_t 	nc_uid_t;$/;"	t
nc_uint16_t	../include/netcache_types.h	/^typedef unsigned short 		nc_uint16_t;$/;"	t
nc_uint32_t	../include/netcache_types.h	/^typedef unsigned int		nc_uint32_t;$/;"	t
nc_uint32_t	../netcache/ringbuffer.c	/^typedef unsigned int	nc_uint32_t;$/;"	t	file:
nc_uint64_t	../include/netcache_types.h	/^typedef unsigned long long	nc_uint64_t;$/;"	t
nc_uint64_t	../netcache/ringbuffer.c	/^typedef unsigned long long	nc_uint64_t;$/;"	t	file:
nc_uint8_t	../include/netcache_types.h	/^typedef unsigned char 		nc_uint8_t;$/;"	t
nc_uint8_t	../netcache/ringbuffer.c	/^typedef unsigned char	nc_uint8_t;$/;"	t	file:
nc_ulock_destroy	../netcache/nc_rwlock.c	/^nc_ulock_destroy(nc_ulock_t *ul)$/;"	f
nc_ulock_init	../netcache/nc_rwlock.c	/^nc_ulock_init(nc_ulock_t *ul)$/;"	f
nc_ulock_rdlock	../netcache/nc_rwlock.c	/^nc_ulock_rdlock(nc_ulock_t *ul)$/;"	f
nc_ulock_t	../include/util.h	/^} nc_ulock_t;$/;"	t	typeref:struct:__anon69
nc_ulock_unlock	../netcache/nc_rwlock.c	/^nc_ulock_unlock(nc_ulock_t *ul)$/;"	f
nc_ulock_upgrade	../netcache/nc_rwlock.c	/^nc_ulock_upgrade(nc_ulock_t *ul)$/;"	f
nc_ulock_wrlock	../netcache/nc_rwlock.c	/^nc_ulock_wrlock(nc_ulock_t *ul)$/;"	f
nc_unlink	../netcache/cfs_apix.c	/^nc_unlink(nc_volume_context_t *volume, char *file, nc_xtra_options_t *req, nc_xtra_options_t **res)$/;"	f
nc_update_cached_clock	../netcache/util.c	/^nc_update_cached_clock()$/;"	f
nc_user_callback_t	../include/asio.h	/^typedef nc_asio_type_t (*nc_user_callback_t)(nc_asio_type_t, fc_inode_t *inode, fc_blk_t *blk, int err, void *userdata);$/;"	t
nc_validation_result_t	../include/ncapi.h	/^} nc_validation_result_t;$/;"	t	typeref:enum:__anon41
nc_validation_step_t	../netcache/volumeops.c	/^typedef int (*nc_validation_step_t)(	nc_volume_context_t 	*volume, $/;"	t	file:
nc_version	../netcache/cfs_apix.c	/^PUBLIC_IF nc_version(char *buf, int len)$/;"	f
nc_volume_context	../include/cfs_driver.h	/^struct nc_volume_context {$/;"	s
nc_volume_context_t	../include/netcache_types.h	/^typedef struct nc_volume_context 	nc_volume_context_t;$/;"	t	typeref:struct:nc_volume_context
nc_volume_stat	../include/ncapi.h	/^typedef struct nc_volume_stat {$/;"	s
nc_volume_stat_t	../include/ncapi.h	/^} nc_volume_stat_t ;$/;"	t	typeref:struct:nc_volume_stat
nc_vstring_t	../include/netcache.h	/^} nc_vstring_t;$/;"	t	typeref:struct:tag_vstring
nc_vstring_t	../test/vstr_test.c	/^} nc_vstring_t;$/;"	t	typeref:struct:tag_vstring	file:
nc_write	../netcache/cfs_apix.c	/^nc_write(nc_file_handle_t *fi, char *buf, nc_off_t off, size_t len)$/;"	f
nc_xtra_options_t	../include/netcache_types.h	/^typedef struct tag_nc_kv_list 	nc_xtra_options_t;$/;"	t	typeref:struct:tag_nc_kv_list
nck_check_disk_cached	../util/nc_checkfs.c	/^nck_check_disk_cached(fc_file_t *inode, long blkno)$/;"	f
nck_check_file	../util/nc_checkfs.c	/^nck_check_file(const char *cpath, int repair)$/;"	f	file:
nck_dir_scanner	../util/nc_checkfs.c	/^nck_dir_scanner(void *d)$/;"	f
nck_flush_inode	../util/nc_checkfs.c	/^nck_flush_inode(fc_file_t *inode)$/;"	f
nck_free_inode	../util/nc_checkfs.c	/^nck_free_inode(fc_file_t *inode)	$/;"	f
nck_mark_uncached	../util/nc_checkfs.c	/^nck_mark_uncached(fc_file_t *inode, long blkno)$/;"	f
nck_move_block	../util/nc_checkfs.c	/^nck_move_block(fc_file_t *inode, nc_off_t orgoff, nc_off_t newoff)$/;"	f
nck_recover_v20	../util/nc_checkfs.c	/^nck_recover_v20(HANDLE fd, const char *cpath, char *msg)$/;"	f
nck_recover_v21	../util/nc_checkfs.c	/^nck_recover_v21(HANDLE fd, const char *cpath, char *msg)$/;"	f
nck_remap_blocks	../util/nc_checkfs.c	/^nck_remap_blocks(fc_file_t *inode)$/;"	f
nck_run_threads	../util/nc_checkfs.c	/^nck_run_threads(int thr_cnt)$/;"	f
nck_scandir	../util/nc_checkfs.c	/^nck_scandir(int i, int j)$/;"	f	file:
nck_verify_block_internal	../util/nc_checkfs.c	/^nck_verify_block_internal(fc_file_t *inode, long blkno, char *block_ptr)$/;"	f
nck_verify_blocks	../util/nc_checkfs.c	/^nck_verify_blocks(fc_file_t *inode)$/;"	f
nck_verify_file	../util/nc_checkfs.c	/^nck_verify_file(char *cpath, char *msg, int repair, int *needflush)$/;"	f
need_create_vary_meta	../include/netcache.h	/^	nc_uint32_t 			need_create_vary_meta:1;$/;"	m	struct:apc_open_context
needoverwrite	../include/netcache_types.h	/^				nc_uint64_t 		needoverwrite:1; 	\/* 1 : 해당 객체 정보가 리셋되어 원본에서 수신한 데이타로 overwrite필요 *\/$/;"	m	struct:__anon65::bitefields
needstop	../include/netcache.h	/^	int 				needstop;$/;"	m	struct:tag_part_element
needstop	../netcache/mdb.c	/^	int 				needstop;$/;"	m	struct:tag_nc_mdb_handle	file:
nels	../netcache/hash.c	/^	int					*nels;$/;"	m	struct:u_hash_table	file:
nels	../netcache/heaptrack.c	/^	int				nels;$/;"	m	struct:__anon8	file:
netcache_signature	../netcache/cfs_apix.c	/^time_t 						netcache_signature = 0;$/;"	v
next	../include/bt_tmlist.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next	../include/bt_tmlist.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::list_head
next	../include/netcache_types.h	/^	struct tag_link_node	*next;$/;"	m	struct:tag_link_node	typeref:struct:tag_link_node::tag_link_node
next	../netcache/backtrace.c	/^	struct bfd_set *next;$/;"	m	struct:bfd_set	typeref:struct:bfd_set::bfd_set	file:
next	../netcache/hash.c	/^	u_hash_node_t	*	next;$/;"	m	struct:u_hash_node	file:
next	../netcache/heaptrack.c	/^	struct tag_shash_entry *next;$/;"	m	struct:tag_shash_entry	typeref:struct:tag_shash_entry::tag_shash_entry	file:
next	../test/sorteddll.c	/^	struct tag_link_node	*next;$/;"	m	struct:tag_link_node	typeref:struct:tag_link_node::tag_link_node	file:
nio_done_context_t	../include/netcache.h	/^} nio_done_context_t;$/;"	t	typeref:struct:tag_nio_done_context
nioprogress	../include/block.h	184;"	d
nnodes	../netcache/hash.c	/^	int					nnodes;$/;"	m	struct:u_hash_table	file:
no	../netcache/volumeops.c	/^	int 					no; \/* # of orphanized inodes *\/$/;"	m	struct:orphanize_info	file:
nocache	../include/netcache_types.h	/^				nc_uint64_t 		nocache:1; 			\/* no cache *\/$/;"	m	struct:__anon65::bitefields
node	../include/asio.h	/^	link_node_t			node; 				\/* necessary ? *\/$/;"	m	struct:nc_asio_vector
node	../include/asio.h	/^	link_node_t 	node;$/;"	m	struct:tag_asio_debug
node	../include/block.h	/^	link_node_t	node;$/;"	m	struct:tag_page_ctrl
node	../include/block.h	/^   	lru_node_t			node;$/;"	m	struct:tag_fc_blk
node	../include/cfs_driver.h	/^	glru_node_t 				node;$/;"	m	struct:nc_path_lock_tag
node	../include/cfs_driver.h	/^	link_node_t						node;$/;"	m	struct:nc_volume_context
node	../include/cfs_driver.h	/^	link_node_t		node;$/;"	m	struct:tag_nc_open_cc_quark
node	../include/glru.h	/^	lru_node_t 	node;$/;"	m	struct:tag_glru_node
node	../include/kv.h	/^	link_node_t 	node;$/;"	m	struct:__anon36
node	../include/netcache.h	/^	link_node_t				node;$/;"	m	struct:apc_open_context
node	../include/netcache.h	/^	link_node_t				node;$/;"	m	struct:apc_read_context
node	../include/netcache.h	/^	link_node_t 				node;$/;"	m	struct:tag_nc_kv_list
node	../include/netcache.h	/^	link_node_t 	node;$/;"	m	struct:__anon52
node	../include/netcache.h	/^	link_node_t 	node;$/;"	m	struct:tag_nc_kv_node
node	../include/netcache.h	/^	link_node_t 	node;$/;"	m	struct:tag_part_element
node	../include/netcache.h	/^  	lru_node_t						node;$/;"	m	struct:tag_fc_inode_info
node	../include/netcache_types.h	/^	link_node_t	node;$/;"	m	struct:__anon58
node	../netcache/disk_io_ops.c	/^	link_node_t 	node;$/;"	m	struct:nc_iocb	file:
node	../netcache/heaptrack.c	/^	node_t				node;$/;"	m	struct:__anon7	file:
node	../netcache/heaptrack.c	/^	node_t		node;$/;"	m	struct:leak_info	file:
node	../netcache/mdb.c	/^	link_node_t 	node;$/;"	m	struct:tag_mdb_session	file:
node	../netcache/util.c	/^		link_node_t		node; 		\/* debug only *\/$/;"	m	struct:__anon12	file:
node	../netcache/util.c	/^	link_node_t	node;$/;"	m	struct:__anon15	file:
node	../netcache/volumeops.c	/^	link_node_t		node;$/;"	m	struct:__anon16	file:
node	../netcache/volumeops.c	/^	link_node_t 			node;$/;"	m	struct:tag_freshcheck_entry	file:
node	../test/list_test.c	/^	link_node_t			node;$/;"	m	struct:N	file:
node	../test/sorteddll.c	/^	link_node_t	node;$/;"	m	struct:__anon17	file:
node_	../netcache/heaptrack.c	/^typedef struct node_ {$/;"	s	file:
node_t	../netcache/heaptrack.c	/^} node_t;$/;"	t	typeref:struct:node_	file:
nodes	../netcache/hash.c	/^	u_hash_node_t		**nodes;$/;"	m	struct:u_hash_table	file:
nodisk	../netcache/diskcache.c	/^	int								nodisk; \/* 1 when memcache_mode is 1 *\/$/;"	m	struct:tag_cachedir_state	file:
nostore	../include/netcache_types.h	/^			  	nc_uint64_t      	nostore:1;			\/* nostore *\/$/;"	m	struct:__anon65::bitefields
notrace	../netcache/diskcache.c	/^	int								notrace;$/;"	m	struct:tag_cachedir_state	file:
noxform	../include/netcache_types.h	/^			  	nc_uint64_t      	noxform:1;			\/* noxform *\/$/;"	m	struct:__anon65::bitefields
nr_cpu	../netcache/util.c	/^nr_cpu()$/;"	f
ns	../include/netcache_types.h	/^		} ns;$/;"	m	union:tag_link_node::__anon56	typeref:struct:tag_link_node::__anon56::__anon57
nttl	../include/netcache.h	/^	nc_time_t 					nttl; \/* 0이면 무시*\/$/;"	m	struct:tag_nc_kv_list
nvm_activity_monitor	../netcache/volumeops.c	/^nvm_activity_monitor(void *d)$/;"	f	file:
nvm_calc_signature	../netcache/volumeops.c	/^nvm_calc_signature(nc_volume_context_t *volume, char *path)$/;"	f	file:
nvm_check_freshness_by_always_expire	../netcache/volumeops.c	/^nvm_check_freshness_by_always_expire(nc_volume_context_t *volume, fc_inode_t *inode, nc_stat_t *stat, int *fresh, int *checked, nc_validation_result_t *reason, int fcid)$/;"	f	file:
nvm_check_freshness_by_etag	../netcache/volumeops.c	/^nvm_check_freshness_by_etag(nc_volume_context_t *volume, fc_inode_t *inode, nc_stat_t *stat, int *fresh, int *checked, nc_validation_result_t *reason, int fcid)$/;"	f	file:
nvm_check_freshness_by_iftag	../netcache/volumeops.c	/^nvm_check_freshness_by_iftag(nc_volume_context_t *volume, fc_inode_t *inode, nc_stat_t *stat, int *fresh, int *checked, nc_validation_result_t *reason, int fcid)$/;"	f	file:
nvm_check_freshness_by_mtime	../netcache/volumeops.c	/^nvm_check_freshness_by_mtime(nc_volume_context_t *volume, fc_inode_t *inode, nc_stat_t *stat, int *fresh, int *checked, nc_validation_result_t *reason, int fcid)$/;"	f	file:
nvm_check_freshness_by_policy	../netcache/volumeops.c	/^nvm_check_freshness_by_policy(nc_volume_context_t *volume, fc_inode_t *inode, nc_stat_t *stat, int skipalways, int origindown, nc_validation_result_t defval)$/;"	f
nvm_check_freshness_by_size	../netcache/volumeops.c	/^nvm_check_freshness_by_size(nc_volume_context_t *volume, fc_inode_t *inode, nc_stat_t *stat, int *fresh, int *checked, nc_validation_result_t *reason, int fcid)$/;"	f	file:
nvm_check_freshness_prolog	../netcache/volumeops.c	/^nvm_check_freshness_prolog(nc_volume_context_t *volume, fc_inode_t *inode, nc_stat_t *stat, int *fresh, int *checked, nc_validation_result_t *reason, int fcid)$/;"	f	file:
nvm_check_if_match	../netcache/volumeops.c	/^nvm_check_if_match(nc_volume_context_t *volume, regex_t *reg_pat, char *target)$/;"	f	file:
nvm_check_if_same_object	../netcache/volumeops.c	/^nvm_check_if_same_object(cfs_origin_driver_t *drv, fc_inode_t *inode, nc_stat_t *stat)$/;"	f	file:
nvm_compare_pl_stat	../netcache/volumeops.c	/^nvm_compare_pl_stat(const void *a, const void *b)$/;"	f	file:
nvm_create	../netcache/volumeops.c	/^nvm_create( char 				*drvname,  $/;"	f
nvm_create_nolock	../netcache/volumeops.c	/^nvm_create_nolock(	char 				*drvname,  $/;"	f	file:
nvm_create_pattern	../netcache/volumeops.c	/^nvm_create_pattern(nc_volume_context_t *volume, char *pat_string)$/;"	f
nvm_destroy	../netcache/volumeops.c	/^nvm_destroy(nc_volume_context_t *volume, int bsync)$/;"	f
nvm_destroy_internal	../netcache/volumeops.c	/^nvm_destroy_internal(void * u)$/;"	f	file:
nvm_destroy_path_lock	../netcache/volumeops.c	/^nvm_destroy_path_lock(void *d)$/;"	f	file:
nvm_destroy_pattern	../netcache/volumeops.c	/^nvm_destroy_pattern(nc_volume_context_t *volume, void *reg_pat)$/;"	f
nvm_do_operation	../netcache/volumeops.c	/^nvm_do_operation(nc_volume_context_t *volume, int (*cbfunc)(void *, void *, void*), void *cb)$/;"	f
nvm_do_operation_wrapper	../netcache/volumeops.c	/^nvm_do_operation_wrapper(void *a, void *b, void *ud)$/;"	f	file:
nvm_dti_t	../netcache/volumeops.c	/^} nvm_dti_t;$/;"	t	typeref:struct:__anon16	file:
nvm_dump_PL	../netcache/volumeops.c	/^nvm_dump_PL(char *buf, int l, nc_path_lock_t *p)$/;"	f
nvm_dump_all_pathlocks	../netcache/volumeops.c	/^nvm_dump_all_pathlocks()$/;"	f
nvm_enum_purge_pattern	../netcache/volumeops.c	/^nvm_enum_purge_pattern(purge_info_t *pi)$/;"	f	file:
nvm_fcg_id	../netcache/volumeops.c	/^nvm_fcg_id(void *anc)$/;"	f
nvm_find_volume_context	../netcache/volumeops.c	/^nvm_find_volume_context(void *key, void *value, void *ud)$/;"	f	file:
nvm_for_all_inodes	../netcache/volumeops.c	/^nvm_for_all_inodes(nc_volume_context_t *volume, int (*callback)(fc_inode_t *, void *), void *cbdata)$/;"	f
nvm_free_all	../netcache/volumeops.c	/^nvm_free_all()$/;"	f
nvm_free_path_lock	../netcache/volumeops.c	/^nvm_free_path_lock(void *key, void *value, void *userdata)$/;"	f
nvm_free_volume_ht	../netcache/volumeops.c	/^nvm_free_volume_ht(void *d)$/;"	f	file:
nvm_get_fcg_first	../netcache/volumeops.c	/^nvm_get_fcg_first(nc_volume_context_t *volume)$/;"	f
nvm_get_fcg_next	../netcache/volumeops.c	/^nvm_get_fcg_next(nc_volume_context_t *volume, void *anc)$/;"	f
nvm_hard_purge_target	../netcache/volumeops.c	/^nvm_hard_purge_target(void *key, void *value, void *ud)$/;"	f	file:
nvm_hash_equal	../netcache/volumeops.c	/^nvm_hash_equal(void *v1, void *v2, void *ud)$/;"	f
nvm_hash_inode	../netcache/volumeops.c	/^nvm_hash_inode(void *vstr, void *ud)$/;"	f	file:
nvm_hash_uuid	../netcache/volumeops.c	/^nvm_hash_uuid(void *vstr, void *ud)$/;"	f	file:
nvm_hash_uuid_equal	../netcache/volumeops.c	/^nvm_hash_uuid_equal(void *v1, void *v2, void *ud)$/;"	f	file:
nvm_init	../netcache/volumeops.c	/^nvm_init()$/;"	f
nvm_inode_callback_wrapper	../netcache/volumeops.c	/^nvm_inode_callback_wrapper(void *key, void *value, void *ud)$/;"	f	file:
nvm_ioctl	../netcache/volumeops.c	/^nvm_ioctl(nc_volume_context_t *mc, int cmd, void *val, int vallen)$/;"	f
nvm_ioctl_notifier	../netcache/volumeops.c	/^nvm_ioctl_notifier(struct cfs_origin_driver *drv, int cmd, void *val, int len, struct nc_volume_context *mc)$/;"	f	file:
nvm_is_online	../netcache/volumeops.c	/^nvm_is_online(nc_volume_context_t * volume, int flag)$/;"	f
nvm_is_online2	../netcache/volumeops.c	/^nvm_is_online2(nc_volume_context_t * volume)$/;"	f
nvm_is_usable_state	../netcache/volumeops.c	/^nvm_is_usable_state(fc_inode_t *inode, nc_validation_result_t flag)$/;"	f
nvm_is_valid	../netcache/volumeops.c	/^nvm_is_valid(nc_volume_context_t *volume)$/;"	f
nvm_isolate_inode_nolock	../netcache/volumeops.c	/^nvm_isolate_inode_nolock(nc_volume_context_t *volume, fc_inode_t *inode)$/;"	f
nvm_isolate_inode_with_key	../netcache/volumeops.c	/^nvm_isolate_inode_with_key(nc_volume_context_t *volume, char *key)$/;"	f
nvm_key_free	../netcache/volumeops.c	/^nvm_key_free(void *d)$/;"	f	file:
nvm_lazy_property_updater	../netcache/volumeops.c	/^nvm_lazy_property_updater(fc_inode_t *inode, nc_stat_t *rstat)$/;"	f	file:
nvm_lock	../netcache/volumeops.c	/^nvm_lock(nc_volume_context_t *mc, int exclusive, char *f, int l)$/;"	f
nvm_lookup_inode	../netcache/volumeops.c	/^nvm_lookup_inode(nc_volume_context_t *volume, int lookup_type, char *key, int bremove, int makeref, int markbusy, int *busy, char *file, int line)$/;"	f
nvm_lookup_pl_stat	../netcache/volumeops.c	/^nvm_lookup_pl_stat(char *f, int l)$/;"	f	file:
nvm_lookup_volume	../netcache/volumeops.c	/^nvm_lookup_volume(char *signature)$/;"	f
nvm_make_inode_stale	../netcache/volumeops.c	/^nvm_make_inode_stale(nc_volume_context_t *volume, fc_inode_t *inode)$/;"	f
nvm_make_online	../netcache/volumeops.c	/^nvm_make_online(nc_volume_context_t *volume, char *drvname, nc_origin_info_t *oi, int oicnt)$/;"	f	file:
nvm_need_backup	../netcache/volumeops.c	/^nvm_need_backup(nc_volume_context_t *volume)$/;"	f
nvm_need_freshness_check_nolock	../netcache/volumeops.c	/^nvm_need_freshness_check_nolock(nc_volume_context_t *volume, fc_inode_t *inode)$/;"	f
nvm_need_to_apply	../netcache/volumeops.c	/^nvm_need_to_apply(nc_volume_context_t *volume, const nc_uint16_t policy)$/;"	f	file:
nvm_operation_ctx	../netcache/volumeops.c	/^typedef struct nvm_operation_ctx {$/;"	s	file:
nvm_operation_ctx_t	../netcache/volumeops.c	/^} nvm_operation_ctx_t;$/;"	t	typeref:struct:nvm_operation_ctx	file:
nvm_origin_path_change_proc	../netcache/volumeops.c	/^nvm_origin_path_change_proc(fc_inode_t *inode, char *new_path)$/;"	f	file:
nvm_orphanize_PL	../netcache/volumeops.c	/^nvm_orphanize_PL(nc_volume_context_t *volume)$/;"	f
nvm_orphanize_PL_callback	../netcache/volumeops.c	/^nvm_orphanize_PL_callback(void *glru_node, void *uc)$/;"	f	file:
nvm_orphanize_inodes	../netcache/volumeops.c	/^nvm_orphanize_inodes(nc_volume_context_t *volume)$/;"	f	file:
nvm_orphanize_inodes_cb	../netcache/volumeops.c	/^nvm_orphanize_inodes_cb(void *key, void *value, void *ud)$/;"	f	file:
nvm_parse_freshness_policy	../netcache/volumeops.c	/^nvm_parse_freshness_policy(nc_volume_context_t *volume, char *policy)$/;"	f	file:
nvm_path_busy_nolock	../netcache/volumeops.c	/^nvm_path_busy_nolock(nc_path_lock_t *pl)$/;"	f
nvm_path_get_state	../netcache/volumeops.c	/^nvm_path_get_state(nc_path_lock_t *pl)$/;"	f
nvm_path_inprogress_nolock	../netcache/volumeops.c	/^nvm_path_inprogress_nolock(nc_path_lock_t *pl, int set, char *f, int l)$/;"	f
nvm_path_is_private_nolock	../netcache/volumeops.c	/^nvm_path_is_private_nolock(nc_path_lock_t *pl)$/;"	f
nvm_path_lock	../netcache/volumeops.c	/^nvm_path_lock(nc_volume_context_t *volume, nc_path_lock_t *pl, char *f, int l)$/;"	f
nvm_path_lock_cond_timedwait	../netcache/volumeops.c	/^nvm_path_lock_cond_timedwait( pthread_cond_t *hsignal, nc_path_lock_t *pl, struct timespec *ts)$/;"	f
nvm_path_lock_dump	../netcache/volumeops.c	/^nvm_path_lock_dump(char *buf, int len, nc_path_lock_t *pl)$/;"	f
nvm_path_lock_is	../netcache/volumeops.c	/^nvm_path_lock_is(nc_path_lock_t *pl, nc_path_lock_state_t s, char *f, int l)$/;"	f
nvm_path_lock_is_for	../netcache/volumeops.c	/^nvm_path_lock_is_for(nc_path_lock_t *pl, char *key)$/;"	f
nvm_path_lock_is_nolock	../netcache/volumeops.c	/^nvm_path_lock_is_nolock(nc_path_lock_t *pl, nc_path_lock_state_t s, char *f, int l)$/;"	f
nvm_path_lock_owned	../netcache/volumeops.c	/^nvm_path_lock_owned(nc_volume_context_t *volume, nc_path_lock_t *plck)$/;"	f
nvm_path_lock_owned_n_healthy	../netcache/volumeops.c	/^nvm_path_lock_owned_n_healthy(nc_volume_context_t *volume, nc_path_lock_t *plck, char *path)$/;"	f
nvm_path_lock_ref	../netcache/volumeops.c	/^nvm_path_lock_ref(nc_volume_context_t *volume, char *path, char *file, int line)$/;"	f
nvm_path_lock_ref_count	../netcache/volumeops.c	/^nvm_path_lock_ref_count(nc_path_lock_t *pl)$/;"	f
nvm_path_lock_ref_reuse	../netcache/volumeops.c	/^nvm_path_lock_ref_reuse(nc_volume_context_t *volume, nc_path_lock_t *pl, char *f, int l)$/;"	f
nvm_path_lock_unref	../netcache/volumeops.c	/^nvm_path_lock_unref(nc_volume_context_t *volume, nc_path_lock_t *plck, char *f, int l)$/;"	f
nvm_path_lock_unref_reuse	../netcache/volumeops.c	/^nvm_path_lock_unref_reuse(nc_volume_context_t *volume, nc_path_lock_t *pl, char *f, int l)$/;"	f
nvm_path_put_wait	../netcache/volumeops.c	/^nvm_path_put_wait(nc_path_lock_t *pl, apc_open_context_t  *oc, char *f, int l)$/;"	f
nvm_path_set_private_nolock	../netcache/volumeops.c	/^nvm_path_set_private_nolock(nc_path_lock_t *pl, int priv)$/;"	f
nvm_path_set_state	../netcache/volumeops.c	/^nvm_path_set_state(nc_path_lock_t *pl, nc_path_lock_state_t state)$/;"	f
nvm_path_unlock	../netcache/volumeops.c	/^nvm_path_unlock(nc_volume_context_t *volume, nc_path_lock_t *plck, char *f, int l)$/;"	f
nvm_pc_allocate	../netcache/volumeops.c	/^static void * nvm_pc_allocate(glru_node_t **gnodep)$/;"	f	file:
nvm_pc_dump	../netcache/volumeops.c	/^static int nvm_pc_dump(char *b, int l, void *d)$/;"	f	file:
nvm_pc_enroll	../netcache/volumeops.c	/^static int nvm_pc_enroll(void *map, glru_node_t *gnode)$/;"	f	file:
nvm_pc_fill_key	../netcache/volumeops.c	/^static void nvm_pc_fill_key(void *d, const char * key)$/;"	f	file:
nvm_pc_free	../netcache/volumeops.c	/^static void *nvm_pc_free(glru_node_t *gnode, void *data)$/;"	f	file:
nvm_pc_isidle	../netcache/volumeops.c	/^static int nvm_pc_isidle(void *d)$/;"	f	file:
nvm_pc_lookup	../netcache/volumeops.c	/^static void *nvm_pc_lookup(void *map, const char *key)$/;"	f	file:
nvm_pc_reset	../netcache/volumeops.c	/^static void nvm_pc_reset(void *d)$/;"	f	file:
nvm_pc_unroll	../netcache/volumeops.c	/^static int nvm_pc_unroll(void *map, glru_node_t *gnode)$/;"	f	file:
nvm_post_wakeup	../netcache/volumeops.c	/^nvm_post_wakeup(nc_volume_context_t *volume, fc_inode_t *inode, nc_path_lock_t *pl, nc_stat_t *stat, int error)$/;"	f
nvm_purge	../netcache/volumeops.c	/^nvm_purge(nc_volume_context_t *volume, char *pattern, int ishard, int iskey)$/;"	f
nvm_purge_inode	../netcache/volumeops.c	/^nvm_purge_inode(nc_volume_context_t *volume, fc_inode_t *inode, int resetbusy, mdb_tx_info_t *txno)$/;"	f
nvm_purge_volume	../netcache/volumeops.c	/^nvm_purge_volume(nc_volume_context_t *volume)$/;"	f
nvm_register_cache_object_nolock	../netcache/volumeops.c	/^nvm_register_cache_object_nolock(nc_volume_context_t *volume, fc_inode_t *f)$/;"	f
nvm_report_hit_info	../netcache/volumeops.c	/^nvm_report_hit_info(nc_volume_context_t *volume, nc_xtra_options_t *opt, nc_hit_status_t hi)$/;"	f
nvm_report_pl_stat	../netcache/volumeops.c	/^nvm_report_pl_stat()$/;"	f
nvm_soft_purge_target	../netcache/volumeops.c	/^nvm_soft_purge_target(void *key, void *value, void *ud)$/;"	f	file:
nvm_softpurge_inode_callback	../netcache/volumeops.c	/^nvm_softpurge_inode_callback(void *key, void *value, void *ud)$/;"	f	file:
nvm_sort_by_holdtime	../netcache/volumeops.c	/^nvm_sort_by_holdtime(const void *a, const void *b)$/;"	f	file:
nvm_space_avail	../netcache/volumeops.c	/^nvm_space_avail(nc_volume_context_t *volume, char *path)$/;"	f
nvm_unlock	../netcache/volumeops.c	/^nvm_unlock(nc_volume_context_t *mc, char *f, int l)$/;"	f
nvm_unregister_cache_object_nolock	../netcache/volumeops.c	/^nvm_unregister_cache_object_nolock(nc_volume_context_t *volume, fc_inode_t *inode)$/;"	f
nvm_update_pl_stat	../netcache/volumeops.c	/^nvm_update_pl_stat(pls_t *found, double msec)$/;"	f	file:
nvm_volume_valid	../netcache/volumeops.c	/^nvm_volume_valid(nc_volume_context_t *v)$/;"	f
o_driver_class	../test/test_kv.c	/^char 			o_driver_class[128] = "WebDAV";$/;"	v
o_driver_class	../test/test_path.c	/^char 			o_driver_class[128] = "WebDAV";$/;"	v
o_driver_path	../test/test_kv.c	/^char 			*o_driver_path = "\/root\/libnetcache\/2.5.0\/lib\/libwebdav_driver.so";$/;"	v
o_driver_path	../test/test_path.c	/^char 			*o_driver_path = "\/root\/libnetcache\/2.5.0\/lib\/libwebdav_driver.so";$/;"	v
o_log_file	../test/test_kv.c	/^char			o_log_file[128] = ".\/tp.log";$/;"	v
o_log_file	../test/test_path.c	/^char			o_log_file[128] = ".\/tp.log";$/;"	v
o_logmask	../test/test_kv.c	/^nc_uint32_t		o_logmask = NC_WARN|NC_ERROR|NC_INFO;$/;"	v
o_logmask	../test/test_path.c	/^nc_uint32_t		o_logmask = NC_WARN|NC_ERROR|NC_INFO;$/;"	v
o_origin_info_array	../test/test_kv.c	/^nc_origin_info_t 	o_origin_info_array[1] = {$/;"	v
o_origin_info_array	../test/test_path.c	/^nc_origin_info_t 	o_origin_info_array[1] = {$/;"	v
ob_chunked	../include/netcache_types.h	323;"	d
ob_complete	../include/netcache_types.h	322;"	d
ob_complete	../include/netcache_types.h	325;"	d
ob_cookie	../include/netcache_types.h	321;"	d
ob_created	../include/netcache_types.h	343;"	d
ob_doc	../include/netcache_types.h	340;"	d
ob_frio_inprogress	../include/netcache_types.h	334;"	d
ob_immutable	../include/netcache_types.h	314;"	d
ob_isolated	../include/netcache_types.h	339;"	d
ob_loaded	../include/netcache_types.h	342;"	d
ob_memres	../include/netcache_types.h	344;"	d
ob_mustexpire	../include/netcache_types.h	352;"	d
ob_mustreval	../include/netcache_types.h	312;"	d
ob_needoverwrite	../include/netcache_types.h	333;"	d
ob_nocache	../include/netcache_types.h	310;"	d
ob_nostore	../include/netcache_types.h	315;"	d
ob_noxform	../include/netcache_types.h	316;"	d
ob_obit	../include/netcache_types.h	306;"	d
ob_occ	../include/netcache_types.h	348;"	d
ob_odoc	../include/netcache_types.h	341;"	d
ob_ondisk	../include/netcache_types.h	349;"	d
ob_onlyifcached	../include/netcache_types.h	311;"	d
ob_onmdb	../include/netcache_types.h	338;"	d
ob_preservecase	../include/netcache_types.h	330;"	d
ob_priv	../include/netcache_types.h	309;"	d
ob_pseudoprop	../include/netcache_types.h	350;"	d
ob_public	../include/netcache_types.h	308;"	d
ob_pxyreval	../include/netcache_types.h	313;"	d
ob_rangeable	../include/netcache_types.h	320;"	d
ob_refreshstat	../include/netcache_types.h	345;"	d
ob_setbyexpires	../include/netcache_types.h	353;"	d
ob_sizedecled	../include/netcache_types.h	327;"	d
ob_sizeknown	../include/netcache_types.h	326;"	d
ob_staled	../include/netcache_types.h	351;"	d
ob_swappedin	../include/netcache_types.h	354;"	d
ob_template	../include/netcache_types.h	328;"	d
ob_trace	../include/netcache_types.h	346;"	d
ob_upgradable	../include/netcache_types.h	332;"	d
ob_upgraded	../include/netcache_types.h	331;"	d
ob_validuuid	../include/netcache_types.h	336;"	d
ob_vary	../include/netcache_types.h	324;"	d
ob_victim	../include/netcache_types.h	337;"	d
ob_xfv	../include/netcache_types.h	347;"	d
obi	../include/ncapi.h	/^	nc_obitinfo_t				obi;$/;"	m	struct:nc_stat
obi	../include/netcache.h	/^	nc_obitinfo_t					obi;			\/* 각각의 속성 bitwise정보 *\/$/;"	m	struct:tag_fc_inode_info
obi	../include/netcache.h	/^	nc_obitinfo_t		obi;$/;"	m	struct:purge_info
obi	../include/netcache.h	/^	nc_obitinfo_t		obi;$/;"	m	struct:tag_fc_header_info_v30
obi	../include/netcache.h	/^	nc_obitinfo_t		obi;$/;"	m	struct:tag_nc_mdb_inode_info
obi	../netcache/mdb.c	/^	nc_uint64_t		obi;$/;"	m	struct:mdb_update_rowi_tag	file:
obi_dump	../netcache/util.c	/^obi_dump(char *buf, int len, nc_obitinfo_t *pobi)$/;"	f
obit	../netcache/mdb.c	/^	nc_uint64_t		obit;$/;"	m	struct:mdb_inserti_tag	file:
object_count	../include/ncapi.h	/^	nc_uint32_t		object_count; \/* # of caching objects for this volume *\/$/;"	m	struct:nc_volume_stat
object_tbl	../include/cfs_driver.h	/^	u_hash_table_t					*object_tbl;   \/* object table(P.KEY= cache-id) *\/$/;"	m	struct:nc_volume_context
obsolete__	../include/netcache_types.h	/^				nc_uint8_t 			obsolete__;$/;"	m	struct:__anon65::bitefields
ocmode	../test/driver_test.c	/^int 			ocmode = 0;$/;"	v
ocmode	../test/volume_test.c	/^int 			ocmode = 0;$/;"	v
off	../include/cfs_driver.h	/^	int			off;	\/* buffer size *\/$/;"	m	struct:cfs_iov
off	../netcache/diskcache.c	/^	int		off;$/;"	m	struct:dump_wait_info	file:
offcache	../include/netcache.h	/^			nc_uint32_t         	offcache:1;$/;"	m	struct:apc_open_context::__anon49::__anon50
offset	../include/asio.h	/^	nc_off_t 				offset;$/;"	m	struct:nc_asio_context
offset	../include/netcache.h	/^	nc_off_t			offset;$/;"	m	struct:tag_dio_done_context
offset	../include/netcache.h	/^	nc_off_t			offset;$/;"	m	struct:tag_nio_done_context
offset	../include/util.h	/^	off_t 	offset; 	\/* offset to read\/write at the next time *\/$/;"	m	struct:tag_blk_stream
offsetof	../include/bt_tmlist.h	53;"	d
one	../netcache/crc32.c	205;"	d	file:
online	../include/cfs_driver.h	/^	int								online;$/;"	m	struct:cfs_origin_driver
online	../include/cfs_driver.h	/^	nc_uint32_t 					online:1;$/;"	m	struct:nc_volume_context
onlyifcached	../include/netcache_types.h	/^				nc_uint64_t 		onlyifcached:1; 			\/* no cache *\/$/;"	m	struct:__anon65::bitefields
oob_callback	../include/netcache.h	/^	int 						(*oob_callback)(nc_xtra_options_t *kv, void *);$/;"	m	struct:tag_nc_kv_list
oob_callback_data	../include/netcache.h	/^	void 						*oob_callback_data;$/;"	m	struct:tag_nc_kv_list
oob_ring	../include/netcache.h	/^	struct tag_nc_ringbuffer 	*oob_ring;$/;"	m	struct:tag_nc_kv_list	typeref:struct:tag_nc_kv_list::tag_nc_ringbuffer
op	../netcache/mdb.c	/^	mdb_opcode_t 	op;$/;"	m	struct:mdb_inserti_tag	file:
op	../netcache/mdb.c	/^	mdb_opcode_t 	op;$/;"	m	struct:mdb_remove_rowi_tag	file:
op	../netcache/mdb.c	/^	mdb_opcode_t 	op;$/;"	m	struct:mdb_removei_tag	file:
op	../netcache/mdb.c	/^	mdb_opcode_t 	op;$/;"	m	struct:mdb_update_rowi_tag	file:
op_bit_s	../include/netcache_types.h	/^		nc_uint64_t		op_bit_s;$/;"	m	union:__anon65
op_bits	../include/netcache_types.h	/^		} op_bits;$/;"	m	union:__anon65	typeref:struct:__anon65::bitefields
opaque	../include/netcache.h	/^	nc_opaque_t 			opaque;$/;"	m	struct:apc_open_context
opaque	../include/netcache.h	/^	void 						*opaque;$/;"	m	struct:tag_nc_kv_list
opaque_command	../include/netcache.h	/^	char 						*opaque_command;$/;"	m	struct:tag_nc_kv_list
opaque_data_len	../include/netcache.h	/^	nc_size_t 					opaque_data_len;$/;"	m	struct:tag_nc_kv_list
open	../include/cfs_driver.h	/^	struct dev_file_handle *		(*open)(struct cfs_origin_driver *drv, char *path, void *hint, int hint_len, int mode, nc_xtra_options_t *);$/;"	m	struct:cfs_origin_driver	typeref:struct:cfs_origin_driver::open
open_cc	../include/netcache.h	/^	nc_open_cc_t			*open_cc; \/* 일반적인 경우 NULL *\/$/;"	m	struct:apc_open_context
open_monitor_file	../test/driver_test.c	/^open_monitor_file()$/;"	f
open_result	../include/netcache.h	/^	int         			open_result;$/;"	m	struct:apc_open_context
operations	../include/ncapi.h	/^	nc_uint32_t		operations;  \/* # of operations in 1 mins *\/$/;"	m	struct:nc_volume_stat
opq_copy	../netcache/util.c	/^opq_copy(nc_opaque_t *dest, nc_opaque_t *src, int reset)$/;"	f
opq_reset	../netcache/util.c	/^opq_reset(nc_opaque_t *o)$/;"	f
opq_set	../netcache/util.c	/^opq_set(nc_opaque_t *dest, void *p)$/;"	f
opq_valid	../netcache/util.c	/^opq_valid(nc_opaque_t *o)$/;"	f
origin	../include/netcache.h	/^	nc_origin_session_t				origin;$/;"	m	struct:tag_fc_inode_info
origin	../include/netcache.h	/^	nc_origin_session_t		origin; \/* origin 요청이 필요할 때 할당됨 *\/$/;"	m	struct:apc_open_context
origin	../include/netcache.h	/^	nc_origin_session_t		origin;$/;"	m	struct:apc_read_context
origin_path	../include/netcache.h	/^	char 					*origin_path;$/;"	m	struct:apc_open_context
origin_result	../include/ncapi.h	/^	nc_uint32_t 	 	origin_result; 		\/* 원본에서 객체를 가져올 때 받은 응답 코드 *\/$/;"	m	struct:nc_object_info_tag
origincode	../include/netcache.h	/^	nc_int32_t 						origincode; 	\/**<원본에서 제공한 응답 코드 *\/$/;"	m	struct:tag_fc_inode_info
origincode	../include/netcache.h	/^	nc_uint16_t 		origincode; 		\/*원본에서 제공한 응답 코드 *\/$/;"	m	struct:tag_fc_header_info_v30
origincode	../include/netcache.h	/^	nc_uint16_t 		origincode; 	\/*원본에서 제공한 응답 코드 *\/$/;"	m	struct:tag_nc_mdb_inode_info
origincode	../netcache/fhops.c	/^	int 				origincode;$/;"	m	struct:fio_open_sync_info	file:
origincode	../netcache/mdb.c	/^	nc_int16_t		origincode;$/;"	m	struct:mdb_inserti_tag	file:
orphan	../include/netcache_types.h	/^				nc_uint64_t 		orphan:1;$/;"	m	struct:__anon65::bitefields
orphanize_info	../netcache/volumeops.c	/^struct orphanize_info {$/;"	s	file:
osd	../include/cfs_driver.h	/^	struct cfs_origin_driver		*osd;$/;"	m	struct:nc_volume_context	typeref:struct:nc_volume_context::cfs_origin_driver
output_buffer	../netcache/backtrace.c	/^struct output_buffer {$/;"	s	file:
output_init	../netcache/backtrace.c	/^output_init(struct output_buffer *ob, char * buf, size_t sz)$/;"	f	file:
output_print	../netcache/backtrace.c	/^output_print(struct output_buffer *ob, const char * format, ...)$/;"	f	file:
output_to_eventlog	../netcache/backtrace.c	/^output_to_eventlog(char *message)$/;"	f	file:
overlapped	../include/netcache.h	/^	apc_overlapped_t		*overlapped; $/;"	m	struct:apc_open_context
owner	../netcache/mdb.c	/^	pid_t 				owner;$/;"	m	struct:mdb_rwlock	file:
p	../netcache/heaptrack.c	/^	struct node_ 	*p;$/;"	m	struct:node_	typeref:struct:node_::node_	file:
p_ttl	../include/cfs_driver.h	/^	int 							p_ttl; \/* positive TTL in secs *\/$/;"	m	struct:nc_volume_context
packed	../netcache/mdb.c	/^	char			*packed;$/;"	m	struct:mdb_inserti_tag	file:
packed	../netcache/mdb.c	/^	int 		packed;$/;"	m	struct:property_pack_info	file:
packed_size	../netcache/mdb.c	/^	size_t			packed_size;$/;"	m	struct:mdb_inserti_tag	file:
page_count	../netcache/bc_mgr.c	/^	int 	page_count;$/;"	m	struct:tag_bcm_info	file:
pages	../include/block.h	/^	nc_page_ctrl_t	*pages[0];$/;"	m	struct:tag_fc_blk
part	../include/netcache.h	/^	nc_part_element_t	*part;$/;"	m	struct:tag_nc_mdb_inode_info
part	../include/netcache.h	/^	nc_part_element_t *				part;				\/**<디스크 캐싱모드일 때, 대상 디스크 파티션, NULL when in memory only or write mode *\/$/;"	m	struct:tag_fc_inode_info
part	../netcache/disk_io_ops.c	/^	nc_part_element_t	*part;$/;"	m	struct:nc_iocb_xtra	file:
part	../netcache/diskcache.c	/^	nc_part_element_t 	*part;$/;"	m	struct:__anon5	file:
part	../netcache/mdb.c	/^	nc_part_element_t 	*part;$/;"	m	struct:tag_nc_mdb_handle	file:
part	../netcache/part_mgr.c	/^	nc_part_element_t 		**part;$/;"	m	struct:tag_query_inode	file:
part_query_inode_quark_t	../netcache/part_mgr.c	/^}  part_query_inode_quark_t;$/;"	t	typeref:struct:tag_query_inode_inode_quark	file:
part_query_inode_t	../netcache/part_mgr.c	/^} part_query_inode_t;$/;"	t	typeref:struct:tag_query_inode	file:
part_table_info_t	../netcache/part_mgr.c	/^} part_table_info_t;$/;"	t	typeref:struct:tag_part_table_info	file:
pass	../include/ncapi.h	/^	char			pass[NC_MAX_STRINGLEN];$/;"	m	struct:tag_origin_info
path	../include/cfs_driver.h	/^	char 						*path;$/;"	m	struct:dev_file_handle
path	../include/cfs_driver.h	/^	char 						*path;$/;"	m	struct:nc_path_lock_tag
path	../include/ncapi.h	/^	nc_uint8_t 		**path;  	\/* string arrary pointer, max index = error-1 *\/$/;"	m	struct:__anon42
path	../include/netcache.h	/^	char			*path; \/* partition path *\/$/;"	m	struct:tag_part_element
path	../include/netcache.h	/^	char 				*path;$/;"	m	struct:purge_info
path	../include/shm_wrapper.h	/^	char 				*path;$/;"	m	struct:nc_shm_tag
path	../netcache/fhops.c	/^	char 				*path;$/;"	m	struct:fio_open_sync_info	file:
path	../netcache/mdb.c	/^	char			*path;$/;"	m	struct:mdb_inserti_tag	file:
path	../netcache/part_mgr.c	/^	char 					*path;$/;"	m	struct:tag_query_inode	file:
path_equal	../netcache/util.c	/^u_boolean_t PUBLIC_IF path_equal(void *a, void *b)$/;"	f
path_hash	../netcache/util.c	/^path_hash(void *data)$/;"	f
pathlock	../include/netcache.h	/^	nc_path_lock_t			*pathlock;$/;"	m	struct:apc_open_context
pathlock	../netcache/fhops.c	/^	nc_path_lock_t		*pathlock;$/;"	m	struct:fio_open_sync_info	file:
pattern	../include/netcache.h	/^	char 				*pattern; 		\/* 패턴 문자열 *\/$/;"	m	struct:__anon54
pattern	../include/netcache.h	/^	char 				*pattern;$/;"	m	struct:__anon53
pattern_len	../include/netcache.h	/^	int 				pattern_len;$/;"	m	struct:__anon53
pbitmap	../include/netcache.h	/^  	unsigned long 					*pbitmap; 		\/* cached block information, size of (unsigned long) depends on platform arch *\/$/;"	m	struct:tag_fc_inode_info
pending	../include/bt_timer.h	/^	struct timeout_list		*pending;$/;"	m	struct:timeout	typeref:struct:timeout::timeout_list
pending	../netcache/bt_timer.c	/^	tw_scalar_t			pending[WHEEL_NUM];$/;"	m	struct:timerwheels	file:
pending_ioq	../include/netcache.h	/^	link_list_t						pending_ioq; \/* 대상 객체에 현재 진행된는 IO(ASIO) 들의 list*\/$/;"	m	struct:tag_fc_inode_info
per_thread_running	../include/asio.h	/^	int 				*per_thread_running;$/;"	m	struct:nc_asio_vector
perf_val_t	../include/netcache_types.h	/^typedef struct timespec	perf_val_t;$/;"	t	typeref:struct:timespec
perf_val_t	../include/rdtsc.h	/^typedef unsigned long perf_val_t;$/;"	t
physical_cursor	../util/nc_convert.c	/^	nc_int32_t        physical_cursor;    \/* the last allocated physical blk # *\/$/;"	m	struct:tag_fc_old_header_info	file:
pickedup	../netcache/part_mgr.c	/^	nc_uint8_t 				pickedup; \/* 1 if result picked up *\/$/;"	m	struct:tag_query_inode	file:
pl_line	../include/netcache.h	/^	int 				pl_line;$/;"	m	struct:tag_fc_inode_info
pl_owner	../include/netcache.h	/^	long				pl_owner;$/;"	m	struct:tag_fc_inode_info
pl_path	../include/netcache.h	/^	char 				pl_path[128];$/;"	m	struct:tag_fc_inode_info
pl_sig	../include/netcache.h	/^	int					pl_sig;$/;"	m	struct:tag_fc_inode_info
plmode	../test/driver_test.c	/^int 			plmode = 0;$/;"	v
pls	../include/cfs_driver.h	/^	void						*pls;$/;"	m	struct:nc_path_lock_tag
pls_t	../include/netcache.h	/^typedef struct tag_pls_t pls_t ;$/;"	t	typeref:struct:tag_pls_t
pm_add_cache	../netcache/part_mgr.c	/^pm_add_cache(nc_part_element_t *part, fc_inode_t *inode, int binsert)$/;"	f
pm_add_partition	../netcache/part_mgr.c	/^pm_add_partition(char *path, int weight)$/;"	f
pm_check_partition	../netcache/part_mgr.c	/^pm_check_partition()$/;"	f
pm_check_under_mark	../netcache/part_mgr.c	/^pm_check_under_mark(nc_part_element_t *part, int markv, int bupdate)$/;"	f
pm_check_unlock	../netcache/part_mgr.c	/^pm_check_unlock()$/;"	f	file:
pm_cleanup_privates	../netcache/part_mgr.c	/^pm_cleanup_privates(char *dir)$/;"	f	file:
pm_create_cache_path	../netcache/part_mgr.c	/^pm_create_cache_path(nc_part_element_t *part, int ispriv, uuid_t uuid, nc_uint32_t ai_flag)$/;"	f
pm_destroy	../netcache/part_mgr.c	/^pm_destroy()$/;"	f
pm_destroy_partition	../netcache/part_mgr.c	/^pm_destroy_partition(nc_part_element_t *p)$/;"	f	file:
pm_do_query	../netcache/part_mgr.c	/^pm_do_query(void *d, void *tcb)$/;"	f	file:
pm_elect_part	../netcache/part_mgr.c	/^pm_elect_part(nc_size_t size, int bforce)$/;"	f
pm_free_minode	../netcache/part_mgr.c	/^pm_free_minode(nc_mdb_inode_info_t *mi)$/;"	f
pm_get_align_size	../netcache/part_mgr.c	/^pm_get_align_size()$/;"	f
pm_get_winfo	../netcache/part_mgr.c	/^pm_get_winfo(int *config, int *running)$/;"	f
pm_init	../netcache/part_mgr.c	/^pm_init(int high, int low)$/;"	f
pm_invalidate_node	../netcache/part_mgr.c	/^pm_invalidate_node(int preservecase, char *signature, char *qid)$/;"	f
pm_load_disk_inode	../netcache/part_mgr.c	/^pm_load_disk_inode(int casepreserve, char *signature, char *qid)$/;"	f
pm_load_disk_inode_from_partition	../netcache/part_mgr.c	/^pm_load_disk_inode_from_partition(nc_part_element_t *part, int preservecase, char *signature, char *qid)$/;"	f	file:
pm_load_monitor	../netcache/part_mgr.c	/^pm_load_monitor(void *d)$/;"	f	file:
pm_map_header_to_minode	../netcache/part_mgr.c	/^pm_map_header_to_minode(nc_part_element_t *part, void *header, char * msignature, char *qpath, char *qid)$/;"	f
pm_prepare_partition	../netcache/part_mgr.c	/^pm_prepare_partition(char *path)$/;"	f	file:
pm_purge	../netcache/part_mgr.c	/^pm_purge(nc_volume_context_t *volume, char *pattern, int iskey, int ishard)$/;"	f
pm_purge_cache_callback	../netcache/part_mgr.c	/^pm_purge_cache_callback(nc_volume_context_t *volume, char *path, char *key, uuid_t uuid, nc_int64_t rowid, int ishard, int istempl, nc_path_lock_t *pl, nc_part_element_t *part, void *ctx)$/;"	f	file:
pm_recalc_align	../netcache/part_mgr.c	/^pm_recalc_align(const char *path, size_t blksiz)$/;"	f	file:
pm_reclaim_if_possible	../netcache/part_mgr.c	/^pm_reclaim_if_possible(nc_volume_context_t *volume, char *path, char *key, uuid_t uuid, int istempl, nc_path_lock_t *pl, nc_part_element_t *part)$/;"	f	file:
pm_reclaim_thread	../netcache/part_mgr.c	/^pm_reclaim_thread(void *v)$/;"	f	file:
pm_remove_metainfo	../netcache/part_mgr.c	/^pm_remove_metainfo(fc_inode_t *inode)$/;"	f
pm_reuse_inode	../netcache/part_mgr.c	/^pm_reuse_inode(nc_part_element_t *part,  uuid_t uuid, nc_int64_t rowid, nc_time_t vtime, nc_uint32_t new_cversion)$/;"	f
pm_stop	../netcache/part_mgr.c	/^pm_stop()$/;"	f
pm_unlink_uuid	../netcache/part_mgr.c	/^pm_unlink_uuid(char *vol_signature, char *key, int ispriv, nc_part_element_t *part, uuid_t uuid, char *cpath_ifany)$/;"	f
pm_update_CDF	../netcache/part_mgr.c	/^pm_update_CDF()$/;"	f	file:
pm_update_ios	../netcache/part_mgr.c	/^pm_update_ios(nc_part_element_t *pe, int nio)$/;"	f
pm_update_usage	../netcache/part_mgr.c	/^pm_update_usage(nc_part_element_t *pe)$/;"	f	file:
pool	../include/glru.h	/^	link_list_t 		pool;$/;"	m	struct:tag_glru
pool	../netcache/mdb.c	/^	link_list_t 		pool; \/*DB session pool *\/$/;"	m	struct:tag_nc_mdb_handle	file:
pool_allocator	../include/netcache.h	/^	void 						*(*pool_allocator)(void *cb, size_t sz);$/;"	m	struct:tag_nc_kv_list
pool_cb	../include/netcache.h	/^	void 						*pool_cb;$/;"	m	struct:tag_nc_kv_list
pooledtime	../include/cfs_driver.h	/^	nc_time_t						pooledtime;$/;"	m	struct:nc_volume_context
poollock	../netcache/mdb.c	/^	pthread_mutex_t 	poollock;$/;"	m	struct:tag_nc_mdb_handle	file:
pprev	../include/bt_tmlist.h	/^	struct hlist_node *next, **pprev;$/;"	m	struct:hlist_node	typeref:struct:hlist_node::
preadv	../netcache/util.c	/^preadv(HANDLE fd, const struct iovec *iov, int iovcnt, off_t offset)$/;"	f
prefix	../include/cfs_driver.h	/^	char 							prefix[256];$/;"	m	struct:cfs_origin_driver
prefix	../include/ncapi.h	/^	char 			prefix[NC_MAX_STRINGLEN];$/;"	m	struct:tag_origin_info
prefix_len	../include/cfs_driver.h	/^	int								prefix_len;$/;"	m	struct:cfs_origin_driver
prefix_match	../include/netcache.h	/^	nc_uint8_t 			prefix_match:1;$/;"	m	struct:__anon53
preservecase	../include/cfs_driver.h	/^	int 							preservecase;$/;"	m	struct:cfs_origin_driver
preservecase	../include/cfs_driver.h	/^	nc_uint32_t 					preservecase:1; \/* 대소문자 구분 여부 *\/$/;"	m	struct:nc_volume_context
preservecase	../include/netcache_types.h	/^				nc_uint64_t      	preservecase:1;   	\/* volume에서 가져온 값인데 무결성 문제 발생가능. 삭제가 요구됨 *\/$/;"	m	struct:__anon65::bitefields
prev	../include/bt_tmlist.h	/^	struct list_head *next, *prev;$/;"	m	struct:list_head	typeref:struct:list_head::
prev	../include/netcache_types.h	/^	struct tag_link_node	*prev;$/;"	m	struct:tag_link_node	typeref:struct:tag_link_node::tag_link_node
prev	../test/sorteddll.c	/^	struct tag_link_node	*prev;$/;"	m	struct:tag_link_node	typeref:struct:tag_link_node::tag_link_node	file:
print_line	../test/volume_test.c	/^print_line(char *buf)$/;"	f	file:
print_trace	../netcache/util.c	/^print_trace (void)$/;"	f
priority	../include/ncapi.h	/^	nc_uint8_t 		priority; \/* JP_HIGHER, JP_NORMAL, JP_LOWER *\/$/;"	m	struct:__anon42
priv	../include/asio.h	/^	void				*priv;$/;"	m	struct:nc_asio_vector
priv	../include/ncapi.h	/^	nc_uint32_t 		priv:1;			\/* 객체가 private 객체 *\/$/;"	m	struct:nc_object_info_tag
priv	../include/netcache_types.h	/^			  	nc_uint64_t			priv:1;$/;"	m	struct:__anon65::bitefields
proc	../netcache/diskcache.c	/^	dm_reclaim_inode_callback_t		proc;$/;"	m	struct:tag_cachedir_state	file:
proc_key_destroy	../netcache/hash.c	/^	u_hash_destroy_func_t	proc_key_destroy;$/;"	m	struct:u_hash_table	file:
proc_key_equal	../netcache/hash.c	/^	u_hash_equal_func_t		proc_key_equal;$/;"	m	struct:u_hash_table	file:
proc_key_equal_x	../netcache/hash.c	/^	u_hash_equal_func_cb_t		proc_key_equal_x;$/;"	m	struct:u_hash_table	file:
proc_key_hash	../netcache/hash.c	/^	u_hash_func_t			proc_key_hash;$/;"	m	struct:u_hash_table	file:
proc_key_hash_x	../netcache/hash.c	/^	u_hash_func_cb_t			proc_key_hash_x;$/;"	m	struct:u_hash_table	file:
proc_value_destroy	../netcache/hash.c	/^	u_hash_destroy_func_t	proc_value_destroy;$/;"	m	struct:u_hash_table	file:
progress	../include/glru.h	/^	unsigned char	progress:1;$/;"	m	struct:tag_glru_node
progress	../include/netcache.h	/^  	nc_int32_t 						progress;			\/* CLFU 작업중인 경우 +1, reclaim하면 안됨을 표시*\/$/;"	m	struct:tag_fc_inode_info
prolog	../netcache/threadpool.c	/^	tp_prolog_t			prolog;$/;"	m	struct:tag_threadpool	file:
prop	../netcache/fhops.c	/^	nc_xtra_options_t 	*prop;$/;"	m	struct:fio_open_sync_info	file:
properties	../include/ncapi.h	/^	nc_xtra_options_t 	*properties;$/;"	m	struct:__anon39
property	../include/ncapi.h	/^	nc_xtra_options_t 	*property;			\/* 객체의 속성 정보, 즉 헤더 정보 *\/$/;"	m	struct:nc_object_info_tag
property	../include/netcache.h	/^	nc_xtra_options_t 				*property;$/;"	m	struct:tag_fc_inode_info
property	../include/netcache.h	/^	nc_xtra_options_t 	*property;$/;"	m	struct:tag_nc_mdb_inode_info
property	../netcache/mdb.c	/^	nc_xtra_options_t 	*property;$/;"	m	struct:property_pack_info	file:
property_injected	../include/netcache.h	/^	int     property_injected;$/;"	m	struct:tag_fc_stream_info
property_pack_info	../netcache/mdb.c	/^struct property_pack_info {$/;"	s	file:
pseudoprop	../include/netcache_types.h	/^				nc_uint64_t      	pseudoprop:1;		\/* 1: pseudo property , POST operatoin 실행 초기 단계에서 1로 세팅됨*\/$/;"	m	struct:__anon65::bitefields
pthread_create	../test/gprof-helper.c	/^int pthread_create(pthread_t * __restrict thread,$/;"	f
pthread_create_orig	../test/gprof-helper.c	/^static int (*pthread_create_orig) (pthread_t * __restrict,$/;"	v	file:
pthread_func	../netcache/util.c	/^	void * (*pthread_func)(void *);$/;"	m	struct:my_thread_info	file:
pthread_is_same	../netcache/util.c	/^pthread_is_same(pthread_t t1, pthread_t t2)$/;"	f
ptr	../netcache/backtrace.c	/^	size_t ptr;$/;"	m	struct:output_buffer	file:
pttl	../include/netcache.h	/^	nc_time_t 					pttl; \/* 0이면 무시 *\/$/;"	m	struct:tag_nc_kv_list
ptxno	../netcache/mdb.c	/^	mdb_tx_info_t	*ptxno;$/;"	m	struct:mdb_inserti_tag	file:
ptxno	../netcache/mdb.c	/^	mdb_tx_info_t	*ptxno;$/;"	m	struct:mdb_remove_rowi_tag	file:
ptxno	../netcache/mdb.c	/^	mdb_tx_info_t	*ptxno;$/;"	m	struct:mdb_removei_tag	file:
ptxno	../netcache/mdb.c	/^	mdb_tx_info_t	*ptxno;$/;"	m	struct:mdb_update_rowi_tag	file:
purge	../test/driver_test.c	/^char 			purge[256]="";$/;"	v
purge_info	../include/netcache.h	/^struct purge_info {$/;"	s
purge_info_t	../include/netcache.h	/^} purge_info_t;$/;"	t	typeref:struct:__anon54
purge_needed	../test/driver_test.c	/^int 			purge_needed = 0;$/;"	v
purged	../netcache/volumeops.c	/^	nc_uint32_t 			purged;$/;"	m	struct:tag_purge_volume_context	file:
pwritev	../netcache/util.c	/^pwritev(HANDLE fd, const struct iovec *iov, int iovcnt, off_t offset)$/;"	f
pxyreval	../include/netcache_types.h	/^			  	nc_uint64_t      	pxyreval:1; 		\/* proxy reval *\/$/;"	m	struct:__anon65::bitefields
q_id	../include/netcache.h	/^	char				*q_id;$/;"	m	struct:tag_nc_mdb_inode_info
q_id	../include/netcache.h	/^	char *							q_id;				\/* 객체의 key *\/$/;"	m	struct:tag_fc_inode_info
q_path	../include/netcache.h	/^	char				*q_path;$/;"	m	struct:tag_nc_mdb_inode_info
q_path	../include/netcache.h	/^	char *							q_path;				\/* 객체 URL중 경로 part *\/$/;"	m	struct:tag_fc_inode_info
qid	../include/netcache.h	/^	char 			*qid;$/;"	m	struct:__anon52
qpath	../include/netcache.h	/^	char 			*qpath;$/;"	m	struct:__anon52
qr_key	../util/nc_convert.c	/^	char              qr_key[NC_OLD_MAXPATHLEN];$/;"	m	struct:tag_fc_old_header_info	file:
qr_path	../netcache/cfs_driver.c	/^	char						*qr_path;$/;"	m	struct:tag_driver_fi	file:
qr_path	../netcache/volumeops.c	/^	char				*qr_path;$/;"	m	struct:tag_volume_context_fi	file:
qr_path	../util/nc_convert.c	/^	char              qr_path[NC_OLD_MAXPATHLEN];$/;"	m	struct:tag_fc_old_header_info	file:
queried	../include/netcache.h	/^			nc_uint32_t         	queried:1;$/;"	m	struct:apc_open_context::__anon49::__anon50
query	../netcache/mdb.c	/^	char 			*query;$/;"	m	struct:tag_mdb_session	file:
query	../netcache/part_mgr.c	/^	struct tag_query_inode *query;$/;"	m	struct:tag_query_inode_inode_quark	typeref:struct:tag_query_inode_inode_quark::tag_query_inode	file:
query_handler	../netcache/part_mgr.c	/^	tp_handle_t 			query_handler;$/;"	m	struct:tag_part_table_info	file:
query_result	../include/netcache.h	/^	} query_result;$/;"	m	struct:apc_open_context	typeref:struct:apc_open_context::__anon51
queue	../netcache/mdb.c	/^	link_list_t 		queue;$/;"	m	struct:mdb_rwlock	file:
r	../rwtest/rwtest.c	/^pthread_t	r[2];$/;"	v
r_cnt	../rwtest/rwtest.c	/^int		r_cnt[2] = {0,0};$/;"	v
r_e	../include/netcache.h	/^	int				r_e; \/* range end *\/$/;"	m	struct:tag_part_element
r_s	../include/netcache.h	/^	int				r_s; \/* range start *\/$/;"	m	struct:tag_part_element
r_worker	../rwtest/rwtest.c	/^void *r_worker(void *d)$/;"	f
rangeable	../include/ncapi.h	/^	nc_uint32_t 		rangeable:1;			\/* 객체가 range요청을 허용하는 경우엔 1, 아니면 0 *\/$/;"	m	struct:nc_object_info_tag
rangeable	../include/netcache_types.h	/^			  	nc_uint64_t 		rangeable:1;$/;"	m	struct:__anon65::bitefields
raw_result	../include/netcache.h	/^	int 						raw_result; \/* property가 원본에서 응답으로 만들어 진 경우 code값 *\/$/;"	m	struct:tag_nc_kv_list
rawmode	../netcache/hash.c	/^	int 				rawmode; 	\/* 1 : lock used for low-level malloc operation *\/$/;"	m	struct:u_hash_table	file:
rb_bind_inode	../netcache/ringbuffer.c	/^rb_bind_inode(nc_ringbuffer_t *ring, void *inode)$/;"	f
rb_clr_flag	../netcache/ringbuffer.c	/^rb_clr_flag(nc_ringbuffer_t *rb, nc_uint32_t flg)$/;"	f	file:
rb_commit_update_nolock	../netcache/ringbuffer.c	/^rb_commit_update_nolock(nc_ringbuffer_t *rb)$/;"	f	file:
rb_create	../netcache/ringbuffer.c	/^rb_create(size_t size, void *(*allocator)(void *cb, size_t sz), void *cbdata)$/;"	f
rb_destroy	../netcache/ringbuffer.c	/^rb_destroy(nc_ringbuffer_t *ring)$/;"	f
rb_dump	../netcache/ringbuffer.c	/^rb_dump(nc_ringbuffer_t *rb, char *buf, int len)$/;"	f
rb_eot	../netcache/ringbuffer.c	/^rb_eot(nc_ringbuffer_t *rb)$/;"	f
rb_exception	../netcache/ringbuffer.c	/^rb_exception(nc_ringbuffer_t *rb)$/;"	f
rb_flag	../netcache/ringbuffer.c	/^rb_flag(nc_ringbuffer_t *rb, nc_uint32_t flg)$/;"	f
rb_free	../netcache/ringbuffer.c	/^rb_free(nc_ringbuffer_t *rb)$/;"	f
rb_lock	../netcache/ringbuffer.c	/^rb_lock(nc_ringbuffer_t *ring)$/;"	f
rb_read	../netcache/ringbuffer.c	/^rb_read(nc_ringbuffer_t *rb, char *zdata, size_t count)$/;"	f
rb_reader_thread	../test/rb_test.c	/^rb_reader_thread(void *u)$/;"	f
rb_set_eot	../netcache/ringbuffer.c	/^rb_set_eot(nc_ringbuffer_t *rb)$/;"	f
rb_set_flag	../netcache/ringbuffer.c	/^rb_set_flag(nc_ringbuffer_t *rb, nc_uint32_t flg)$/;"	f
rb_size	../netcache/ringbuffer.c	/^rb_size(const nc_ringbuffer_t *rb)$/;"	f
rb_unlock	../netcache/ringbuffer.c	/^rb_unlock(nc_ringbuffer_t *ring)$/;"	f
rb_wait_for_nolock	../netcache/ringbuffer.c	/^rb_wait_for_nolock(nc_ringbuffer_t *rb, int iot, nc_int32_t msec)$/;"	f
rb_write	../netcache/ringbuffer.c	/^rb_write(nc_ringbuffer_t * rb, char *buff, size_t count)$/;"	f
rb_writer_thread	../test/rb_test.c	/^rb_writer_thread(void *u)$/;"	f
rcnt	../include/util.h	/^	int						rcnt;$/;"	m	struct:__anon69
rctx	../include/block.h	/^	apc_read_context_t	*rctx;$/;"	m	struct:tag_blk_apc_read_info
read	../include/cfs_driver.h	/^	int 							(*read)(struct cfs_origin_driver *drv, nc_asio_vector_t *vector, nc_origin_session_t ctx);$/;"	m	struct:cfs_origin_driver
read_bytes	../test/rb_test.c	/^volatile long long		read_bytes; $/;"	v
readable	../include/cfs_driver.h	/^	nc_uint32_t 					readable:1;$/;"	m	struct:nc_volume_context
readdir	../include/cfs_driver.h	/^	int								(*readdir)(struct cfs_origin_driver *drv, char *path, void *cb, cfs_dir_callback_t proc, cfs_off_t off, void *userdata);$/;"	m	struct:cfs_origin_driver
reader	../netcache/mdb.c	/^	int 				reader;$/;"	m	struct:mdb_rwlock	file:
realloc	../netcache/heaptrack.c	/^realloc(void *ap, size_t sz)$/;"	f
reclaim_highmark	../netcache/part_mgr.c	/^	int					reclaim_highmark; \/*= DM_RECLAIM_HIGHMARK;*\/$/;"	m	struct:tag_part_table_info	file:
reclaim_lowmark	../netcache/part_mgr.c	/^	int					reclaim_lowmark; \/*= DM_RECLAIM_LOWMARK; *\/$/;"	m	struct:tag_part_table_info	file:
reclaimer	../include/netcache.h	/^	pthread_t			reclaimer;$/;"	m	struct:tag_part_element
reclaiming	../netcache/diskcache.c	/^	int								reclaiming; \/* 1 if reclaiming in progress *\/$/;"	m	struct:tag_cachedir_state	file:
recoverable	../include/wb_timer.h	/^	unsigned short 		recoverable:1;			\/*1 if it need recover *\/$/;"	m	struct:timer_list
ref	../include/util.h	/^	int						ref;$/;"	m	struct:tag_link_list
ref	../test/sorteddll.c	/^	int						ref;$/;"	m	struct:tag_link_list	file:
refcnt	../include/cfs_driver.h	/^	int								refcnt;$/;"	m	struct:cfs_origin_driver
refcnt	../include/cfs_driver.h	/^	nc_int32_t						refcnt;$/;"	m	struct:nc_volume_context
refcnt	../include/glru.h	/^	int 			refcnt;$/;"	m	struct:tag_glru_node
refcnt	../include/netcache.h	/^  	nc_int16_t 						refcnt; 		\/* no cache *\/$/;"	m	struct:tag_fc_inode_info
refreshstat	../include/netcache_types.h	/^				nc_uint64_t 		refreshstat:1;$/;"	m	struct:__anon65::bitefields
refs	../netcache/mdb.c	/^	int 				refs; \/* reference count *\/$/;"	m	struct:tag_nc_mdb_handle	file:
refs	../netcache/mdb.c	/^	int 			refs;$/;"	m	struct:tag_mdb_session	file:
release_set	../netcache/backtrace.c	/^release_set(struct bfd_set *set)$/;"	f	file:
remained	../include/netcache.h	/^	int 					remained;$/;"	m	struct:apc_read_context
rename	../include/cfs_driver.h	/^	int								(*rename)(struct cfs_origin_driver *drv, dev_file_handle_t *fi, char *path1, char *path2);$/;"	m	struct:cfs_origin_driver
report_bcm_stat	../netcache/bc_mgr.c	/^report_bcm_stat()$/;"	f
report_error_syslog	../netcache/util.c	/^report_error_syslog(char *name, char *fmt, ...)$/;"	f
report_ml_stat	../netcache/util.c	/^report_ml_stat()$/;"	f
reset	../include/glru.h	/^	void 			(*reset)(void *);$/;"	m	struct:tag_glru
reset	../include/glru.h	/^	void 			(*reset)(void *);$/;"	m	struct:tag_glru_operations
restrict	../include/util.h	116;"	d
restrict	../include/util.h	119;"	d
result	../include/netcache.h	/^		int 				result; \/* filled from driver *\/$/;"	m	struct:apc_open_context::__anon51
result_proc	../include/cfs_driver.h	/^	cfs_update_result_callback_t 	result_proc;$/;"	m	struct:cfs_origin_driver
rfx	../netcache/ringbuffer.c	/^	int				rfx;		\/* read offset *\/$/;"	m	struct:tag_nc_ringbuffer	file:
rioq	../common/blk_io.c	/^	int						rioq;$/;"	m	struct:iot_handler_info	file:
rmagic	../include/glru.h	/^	nc_uint32_t 		rmagic;		$/;"	m	struct:tag_glru
rmagic	../include/netcache.h	/^	nc_uint32_t				rmagic;$/;"	m	struct:apc_read_context
rmagic	../include/netcache.h	/^	nc_uint32_t	rmagic;$/;"	m	struct:tag_opaque
rmagic	../include/netcache_types.h	/^	nc_uint16_t 			rmagic;$/;"	m	struct:tag_apc_overlapped
rmagic	../netcache/heaptrack.c	/^	unsigned long long* rmagic;$/;"	m	struct:__anon7	file:
rmdir	../include/cfs_driver.h	/^	int								(*rmdir)(struct cfs_origin_driver *drv, char *path);$/;"	m	struct:cfs_origin_driver
root	../include/cfs_driver.h	/^	link_list_t 	root;$/;"	m	struct:tag_nc_open_cc
root	../include/lru.h	/^	void				*root;	  \/* points to the LFU band *\/$/;"	m	struct:tag_lru_root
root	../include/lru.h	/^    void 					*root;$/;"	m	struct:__anon37
root	../include/netcache.h	/^	link_list_t 				*root[KV_HASH_SIZE]; \/* char를 0x3F로 해시해서 root 선택*\/$/;"	m	struct:tag_nc_kv_list
root	../include/netcache.h	/^	link_list_t 				root;$/;"	m	struct:tag_nc_kv_list
root	../test/driver_test.c	/^char 			root[128]="\/"; \/* BD-03*\/$/;"	v
rotl	../netcache/bt_timer.c	/^rotl(const tw_scalar_t v, int c) $/;"	f	file:
rotr	../netcache/bt_timer.c	/^rotr(const tw_scalar_t v, int c) $/;"	f	file:
rowid	../include/netcache.h	/^	nc_int64_t						rowid;				\/* MDB unique ID *\/$/;"	m	struct:tag_fc_inode_info
rowid	../include/netcache.h	/^	nc_int64_t			rowid;$/;"	m	struct:tag_nc_mdb_inode_info
rowid	../include/netcache.h	/^	nc_int64_t 			rowid;$/;"	m	struct:purge_info
rowid	../netcache/mdb.c	/^	nc_int64_t		rowid;$/;"	m	struct:mdb_inserti_tag	file:
rowid	../netcache/mdb.c	/^	nc_int64_t		rowid;$/;"	m	struct:mdb_remove_rowi_tag	file:
rowid	../netcache/mdb.c	/^	nc_int64_t		rowid;$/;"	m	struct:mdb_update_rowi_tag	file:
rptr	../include/netcache_types.h	/^	void 		*rptr;$/;"	m	struct:__anon58
rsize	../include/netcache.h	/^	nc_int64_t			rsize; \/* real data size *\/$/;"	m	struct:tag_nc_mdb_inode_info
rsize	../include/netcache.h	/^  	nc_size_t      					rsize;			\/**<객체의 실제크기 (단위:바이트)*\/$/;"	m	struct:tag_fc_inode_info
rsize	../include/netcache_types.h	/^	nc_uint64_t	rsize;$/;"	m	struct:__anon58
rsize	../netcache/mdb.c	/^	nc_int64_t		rsize;$/;"	m	struct:mdb_inserti_tag	file:
rsize	../netcache/mdb.c	/^	nc_size_t		rsize;$/;"	m	struct:mdb_update_rowi_tag	file:
rt	../test/rb_test.c	/^int 			rt = 1;$/;"	v
run_alloc	../test/mem_test.c	/^run_alloc(void *u)$/;"	f
run_disk_io	../test/driver_test.c	/^run_disk_io(void *d)$/;"	f
run_disk_io_1G	../test/driver_test.c	/^run_disk_io_1G(void *d)$/;"	f
run_disk_io_burst	../test/driver_test.c	/^run_disk_io_burst(void *d)$/;"	f
run_disk_io_burst_aio	../test/driver_test.c	/^run_disk_io_burst_aio(void *d)$/;"	f
run_disk_io_oc	../test/driver_test.c	/^run_disk_io_oc(void *d)$/;"	f
run_disk_io_verify	../test/driver_test.c	/^run_disk_io_verify(void *d)$/;"	f
run_disk_io_wma	../test/driver_test.c	/^run_disk_io_wma(void *d)$/;"	f
run_disk_io_wms	../test/driver_test.c	/^run_disk_io_wms(void *d)$/;"	f
run_path_lock_stress	../test/driver_test.c	/^run_path_lock_stress(void *d)$/;"	f
run_stat_stress	../test/driver_test.c	/^run_stat_stress(void *d)$/;"	f
run_timers	../netcache/wb_timer.c	/^void run_timers(void *vt_base)$/;"	f
running	../include/bt_timer.h	/^	short					running; \/* 타이머가 실행 중일 때 1임. 1이 된 상태에서 다른 모든 operation은 대기함 *\/$/;"	m	struct:timeout
running	../netcache/threadpool.c	/^	int 				running;	\/* # of running threads *\/$/;"	m	struct:tag_threadpool	file:
running_timer	../netcache/wb_timer.c	/^	struct timer_list *running_timer;$/;"	m	struct:tvec_t_base_s	typeref:struct:tvec_t_base_s::timer_list	file:
rwl	../include/cyclic_lfu.h	/^		nc_ulock_t 		*rwl;$/;"	m	union:__anon32::__anon33
rwlock	../include/cfs_driver.h	/^	pthread_rwlock_t 				*rwlock;$/;"	m	struct:cfs_origin_driver
rwlock	../include/netcache.h	/^	pthread_rwlock_t 	rwlock;$/;"	m	struct:tag_part_element
rwlock	../include/util.h	/^	pthread_rwlock_t	rwlock;$/;"	m	struct:__anon69
rwlock	../netcache/hash.c	/^	pthread_rwlock_t	*rwlock;$/;"	m	struct:u_hash_table	file:
s__bcm_timer_block_spinner	../netcache/bc_mgr.c	/^static						bt_timer_t 			s__bcm_timer_block_spinner;$/;"	v	file:
s__bl_array	../netcache/clfu.c	/^static  bl_t 	 		**s__bl_array = NULL;$/;"	v	file:
s__bl_array_alloc	../netcache/clfu.c	/^static  int 	 		s__bl_array_alloc = 0;$/;"	v	file:
s__bl_array_cnt	../netcache/clfu.c	/^static  int 	 		s__bl_array_cnt = 0;$/;"	v	file:
s__bl_lock	../netcache/clfu.c	/^static  pthread_mutex_t s__bl_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s__bl_tbl	../netcache/clfu.c	/^static 	void 			*s__bl_tbl = NULL;$/;"	v	file:
s__blk_cache_lock	../netcache/bc_mgr.c	/^nc_ulock_t 					s__blk_cache_lock;$/;"	v
s__bulk_list	../netcache/bc_mgr.c	/^static link_list_t 			s__bulk_list;$/;"	v	file:
s__cfs_lock	../netcache/cfs_driver.c	/^static pthread_mutex_t  s__cfs_lock 				= PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s__default_fc_policy	../netcache/volumeops.c	/^static char							s__default_fc_policy[]="mtime,devid,size";$/;"	v	file:
s__device_table	../netcache/cfs_driver.c	/^u_hash_table_t *		s__device_table 			= NULL;$/;"	v
s__free_ri_init	../common/blk_io.c	/^static int			s__free_ri_init	= 0;$/;"	v	file:
s__free_ri_list	../common/blk_io.c	/^static link_list_t	s__free_ri_list = LIST_INITIALIZER;$/;"	v	file:
s__free_ri_lock	../common/blk_io.c	/^static nc_lock_t	s__free_ri_lock	= NC_LOCK_INITIALIZER;$/;"	v	file:
s__io_lock	../netcache/trace.c	/^static pthread_mutex_t		s__io_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s__io_lock	../test/driver_test.c	/^static pthread_mutex_t 	s__io_lock;$/;"	v	file:
s__iocb_pool	../netcache/disk_io_ops.c	/^static link_list_t  	s__iocb_pool;$/;"	v	file:
s__iocb_pool_array	../netcache/disk_io_ops.c	/^static nc_iocb_t 		*s__iocb_pool_array = NULL;$/;"	v	file:
s__iocb_pool_lock	../netcache/disk_io_ops.c	/^static pthread_mutex_t  s__iocb_pool_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s__iot_handler	../common/blk_io.c	/^} s__iot_handler[] = {$/;"	v	typeref:struct:iot_handler_info
s__iox_lock	../netcache/disk_io_ops.c	/^static pthread_mutex_t  s__iox_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s__kaio_tp	../netcache/disk_io_ops.c	/^static tp_handle_t		s__kaio_tp;$/;"	v	file:
s__kv_alloced	../netcache/kv.c	/^static int 						s__kv_alloced = 0;$/;"	v	file:
s__libaio_queue	../netcache/disk_io_ops.c	/^static io_context_t		s__libaio_queue;$/;"	v	file:
s__max_iocbs	../netcache/disk_io_ops.c	/^static int				s__max_iocbs	= 0;$/;"	v	file:
s__md_lock	../netcache/util.c	/^static pthread_mutex_t  	s__md_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s__mhit_ratio	../netcache/cfs_apix.c	/^static float				s__mhit_ratio = 0.0;$/;"	v	file:
s__mls_array	../netcache/util.c	/^static  mls_t 	 		**s__mls_array = NULL;$/;"	v	file:
s__mls_array_alloc	../netcache/util.c	/^static  int 	 		s__mls_array_alloc = 0;$/;"	v	file:
s__mls_array_cnt	../netcache/util.c	/^static  int 	 		s__mls_array_cnt = 0;$/;"	v	file:
s__mls_lock	../netcache/util.c	/^static  pthread_mutex_t s__mls_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s__mls_tbl	../netcache/util.c	/^static 	void 			*s__mls_tbl = NULL;$/;"	v	file:
s__nvm_dthread_list	../netcache/volumeops.c	/^static link_list_t		s__nvm_dthread_list = LIST_INITIALIZER;$/;"	v	file:
s__nvm_lock	../netcache/volumeops.c	/^static pthread_mutex_t	s__nvm_lock 		= PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s__op_array	../netcache/mdb.c	/^static char s__op_array[][512] = {$/;"	v	file:
s__page_hash	../netcache/util.c	/^static u_hash_table_t   	*s__page_hash = NULL;$/;"	v	file:
s__page_pool	../netcache/bc_mgr.c	/^static link_list_t 			s__page_pool;$/;"	v	file:
s__pls_array	../netcache/volumeops.c	/^static  pls_t 	 		**s__pls_array = NULL;$/;"	v	file:
s__pls_array_alloc	../netcache/volumeops.c	/^static  int 	 		s__pls_array_alloc = 0;$/;"	v	file:
s__pls_array_cnt	../netcache/volumeops.c	/^static  int 	 		s__pls_array_cnt = 0;$/;"	v	file:
s__pls_lock	../netcache/volumeops.c	/^static  pthread_mutex_t s__pls_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s__pls_tbl	../netcache/volumeops.c	/^static 	void 			*s__pls_tbl = NULL;$/;"	v	file:
s__reserved_vol	../netcache/volumeops.c	/^static nc_volume_context_t	*s__reserved_vol = NULL;$/;"	v	file:
s__symbol_dict	../netcache/trace.c	/^static trace_symbol_t	s__symbol_dict[] = {$/;"	v	file:
s__symbol_enums	../netcache/trace.c	/^int						s__symbol_enums = sizeof(s__symbol_dict)\/sizeof(trace_symbol_t);$/;"	v
s__timer_RSS_monitor	../netcache/cfs_apix.c	/^bt_timer_t 					s__timer_RSS_monitor; \/* for debugging *\/$/;"	v
s__timer_cache_monitor	../netcache/cfs_apix.c	/^bt_timer_t 					s__timer_cache_monitor;$/;"	v
s__timer_check_heap	../netcache/cfs_apix.c	/^bt_timer_t 					s__timer_check_heap;$/;"	v
s__timer_memory_reclaim	../netcache/cfs_apix.c	/^bt_timer_t 					s__timer_memory_reclaim;$/;"	v
s__trace_init	../netcache/trace.c	/^static int					s__trace_init = 0;$/;"	v	file:
s__trace_output	../netcache/trace.c	/^static FILE		*			s__trace_output;$/;"	v	file:
s__upseq	../netcache/mdb.c	/^static nc_uint64_t				s__upseq = 1LL;$/;"	v	file:
s__volume_dictionary	../netcache/volumeops.c	/^static u_hash_table_t  				*s__volume_dictionary = NULL;$/;"	v	file:
s__volume_dictionary_lock	../netcache/volumeops.c	/^static pthread_mutex_t				s__volume_dictionary_lock = PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP;$/;"	v	file:
s__volume_pool	../netcache/volumeops.c	/^static link_list_t					s__volume_pool = LIST_INITIALIZER;$/;"	v	file:
s__wait_ios	../netcache/disk_io_ops.c	/^int							s__wait_ios			= 0;$/;"	v
s__wait_read_ios	../netcache/disk_io_ops.c	/^int							s__wait_read_ios 	= 0;$/;"	v
s__wait_write_ios	../netcache/disk_io_ops.c	/^int							s__wait_write_ios 	= 0;$/;"	v
s_encoding	../include/cfs_driver.h	/^	char 							s_encoding[128];$/;"	m	struct:cfs_origin_driver
s_file	../netcache/util.c	/^		const char 		*s_file;$/;"	m	struct:__anon12	file:
s_free	../netcache/cfs_driver.c	/^void s_free(void *f)$/;"	f
s_line	../netcache/util.c	/^		nc_uint16_t 	s_line;$/;"	m	struct:__anon12	file:
sb_	../include/block.h	/^		} sb_;$/;"	m	union:tag_fc_blk::__anon25	typeref:struct:tag_fc_blk::__anon25::__anon26
sb_bblocked	../include/block.h	/^	  		nc_uint8_t 			sb_bblocked:1;	  \/\/ don't swap 						---$/;"	m	struct:tag_fc_blk::__anon25::__anon26
sb_bcanceled	../include/block.h	/^	  		nc_uint8_t       	sb_bcanceled:1;	  \/\/ block-IO canceled                   V$/;"	m	struct:tag_fc_blk::__anon25::__anon26
sb_bdskfault	../include/block.h	/^			nc_uint8_t 			sb_bdskfault:1;	  \/\/ loaded from disk                    |$/;"	m	struct:tag_fc_blk::__anon25::__anon26
sb_bhit	../include/block.h	/^	  		nc_uint8_t 			sb_bhit:1;		  \/\/ used block							---$/;"	m	struct:tag_fc_blk::__anon25::__anon26
sb_binprogress	../include/block.h	/^	  		nc_uint8_t       	sb_binprogress:1; \/\/ IO inprogrss                        ^$/;"	m	struct:tag_fc_blk::__anon25::__anon26
sb_bnioprogress	../include/block.h	/^	  		nc_uint8_t 			sb_bnioprogress:1;		  \/\/ $/;"	m	struct:tag_fc_blk::__anon25::__anon26
sb_bosdfault	../include/block.h	/^			nc_uint8_t 			sb_bosdfault:1;	  \/\/ loaded from origin not yet used,    1 byte$/;"	m	struct:tag_fc_blk::__anon25::__anon26
sb_brefcnt	../include/block.h	/^			nc_uint16_t			sb_brefcnt;  	\/* 1 byte *\/$/;"	m	struct:tag_fc_blk::__anon25::__anon26
sb_bstate	../include/block.h	/^		  	nc_block_state_t	sb_bstate;		\/* 1 byte *\/$/;"	m	struct:tag_fc_blk::__anon25::__anon26
sb_scalar	../include/block.h	/^		nc_uint32_t	sb_scalar;$/;"	m	union:tag_fc_blk::__anon25
scale	../netcache/cfs_apix.c	/^	int		scale;$/;"	m	struct:__anon2	file:
scanned	../netcache/volumeops.c	/^	int				scanned; \/* # of scanned count *\/$/;"	m	struct:inode_callback_info_tag	file:
sema	../rwtest/rwtest.c	/^	sem_t				sema;$/;"	m	struct:nc_rw_lock	file:
seq	../include/block.h	/^	nc_uint32_t			seq;$/;"	m	struct:tag_blk_apc_read_info
seq	../netcache/mdb.c	/^	nc_uint64_t		seq;$/;"	m	struct:mdb_inserti_tag	file:
seq	../netcache/mdb.c	/^	nc_uint64_t		seq;$/;"	m	struct:mdb_remove_rowi_tag	file:
seq	../netcache/mdb.c	/^	nc_uint64_t		seq;$/;"	m	struct:mdb_removei_tag	file:
seq	../netcache/mdb.c	/^	nc_uint64_t		seq;$/;"	m	struct:mdb_update_rowi_tag	file:
session	../include/netcache.h	/^  	void	*session;$/;"	m	struct:tag_fc_stream_info
session_count	../netcache/mdb.c	/^ 	int 				session_count;	$/;"	m	struct:tag_nc_mdb_handle	file:
set_bit	../include/non-atomic.h	/^static inline void set_bit(int nr, volatile unsigned long *addr)$/;"	f
set_lasterror	../include/cfs_driver.h	/^	int 							(*set_lasterror)(int);$/;"	m	struct:cfs_origin_driver
set_notifier	../include/cfs_driver.h	/^	int 							(*set_notifier)(struct cfs_origin_driver *drv, cfs_notifier_callback_t cb, struct nc_volume_context *mc);$/;"	m	struct:cfs_origin_driver
set_read_range	../include/cfs_driver.h	/^	int                             (*set_read_range)(struct cfs_origin_driver *drv, nc_origin_session_t ctx, nc_int64_t offset, nc_int64_t size);$/;"	m	struct:cfs_origin_driver
set_running_timer	../netcache/wb_timer.c	/^static inline void set_running_timer(tvec_base_t * base, struct timer_list *timer)$/;"	f	file:
setprogress	../include/netcache.h	/^	nc_uint8_t 			setprogress:1;$/;"	m	struct:__anon53
shash_entry_t	../netcache/heaptrack.c	/^} shash_entry_t;$/;"	t	typeref:struct:tag_shash_entry	file:
shash_t	../netcache/heaptrack.c	/^} shash_t;$/;"	t	typeref:struct:__anon8	file:
shutdown	../include/cfs_driver.h	/^	int								shutdown;$/;"	m	struct:cfs_origin_driver
shutdown	../netcache/disk_io_ops.c	/^	int		shutdown; \/* 2 indicates the corresponding thread should be gracefull shutdowned *\/$/;"	m	struct:io_thread_info	file:
signal	../include/glru.h	/^	pthread_cond_t 		signal;$/;"	m	struct:tag_glru
signal	../include/netcache_types.h	/^			pthread_cond_t			signal;$/;"	m	struct:tag_apc_overlapped::__anon62::__anon64
signal	../netcache/mdb.c	/^	pthread_cond_t 		signal;$/;"	m	struct:mdb_rwlock	file:
signal	../netcache/part_mgr.c	/^	pthread_cond_t 			signal;$/;"	m	struct:tag_query_inode	file:
signature	../include/block.h	/^	nc_uint64_t		signature; \/* 속한 inode's signature *\/$/;"	m	struct:tag_fc_blk
signature	../include/cfs_driver.h	/^	char							signature[128];$/;"	m	struct:nc_volume_context
signature	../include/cfs_driver.h	/^	char 							signature[NC_MAX_STRINGLEN];$/;"	m	struct:cfs_origin_driver
signature	../include/cfs_driver.h	/^	nc_uint64_t 				signature;$/;"	m	struct:nc_path_lock_tag
signature	../include/cfs_driver.h	/^	nc_uint64_t 		signature;	$/;"	m	struct:cfs_iov
signature	../include/cyclic_lfu.h	/^	char 			signature[128];$/;"	m	struct:__anon32
signature	../include/lru.h	/^	time_t				signature;$/;"	m	struct:tag_lru_root
signature	../include/netcache.h	/^	nc_uint64_t				signature;$/;"	m	struct:apc_read_context
signature	../include/netcache.h	/^  	nc_uint64_t						signature;$/;"	m	struct:tag_fc_inode_info
signature	../netcache/mdb.c	/^	char				*signature;$/;"	m	struct:tag_nc_mdb_handle	file:
signature	../netcache/mdb.c	/^	char			*signature;$/;"	m	struct:mdb_inserti_tag	file:
signature	../netcache/mdb.c	/^	char			*signature;$/;"	m	struct:mdb_removei_tag	file:
signature	../netcache/mdb.c	/^	char 	signature[4];$/;"	m	struct:__anon10	file:
signature	../netcache/part_mgr.c	/^	char 					*signature;$/;"	m	struct:tag_query_inode	file:
singlefile_mode	../test/driver_test.c	/^int 			singlefile_mode = 0;$/;"	v
singlefile_mode	../test/volume_test.c	/^int 			singlefile_mode = 0;$/;"	v
size	../include/kv.h	/^	size_t 			size; \/* total size *\/$/;"	m	struct:__anon35
size	../include/ncapi.h	/^	nc_uint64_t 		size; 				\/* 객체의 크기 *\/$/;"	m	struct:nc_object_info_tag
size	../include/netcache.h	/^	nc_int64_t			size;$/;"	m	struct:tag_nc_mdb_inode_info
size	../include/netcache.h	/^  	nc_size_t      					size;			\/**<객체의 크기 (단위:바이트)*\/$/;"	m	struct:tag_fc_inode_info
size	../include/netcache.h	/^  	nc_uint32_t 		size;$/;"	m	struct:tag_fc_header_info_v30
size	../netcache/hash.c	/^	int					size;$/;"	m	struct:u_hash_table	file:
size	../netcache/heaptrack.c	/^	size_t				size;		\/* real alloc size *\/$/;"	m	struct:__anon7	file:
size	../netcache/mdb.c	/^	nc_int64_t		size;$/;"	m	struct:mdb_inserti_tag	file:
size	../netcache/mdb.c	/^	nc_size_t		size;$/;"	m	struct:mdb_update_rowi_tag	file:
size	../netcache/ringbuffer.c	/^	int 			size;$/;"	m	struct:tag_nc_ringbuffer	file:
size	../util/nc_convert.c	/^	long long         size;$/;"	m	struct:tag_fc_old_header_info	file:
sizedecled	../include/ncapi.h	/^	nc_uint32_t 		sizedecled:1;		\/* 1: 원본이 객체크기를 알려줌 *\/$/;"	m	struct:nc_object_info_tag
sizedecled	../include/netcache_types.h	/^			  	nc_uint64_t      	sizedecled:1; 		\/* 객체크기가 알려진경우,  norandom=1인경우, io가 끝나야 알 수 있음 *\/$/;"	m	struct:__anon65::bitefields
sizeknown	../include/ncapi.h	/^	nc_uint32_t 		sizeknown:1	;		\/* 객체의 크기가 확정된 경우엔 1, 아니면 0 *\/$/;"	m	struct:nc_object_info_tag
sizeknown	../include/netcache_types.h	/^			  	nc_uint64_t      	sizeknown:1; 		\/* 객체크기가 알려진경우,  norandom=1인경우, io가 끝나야 알 수 있음 *\/$/;"	m	struct:__anon65::bitefields
sleepmode	../test/driver_test.c	/^mode_t 			sleepmode = 0;$/;"	v
sleepms	../netcache/mdb.c	/^	int 			sleepms; 	\/*sleep time in ms *\/$/;"	m	struct:tag_mdb_session	file:
slice	../netcache/part_mgr.c	/^	part_query_inode_quark_t *slice;$/;"	m	struct:tag_query_inode	file:
slock	../include/netcache.h	/^	pthread_spinlock_t				slock;				\/* fast spin lock:spinlock내에서 lock, sleep, IO등 절대 사용말것 *\/$/;"	m	struct:tag_fc_inode_info
slock	../include/util.h	/^	pthread_spinlock_t		slock;$/;"	m	struct:__anon69
sno	../netcache/util.c	/^	nc_int32_t	sno;$/;"	m	struct:__anon15	file:
sort_by_holdtime	../netcache/util.c	/^sort_by_holdtime(const void *a, const void *b)$/;"	f	file:
source	../netcache/util.c	/^	char		*source;$/;"	m	struct:__anon15	file:
st_atime	../include/ncapi.h	/^	nc_time_t			st_atime;$/;"	m	struct:nc_stat
st_atime	../include/ncapi.h	52;"	d
st_blksize	../include/ncapi.h	/^	nc_int32_t			st_blksize;$/;"	m	struct:nc_stat
st_blocks	../include/ncapi.h	/^	nc_int32_t			st_blocks;$/;"	m	struct:nc_stat
st_cached	../include/ncapi.h	109;"	d
st_chunked	../include/ncapi.h	107;"	d
st_cookie	../include/ncapi.h	106;"	d
st_created	../include/ncapi.h	127;"	d
st_ctime	../include/ncapi.h	/^	nc_time_t			st_ctime; \/*객체가 생성된 시간,초*\/$/;"	m	struct:nc_stat
st_ctime	../include/ncapi.h	53;"	d
st_ctime	../test/driver_test.c	1014;"	d	file:
st_ctime	../test/driver_test.c	1186;"	d	file:
st_ctime	../test/driver_test.c	1363;"	d	file:
st_ctime	../test/driver_test.c	851;"	d	file:
st_devid	../include/ncapi.h	/^	nc_devid_t			st_devid; 			\/* devid indicates etag when http_driver bound *\/$/;"	m	struct:nc_stat
st_doc	../include/ncapi.h	124;"	d
st_frio_inprogress	../include/ncapi.h	118;"	d
st_gid	../include/ncapi.h	/^	nc_gid_t			st_gid;$/;"	m	struct:nc_stat
st_ifon	../include/ncapi.h	/^	nc_uint32_t					st_ifon:1;$/;"	m	struct:nc_stat
st_immutable	../include/ncapi.h	99;"	d
st_ino	../include/ncapi.h	/^	nc_int32_t			st_ino;$/;"	m	struct:nc_stat
st_isolated	../include/ncapi.h	123;"	d
st_loaded	../include/ncapi.h	126;"	d
st_memres	../include/ncapi.h	128;"	d
st_mode	../include/ncapi.h	/^	nc_uint32_t			st_mode;$/;"	m	struct:nc_stat
st_mtime	../include/ncapi.h	/^	nc_time_t			st_mtime; \/* 객체가 변경된 시간,초 *\/$/;"	m	struct:nc_stat
st_mtime	../include/ncapi.h	54;"	d
st_mtime	../test/driver_test.c	1013;"	d	file:
st_mtime	../test/driver_test.c	1185;"	d	file:
st_mtime	../test/driver_test.c	1362;"	d	file:
st_mtime	../test/driver_test.c	166;"	d	file:
st_mtime	../test/driver_test.c	850;"	d	file:
st_mustexpire	../include/ncapi.h	136;"	d
st_mustreval	../include/ncapi.h	97;"	d
st_needoverwrite	../include/ncapi.h	117;"	d
st_nocache	../include/ncapi.h	95;"	d
st_nostore	../include/ncapi.h	100;"	d
st_noxform	../include/ncapi.h	101;"	d
st_occ	../include/ncapi.h	132;"	d
st_odoc	../include/ncapi.h	125;"	d
st_ondisk	../include/ncapi.h	133;"	d
st_onlyifcached	../include/ncapi.h	96;"	d
st_onmdb	../include/ncapi.h	122;"	d
st_originchanged	../include/ncapi.h	/^	nc_uint32_t					st_originchanged:1;$/;"	m	struct:nc_stat
st_origincode	../include/ncapi.h	/^	nc_int16_t  				st_origincode; 		\/* 원본 코드 *\/$/;"	m	struct:nc_stat
st_preservecase	../include/ncapi.h	114;"	d
st_private	../include/ncapi.h	94;"	d
st_property	../include/ncapi.h	/^	nc_xtra_options_t 			*st_property; 		\/* 해당 리스트는 값 (key, value)가 있을 때 사용됨 *\/$/;"	m	struct:nc_stat
st_pseudoprop	../include/ncapi.h	134;"	d
st_public	../include/ncapi.h	93;"	d
st_pxyreval	../include/ncapi.h	98;"	d
st_rangeable	../include/ncapi.h	105;"	d
st_refreshstat	../include/ncapi.h	129;"	d
st_setbyexpires	../include/ncapi.h	137;"	d
st_size	../include/ncapi.h	/^	nc_size_t			st_size;$/;"	m	struct:nc_stat
st_sizedecled	../include/ncapi.h	111;"	d
st_sizeknown	../include/ncapi.h	110;"	d
st_staled	../include/ncapi.h	135;"	d
st_stat	../include/ncapi.h	119;"	d
st_stathit	../include/ncapi.h	/^	nc_uint8_t 					st_stathit; 		\/* nc_hit_status_t의 값 중 PROPERTY관련 hit정보 *\/$/;"	m	struct:nc_stat
st_swappedin	../include/ncapi.h	138;"	d
st_template	../include/ncapi.h	112;"	d
st_trace	../include/ncapi.h	130;"	d
st_uid	../include/ncapi.h	/^	nc_uid_t			st_uid;$/;"	m	struct:nc_stat
st_upgradable	../include/ncapi.h	116;"	d
st_upgraded	../include/ncapi.h	115;"	d
st_validuuid	../include/ncapi.h	120;"	d
st_vary	../include/ncapi.h	108;"	d
st_victim	../include/ncapi.h	121;"	d
st_viewcount	../include/ncapi.h	/^ 	nc_uint32_t 			st_viewcount; 		\/* 캐싱된 이후 open 횟수*\/$/;"	m	struct:nc_stat
st_viewindex	../include/ncapi.h	/^ 	nc_int32_t 				st_viewindex; 		\/* caching의 hotness 척도 (only on disk)*\/$/;"	m	struct:nc_stat
st_vtime	../include/ncapi.h	/^	nc_time_t			st_vtime; 			\/* 해당 캐시가 유효한 시간, expires, max-age등으로 설정되거나, default값으로 설정 *\/$/;"	m	struct:nc_stat
st_xfv	../include/ncapi.h	131;"	d
st_xtime	../include/ncapi.h	/^	nc_time_t			st_xtime; 			\/* > 0:valid, 해당 속성이 삭제되는 시간 *\/$/;"	m	struct:nc_stat
staled	../include/netcache_types.h	/^				nc_uint64_t      	staled:1;			\/* 1: 원본 객체가 변경된 상태.캐싱된 inode 폐기 필요*\/$/;"	m	struct:__anon65::bitefields
staleonclose	../include/netcache.h	/^	nc_int8_t						staleonclose:1;		\/* NEW) 2021-2-22 by weon 1 stale처리 필요*\/$/;"	m	struct:tag_fc_inode_info
stalled	../include/netcache.h	/^			nc_uint32_t    			stalled:1;$/;"	m	struct:apc_open_context::__anon49::__anon50
start	../include/block.h	/^	perf_val_t				start;$/;"	m	struct:tag_blk_apc_read_info
start_routine	../test/gprof-helper.c	/^	void *(*start_routine) (void *);$/;"	m	struct:wrapper_s	file:
started	../include/netcache.h	/^	time_t	started;			\/* expiration starting time *\/$/;"	m	struct:tag_expire_info
stat	../include/block.h	/^  	ic_cache_state_t   	stat;$/;"	m	struct:tag_fc_blk
stat	../include/netcache.h	/^		nc_stat_t 			stat;	\/* filled from driver *\/$/;"	m	struct:apc_open_context::__anon51
stat	../netcache/fhops.c	/^	nc_stat_t			*stat;$/;"	m	struct:fio_open_sync_info	file:
stat_bytes_read	../netcache/cfs_apix.c	/^long long	stat_bytes_read = 0;$/;"	v
stat_dump	../netcache/util.c	/^stat_dump(char *buf, int len, nc_stat_t *stat)$/;"	f
stat_keyid	../include/netcache.h	/^	char 						*stat_keyid; \/* NULL이 아닌 경우 속성 캐시의 key값 *\/$/;"	m	struct:tag_nc_kv_list
state	../include/asio.h	/^	asio_state_t 		state;$/;"	m	struct:nc_asio_vector
state	../include/asio.h	/^	nc_uint8_t				state; 			\/* block schedule state *\/$/;"	m	struct:nc_asio_context
state	../include/cfs_driver.h	/^	int							state;$/;"	m	struct:nc_path_lock_tag
state	../include/cfs_driver.h	/^	nc_path_lock_state_t		state;$/;"	m	struct:nc_path_lock_tag
state	../include/lru.h	/^	nc_uint8_t 				state;$/;"	m	struct:__anon37
state	../include/netcache.h	/^	apc_open_state_t		state;$/;"	m	struct:apc_open_context
state	../netcache/diskcache.c	/^	int								state;	\/* DMS_INIT, DMS_BUILDING, DMS_CLEAN *\/$/;"	m	struct:tag_cachedir_state	file:
state	../netcache/mdb.c	/^	int 			state; \/* 0: idle or committed, 1: begin *\/$/;"	m	struct:tag_mdb_session	file:
statfs	../include/cfs_driver.h	/^	int								(*statfs)(struct cfs_origin_driver *drv, char *path, nc_statvfs_t  *s);$/;"	m	struct:cfs_origin_driver
statfs	../include/statfs.h	/^struct statfs {$/;"	s
statmode	../test/driver_test.c	/^int 			statmode = 0;$/;"	v
status	../include/ncapi.h	/^	int 				status; \/* 응답일 경우만 유의미한 값*\/$/;"	m	struct:__anon39
status	../include/ncapi.h	/^	nc_uint16_t		status; \/* 0: OFFLINE, 1:ONLINE *\/	$/;"	m	struct:nc_volume_stat
step	../netcache/volumeops.c	/^	nc_validation_step_t	step;$/;"	m	struct:tag_freshcheck_entry	file:
stmt	../netcache/mdb.c	/^	sqlite3_stmt	*stmt[MDB_MAX_STMTS];$/;"	m	struct:tag_mdb_session	file:
stopped	../include/netcache.h	/^	int 				stopped;$/;"	m	struct:tag_part_element
strdup	../netcache/heaptrack.c	/^strdup(const char *s)$/;"	f
stream	../include/netcache.h	/^	struct tag_fc_stream_info 	*stream; \/* non-buffered writing용 *\/$/;"	m	struct:tag_nc_file_ref	typeref:struct:tag_nc_file_ref::tag_fc_stream_info
strerror_r	../netcache/util.c	/^strerror_r(int eno, char *buf, int len)$/;"	f
strndup	../netcache/heaptrack.c	/^strndup(const char *s, size_t n)$/;"	f
strval	../test/test_kv.c	/^		char 	strval[128];$/;"	m	union:tag_option::__anon18	file:
strval	../test/test_path.c	/^		char 	strval[128];$/;"	m	union:tag_option::__anon19	file:
sum	../include/util.h	/^	double 	sum;$/;"	m	struct:__anon68
sum	../netcache/clfu.c	/^	double		sum;$/;"	m	struct:tag_bl_t	file:
sum	../netcache/heaptrack.c	/^	long long	sum;		\/* total allocation in bytes *\/$/;"	m	struct:leak_info	file:
sum	../netcache/util.c	/^	double		sum;$/;"	m	struct:tag_mls_t	file:
sum	../netcache/util.c	/^        nc_uint32_t     	sum;$/;"	m	struct:tag_alloc_info	file:
sum	../netcache/volumeops.c	/^	double		sum;$/;"	m	struct:tag_pls_t	file:
sval	../test/test_kv.c	35;"	d	file:
sval	../test/test_path.c	38;"	d	file:
swap	../netcache/crc32.c	/^static inline uint32_t swap(uint32_t x)$/;"	f	file:
symbol	../include/trace.h	/^	char			symbol[64]; \/* for example DEBUG, TRACE, INFO,..etc *\/$/;"	m	struct:__anon67
symbol	../netcache/backtrace.c	/^	asymbol ** symbol;$/;"	m	struct:bfd_ctx	file:
symbol	../netcache/backtrace.c	/^	asymbol **symbol;$/;"	m	struct:find_info	file:
symbol	../netcache/heaptrack.c	/^	char		*symbol;	\/* backtraced caller address info *\/$/;"	m	struct:leak_info	file:
symbol	../netcache/heaptrack.c	/^	char*				symbol; 	\/* caller's function name? *\/$/;"	m	struct:__anon7	file:
sys_alert_cnt	../include/log.h	/^    int    sys_alert_cnt;  \/\/ count syslog call$/;"	m	struct:_log_handle
sys_gettickcount	../netcache/util.c	/^sys_gettickcount()$/;"	f
sysconf	../netcache/util.c	1662;"	d	file:
sz	../netcache/backtrace.c	/^	size_t sz;$/;"	m	struct:output_buffer	file:
t_activity_monitor	../include/cfs_driver.h	/^	bt_timer_t						t_activity_monitor;$/;"	m	struct:nc_volume_context
t_begin	../include/asio.h	/^	perf_val_t			t_begin;$/;"	m	struct:nc_asio_vector
t_begin	../include/block.h	/^	perf_val_t		t_begin; \/* allocation time *\/$/;"	m	struct:tag_fc_blk
t_checkpoint_timer	../netcache/mdb.c	/^	bt_timer_t 			t_checkpoint_timer; $/;"	m	struct:tag_nc_mdb_handle	file:
t_defer	../include/netcache.h	/^	bt_timer_t						t_defer;			\/* deferring timer *\/$/;"	m	struct:tag_fc_inode_info
t_e	../include/cfs_driver.h	/^	perf_val_t					t_e;$/;"	m	struct:nc_path_lock_tag
t_e	../include/cyclic_lfu.h	/^	perf_val_t		t_e;$/;"	m	struct:__anon32
t_e	../netcache/disk_io_ops.c	/^	perf_val_t		t_e;$/;"	m	struct:nc_iocb	file:
t_end	../include/asio.h	/^	perf_val_t			t_end;$/;"	m	struct:nc_asio_vector
t_end	../include/block.h	/^	perf_val_t 		t_end;   \/* filled up time *\/$/;"	m	struct:tag_fc_blk
t_hang	../include/netcache.h	/^	bt_timer_t				t_hang;$/;"	m	struct:apc_open_context
t_hang	../include/netcache.h	/^	bt_timer_t				t_hang;$/;"	m	struct:apc_read_context
t_origin	../include/netcache.h	/^	bt_timer_t						t_origin;			\/* origin expiration timer *\/$/;"	m	struct:tag_fc_inode_info
t_read_timer	../include/block.h	/^	bt_timer_t				t_read_timer;$/;"	m	struct:tag_blk_apc_read_info
t_s	../include/cfs_driver.h	/^	perf_val_t					t_s;$/;"	m	struct:nc_path_lock_tag
t_s	../include/cyclic_lfu.h	/^	perf_val_t		t_s;$/;"	m	struct:__anon32
t_s	../netcache/disk_io_ops.c	/^	perf_val_t		t_s;$/;"	m	struct:nc_iocb	file:
t_schedule	../include/asio.h	/^	perf_val_t			t_schedule;$/;"	m	struct:nc_asio_vector
t_scheduled	../netcache/diskcache.c	/^__thread int	t_scheduled = 0;$/;"	v
t_submit	../include/block.h	/^	perf_val_t		t_submit; \/* submit time *\/$/;"	m	struct:tag_fc_blk
t_trace_callback	../include/trace.h	/^typedef void (*t_trace_callback)(nc_uint32_t mask, char *format, va_list vap);$/;"	t
t_xlock_bg	../netcache/mdb.c	/^	nc_time_t 			t_xlock_bg; \/* write가 lock획득한 시점 *\/$/;"	m	struct:mdb_rwlock	file:
tag_PL_oi	../netcache/volumeops.c	/^struct tag_PL_oi {$/;"	s	file:
tag_alloc_info	../netcache/util.c	/^struct  tag_alloc_info {$/;"	s	file:
tag_apc_overlapped	../include/netcache_types.h	/^typedef struct tag_apc_overlapped {$/;"	s
tag_asio_debug	../include/asio.h	/^typedef struct tag_asio_debug {$/;"	s
tag_bci_stat	../include/netcache.h	/^typedef struct tag_bci_stat {$/;"	s
tag_bcm_info	../netcache/bc_mgr.c	/^struct tag_bcm_info {$/;"	s	file:
tag_bl_t	../netcache/clfu.c	/^struct tag_bl_t {$/;"	s	file:
tag_blk_apc_read_info	../include/block.h	/^struct tag_blk_apc_read_info {$/;"	s
tag_blk_stream	../include/util.h	/^typedef struct tag_blk_stream {$/;"	s
tag_cachedir_state	../netcache/diskcache.c	/^typedef struct tag_cachedir_state {$/;"	s	file:
tag_close_context	../include/netcache.h	/^typedef struct tag_close_context  {$/;"	s
tag_dio_done_context	../include/netcache.h	/^typedef struct tag_dio_done_context {$/;"	s
tag_driver_fi	../netcache/cfs_driver.c	/^struct tag_driver_fi {$/;"	s	file:
tag_expire_info	../include/netcache.h	/^typedef struct tag_expire_info {$/;"	s
tag_fc_blk	../include/block.h	/^struct tag_fc_blk {$/;"	s
tag_fc_common_header_info	../include/netcache.h	/^typedef struct tag_fc_common_header_info {$/;"	s
tag_fc_header_info_v30	../include/netcache.h	/^struct tag_fc_header_info_v30 {$/;"	s
tag_fc_inode_info	../include/netcache.h	/^typedef struct tag_fc_inode_info {$/;"	s
tag_fc_old_header_info	../util/nc_convert.c	/^typedef struct tag_fc_old_header_info {$/;"	s	file:
tag_fc_stream_info	../include/netcache.h	/^typedef struct tag_fc_stream_info {$/;"	s
tag_fork_run_info	../netcache/wb_timer.c	/^struct tag_fork_run_info {$/;"	s	file:
tag_freshcheck_entry	../netcache/volumeops.c	/^typedef struct tag_freshcheck_entry {$/;"	s	file:
tag_glru	../include/glru.h	/^typedef struct tag_glru {$/;"	s
tag_glru_node	../include/glru.h	/^struct tag_glru_node {$/;"	s
tag_glru_operations	../include/glru.h	/^typedef struct tag_glru_operations {$/;"	s
tag_link_list	../include/util.h	/^typedef struct tag_link_list {$/;"	s
tag_link_list	../test/sorteddll.c	/^typedef struct tag_link_list {$/;"	s	file:
tag_link_node	../include/netcache_types.h	/^typedef struct tag_link_node {$/;"	s
tag_link_node	../test/sorteddll.c	/^typedef struct tag_link_node {$/;"	s	file:
tag_lru_root	../include/lru.h	/^typedef struct tag_lru_root {$/;"	s
tag_mdb_session	../netcache/mdb.c	/^typedef struct tag_mdb_session {$/;"	s	file:
tag_memmgr_heap	../include/netcache.h	/^typedef struct tag_memmgr_heap {$/;"	s
tag_mls_t	../netcache/util.c	/^struct tag_mls_t {$/;"	s	file:
tag_nc_file_ref	../include/fio.h	/^typedef struct tag_nc_file_ref {$/;"	s
tag_nc_file_ref	../include/netcache.h	/^typedef struct tag_nc_file_ref {$/;"	s
tag_nc_kv_list	../include/netcache.h	/^typedef struct tag_nc_kv_list {$/;"	s
tag_nc_kv_node	../include/netcache.h	/^typedef struct tag_nc_kv_node {$/;"	s
tag_nc_mdb_handle	../netcache/mdb.c	/^struct tag_nc_mdb_handle {$/;"	s	file:
tag_nc_mdb_inode_info	../include/netcache.h	/^typedef struct tag_nc_mdb_inode_info {$/;"	s
tag_nc_open_cc	../include/cfs_driver.h	/^struct tag_nc_open_cc {$/;"	s
tag_nc_open_cc_quark	../include/cfs_driver.h	/^typedef struct tag_nc_open_cc_quark {$/;"	s
tag_nc_ringbuffer	../netcache/ringbuffer.c	/^struct tag_nc_ringbuffer {$/;"	s	file:
tag_nio_done_context	../include/netcache.h	/^typedef struct tag_nio_done_context {$/;"	s
tag_opaque	../include/netcache.h	/^typedef struct tag_opaque {$/;"	s
tag_option	../test/test_kv.c	/^struct tag_option {$/;"	s	file:
tag_option	../test/test_path.c	/^struct tag_option {$/;"	s	file:
tag_origin_info	../include/ncapi.h	/^struct tag_origin_info {$/;"	s
tag_page_ctrl	../include/block.h	/^typedef struct tag_page_ctrl {$/;"	s
tag_part_element	../include/netcache.h	/^typedef struct tag_part_element {$/;"	s
tag_part_table_info	../netcache/part_mgr.c	/^typedef struct tag_part_table_info {$/;"	s	file:
tag_pls_t	../netcache/volumeops.c	/^struct tag_pls_t {$/;"	s	file:
tag_purge_volume_context	../netcache/volumeops.c	/^struct tag_purge_volume_context {$/;"	s	file:
tag_query_inode	../netcache/part_mgr.c	/^typedef struct tag_query_inode {$/;"	s	file:
tag_query_inode_inode_quark	../netcache/part_mgr.c	/^typedef struct tag_query_inode_inode_quark {$/;"	s	file:
tag_shash_entry	../netcache/heaptrack.c	/^typedef struct tag_shash_entry {$/;"	s	file:
tag_statvfs	../include/netcache_types.h	/^typedef struct tag_statvfs {$/;"	s
tag_threadpool	../netcache/threadpool.c	/^typedef struct tag_threadpool  {$/;"	s	file:
tag_volume_context_fi	../netcache/volumeops.c	/^struct tag_volume_context_fi {$/;"	s	file:
tag_vstring	../include/netcache.h	/^typedef struct tag_vstring {$/;"	s
tag_vstring	../test/vstr_test.c	/^typedef struct tag_vstring {$/;"	s	file:
tail	../include/util.h	/^	struct tag_link_node	*tail;$/;"	m	struct:tag_link_list	typeref:struct:tag_link_list::tag_link_node
tail	../netcache/ringbuffer.c	/^	char 			*tail;$/;"	m	struct:tag_nc_ringbuffer	file:
tail	../test/sorteddll.c	/^	struct tag_link_node	*tail;$/;"	m	struct:tag_link_list	typeref:struct:tag_link_list::tag_link_node	file:
temporal	../util/nc_convert.c	/^	unsigned short    temporal;$/;"	m	struct:tag_fc_old_header_info	file:
terminating	../netcache/threadpool.c	/^	int 				terminating;$/;"	m	struct:tag_threadpool	file:
test_bit	../include/non-atomic.h	/^static inline int test_bit(int nr, const volatile unsigned long *addr)$/;"	f
tfile	../test/driver_test.c	/^char 			tfile[100000][256];$/;"	v
thread_param_t	../util/nc_checkfs.c	/^} thread_param_t;$/;"	t	typeref:struct:__anon20	file:
threadpool_t	../netcache/threadpool.c	/^} threadpool_t;$/;"	t	typeref:struct:tag_threadpool	file:
tid	../include/block.h	/^	nc_uint32_t		tid;$/;"	m	struct:tag_fc_blk
tid	../netcache/disk_io_ops.c	/^	pthread_t 	tid;$/;"	m	struct:io_thread_info	file:
tid	../netcache/diskcache.c	/^	pthread_t						tid;$/;"	m	struct:tag_cachedir_state	file:
tid	../netcache/volumeops.c	/^	pthread_t		tid;$/;"	m	struct:__anon16	file:
time2dp	../netcache/util.c	/^time2dp(char *buf, int buflen, nc_time_t secs)$/;"	f
time_after_eq	../include/wb_timer.h	46;"	d
time_before_eq	../include/wb_timer.h	50;"	d
timeout	../include/bt_timer.h	/^struct timeout {$/;"	s
timer	../include/wb_timer.h	/^	void 	(*timer)(void *);$/;"	m	struct:__anon70
timer_check_statfs	../netcache/diskcache.c	/^	bt_timer_t						timer_check_statfs;$/;"	m	struct:tag_cachedir_state	file:
timer_fork_run	../netcache/wb_timer.c	/^timer_fork_run( void *tphandle, void (*function) (void *), void *data)$/;"	f	file:
timer_inode_spinner	../netcache/diskcache.c	/^	bt_timer_t						timer_inode_spinner;$/;"	m	struct:tag_cachedir_state	file:
timer_jiffies	../netcache/wb_timer.c	/^	unsigned long long timer_jiffies;$/;"	m	struct:tvec_t_base_s	file:
timer_list	../include/wb_timer.h	/^struct timer_list {$/;"	s
timer_load_monitor	../netcache/part_mgr.c	/^	bt_timer_t			timer_load_monitor;$/;"	m	struct:tag_part_table_info	file:
timer_pending	../include/wb_timer.h	/^static inline int timer_pending(const struct timer_list *timer)$/;"	f
timer_run_wrapper	../netcache/wb_timer.c	/^timer_run_wrapper(void *v)$/;"	f	file:
timer_scheduler_thread	../netcache/cfs_apix.c	/^void *timer_scheduler_thread(void *d)$/;"	f
timerwheels	../include/bt_timer.h	/^	bt_timerwheel_t			*timerwheels;$/;"	m	struct:timeout
timerwheels	../netcache/bt_timer.c	/^struct timerwheels {$/;"	s	file:
tlc_queue_info_t	../include/tlc_queue.h	/^} tlc_queue_info_t;$/;"	t	typeref:struct:tlcqueue
tlc_queue_t	../include/tlc_queue.h	/^typedef  tlc_queue_info_t *tlc_queue_t;$/;"	t
tlcq_dequeue	../netcache/tlc_queue.c	/^void * tlcq_dequeue(tlc_queue_t q, int msec)$/;"	f
tlcq_dequeue_batch	../netcache/tlc_queue.c	/^tlcq_dequeue_batch(tlc_queue_t q, void *va[], int array_len, int msec)$/;"	f
tlcq_destroy	../netcache/tlc_queue.c	/^tlcq_destroy(tlc_queue_t q)$/;"	f
tlcq_enqueue	../netcache/tlc_queue.c	/^int tlcq_enqueue(tlc_queue_t q, void *data)$/;"	f
tlcq_init	../netcache/tlc_queue.c	/^tlc_queue_t tlcq_init(int waitable)$/;"	f
tlcq_init_with_lock	../netcache/tlc_queue.c	/^tlc_queue_t tlcq_init_with_lock(int waitable, pthread_mutex_t *lock)$/;"	f
tlcq_length	../netcache/tlc_queue.c	/^tlcq_length(tlc_queue_t q)$/;"	f
tlcqueue	../include/tlc_queue.h	/^typedef struct tlcqueue {$/;"	s
tm_list_add	../include/bt_tmlist.h	/^static inline void tm_list_add(struct list_head *newe, struct list_head *head)$/;"	f
tm_list_add_tail	../include/bt_tmlist.h	/^static inline void tm_list_add_tail(struct list_head *newe, struct list_head *head)$/;"	f
tm_list_del	../include/bt_tmlist.h	/^static inline void tm_list_del(struct list_head *entry)$/;"	f
tm_list_del_init	../include/bt_tmlist.h	/^static inline void tm_list_del_init(struct list_head *entry)$/;"	f
tm_list_del_rcu	../include/bt_tmlist.h	/^static inline void tm_list_del_rcu(struct list_head *entry)$/;"	f
tm_list_empty	../include/bt_tmlist.h	/^static inline int tm_list_empty(const struct list_head *head)$/;"	f
tm_list_empty_careful	../include/bt_tmlist.h	/^static inline int tm_list_empty_careful(const struct list_head *head)$/;"	f
tm_list_entry	../include/bt_tmlist.h	316;"	d
tm_list_move	../include/bt_tmlist.h	/^static inline void tm_list_move(struct list_head *list, struct list_head *head)$/;"	f
tm_list_move_tail	../include/bt_tmlist.h	/^static inline void tm_list_move_tail(struct list_head *list, struct list_head *head)$/;"	f
tm_list_splice	../include/bt_tmlist.h	/^static inline void tm_list_splice(struct list_head *list, struct list_head *head)$/;"	f
tm_list_splice_init	../include/bt_tmlist.h	/^static inline void tm_list_splice_init(struct list_head *list, struct list_head *head)$/;"	f
to_ncread	../include/cfs_driver.h	/^	int								to_ncread;$/;"	m	struct:nc_volume_context
today_cnt	../include/log.h	/^    int    today_cnt;$/;"	m	struct:_log_handle
tolowerz	../netcache/util.c	/^tolowerz(char *istr)$/;"	f
total	../include/cyclic_lfu.h	/^	int				total;$/;"	m	struct:__anon32
total	../include/ncapi.h	/^	nc_int32_t 		total;$/;"	m	struct:__anon42
total	../netcache/bc_mgr.c	/^	int		total; \/*inuse+idle*\/$/;"	m	struct:bcm_stat	file:
total	../rwtest/rwtest.c	/^	int					total;$/;"	m	struct:nc_rw_lock	file:
totalhit	../include/netcache.h	/^	nc_uint64_t 					totalhit; 		\/* # of block io *\/$/;"	m	struct:tag_fc_inode_info
totalmisshit	../include/netcache.h	/^	nc_uint64_t 					totalmisshit; 		\/* # of block loaded but not used *\/$/;"	m	struct:tag_fc_inode_info
totread	../netcache/ringbuffer.c	/^	nc_int32_t		totread;$/;"	m	struct:tag_nc_ringbuffer	file:
totwrite	../netcache/ringbuffer.c	/^	nc_int32_t		totwrite;$/;"	m	struct:tag_nc_ringbuffer	file:
tp_check_busy_nq	../netcache/threadpool.c	/^tp_check_busy_nq(tp_handle_t handle)$/;"	f
tp_data_t	../include/netcache_types.h	/^typedef void * tp_data_t;$/;"	t
tp_epilog_t	../include/threadpool.h	/^typedef void (*tp_epilog_t)(void *p);$/;"	t
tp_fetch	../netcache/threadpool.c	/^tp_fetch(tp_handle_t handle)$/;"	f
tp_get_configured	../netcache/threadpool.c	/^int tp_get_configured( tp_handle_t handle )$/;"	f
tp_get_workers	../netcache/threadpool.c	/^tp_get_workers(tp_handle_t handle)$/;"	f
tp_handle_t	../include/threadpool.h	/^typedef struct tag_threadpool * tp_handle_t;$/;"	t	typeref:struct:tag_threadpool
tp_init	../netcache/threadpool.c	/^tp_init(const char *name, int mint, int maxt, tp_job_handler_t proc, tp_prolog_t prolog_proc, tp_epilog_t epilog_proc)$/;"	f
tp_init_nq	../netcache/threadpool.c	/^tp_init_nq(const char *name, int mint, int maxt, tp_job_handler_t proc, tp_isidle_t isidle, tp_prolog_t prolog_proc, tp_epilog_t epilog_proc, void *cxt, int needq)$/;"	f
tp_isidle_t	../include/threadpool.h	/^typedef int (*tp_isidle_t)(void *cddata, void *tcb);$/;"	t
tp_job_handler_t	../include/threadpool.h	/^typedef int (*tp_job_handler_t)(void *data, void *tcb);$/;"	t
tp_length	../netcache/threadpool.c	/^tp_length(tp_handle_t handle)$/;"	f
tp_lock	../netcache/threadpool.c	/^tp_lock(tp_handle_t handle)$/;"	f
tp_prolog_t	../include/threadpool.h	/^typedef void (*tp_prolog_t)(void *p);$/;"	t
tp_set_busy	../netcache/threadpool.c	/^tp_set_busy(tp_handle_t h, int busy)$/;"	f
tp_start	../netcache/threadpool.c	/^tp_start(tp_handle_t handle)$/;"	f
tp_start_worker	../netcache/threadpool.c	/^tp_start_worker(tp_handle_t handle)$/;"	f
tp_stop	../netcache/threadpool.c	/^tp_stop(tp_handle_t handle)$/;"	f
tp_stop_handler_t	../include/threadpool.h	/^typedef void (*tp_stop_handler_t)(void);$/;"	t
tp_stop_signalled	../netcache/threadpool.c	/^tp_stop_signalled(tp_handle_t handle)$/;"	f
tp_submit	../netcache/threadpool.c	/^tp_submit(tp_handle_t handle, void *data)$/;"	f
tp_worker	../netcache/threadpool.c	/^tp_worker(void *d)$/;"	f
tp_worker_nq	../netcache/threadpool.c	/^tp_worker_nq(void *d)$/;"	f	file:
tphandle	../include/bt_timer.h	/^	void					*tphandle;$/;"	m	struct:timeout
tphandle	../include/wb_timer.h	/^	void 				*tphandle;$/;"	m	struct:timer_list
tqe	../include/bt_timer.h	/^	TAILQ_ENTRY(timeout)	tqe;$/;"	m	struct:timeout
trace	../include/cfs_driver.h	/^	nc_uint32_t						trace; $/;"	m	struct:cfs_origin_driver
trace	../netcache/heaptrack.c	/^	char				trace;$/;"	m	struct:__anon7	file:
trace	../netcache/trace.c	/^trace(nc_uint32_t level, char *fmt, ...)$/;"	f
trace_f	../netcache/trace.c	/^trace_f(nc_uint32_t level, const char *func, char *fmt, ...)$/;"	f
trace_symbol_t	../include/trace.h	/^} trace_symbol_t;$/;"	t	typeref:struct:__anon67
traceflag	../include/netcache.h	/^  	nc_int32_t						traceflag;  		\/* NEW)2020-2-12 by weon, inode추적*\/$/;"	m	struct:tag_fc_inode_info
transfered	../include/netcache.h	/^	size_t				transfered;$/;"	m	struct:tag_dio_done_context
transfered	../include/netcache.h	/^	size_t				transfered;$/;"	m	struct:tag_nio_done_context
trc_begin	../netcache/trace.c	/^void PUBLIC_IF trc_begin(char *pref)$/;"	f
trc_beginx	../netcache/trace.c	/^void PUBLIC_IF trc_beginx(char *pref, char *fmt, ...)$/;"	f
trc_depth	../netcache/trace.c	/^trc_depth(nc_uint32_t x)$/;"	f
trc_dump_tid	../netcache/trace.c	/^trc_dump_tid(pthread_t *tid, char *buf)$/;"	f
trc_end	../netcache/trace.c	/^void PUBLIC_IF trc_end()$/;"	f
trc_end	../netcache/trace.c	/^void PUBLIC_IF trc_end(char *pref)$/;"	f
trc_endx	../netcache/trace.c	/^void trc_endx( char *fmt, ...)$/;"	f
trc_fd	../netcache/trace.c	/^trc_fd()$/;"	f
trc_format	../netcache/trace.c	/^trc_format(char *io_str, int iostrlen, char *fmt, va_list ap)$/;"	f
trc_hex	../netcache/trace.c	/^char *trc_hex(char *buf, char *toenc, int len)$/;"	f
trc_is_on	../netcache/trace.c	/^trc_is_on(nc_uint32_t x)$/;"	f
trc_log_handle	../netcache/trace.c	/^void trc_log_handle(LOG_HANDLE *plog) { g_trc_log = plog; }$/;"	f
trc_lookup_symbol	../netcache/trace.c	/^trc_lookup_symbol(nc_uint32_t level)$/;"	f
trc_redirect_file	../netcache/trace.c	/^void trc_redirect_file(FILE *f)$/;"	f
trc_redirect_output	../netcache/trace.c	/^void trc_redirect_output(t_trace_callback logger, trace_symbol_t *symbols, int symbolcount)$/;"	f
trc_set_mask	../netcache/trace.c	/^trc_set_mask(char *str)$/;"	f
trc_syslog_redirect	../netcache/trace.c	/^trc_syslog_redirect(nc_uint32_t level, char *fmt, va_list ap)$/;"	f
trc_thread_self	../netcache/trace.c	/^trc_thread_self()$/;"	f
trim_string	../netcache/util.c	/^trim_string(char *str)$/;"	f
truncate	../include/cfs_driver.h	/^	int 							(*truncate)(struct cfs_origin_driver *drv, char *path, nc_size_t len);$/;"	m	struct:cfs_origin_driver
ts	../netcache/mdb.c	/^  struct timespec ts;$/;"	m	struct:UnlockNotification	typeref:struct:UnlockNotification::timespec	file:
tt_pool	../netcache/bt_timer.c	/^	tp_handle_t			tt_pool;$/;"	m	struct:timerwheels	file:
tv1	../netcache/wb_timer.c	/^	tvec_root_t tv1;$/;"	m	struct:tvec_t_base_s	file:
tv2	../netcache/wb_timer.c	/^	tvec_t tv2;$/;"	m	struct:tvec_t_base_s	file:
tv3	../netcache/wb_timer.c	/^	tvec_t tv3;$/;"	m	struct:tvec_t_base_s	file:
tv4	../netcache/wb_timer.c	/^	tvec_t tv4;$/;"	m	struct:tvec_t_base_s	file:
tv5	../netcache/wb_timer.c	/^	tvec_t tv5;$/;"	m	struct:tvec_t_base_s	file:
tv_nsec	../include/netcache_types.h	/^        long 		tv_nsec;$/;"	m	struct:nc_timespec
tv_sec	../include/netcache_types.h	/^        nc_time_t 	tv_sec;$/;"	m	struct:nc_timespec
tvec_base_t	../netcache/wb_timer.c	/^typedef struct tvec_t_base_s tvec_base_t;$/;"	t	typeref:struct:tvec_t_base_s	file:
tvec_root_s	../netcache/wb_timer.c	/^typedef struct tvec_root_s {$/;"	s	file:
tvec_root_t	../netcache/wb_timer.c	/^} tvec_root_t;$/;"	t	typeref:struct:tvec_root_s	file:
tvec_s	../netcache/wb_timer.c	/^typedef struct tvec_s {$/;"	s	file:
tvec_t	../netcache/wb_timer.c	/^} tvec_t;$/;"	t	typeref:struct:tvec_s	file:
tvec_t_base_s	../netcache/wb_timer.c	/^struct tvec_t_base_s {$/;"	s	file:
tw_now_msec	../netcache/bt_timer.c	/^tw_now_msec()$/;"	f
tw_scalar_t	../netcache/bt_timer.c	/^typedef uint64_t	tw_scalar_t;$/;"	t	file:
tw_timeout_rem	../netcache/bt_timer.c	/^tw_timeout_rem(struct timerwheels *base, struct timeout *to)$/;"	f	file:
tw_timeout_slot	../netcache/bt_timer.c	/^tw_timeout_slot(int wheel, bt_timeout_t expires)$/;"	f	file:
tw_timeout_wheel	../netcache/bt_timer.c	/^tw_timeout_wheel(bt_timeout_t tov)$/;"	f	file:
two	../netcache/crc32.c	206;"	d	file:
txno	../include/netcache.h	/^	nc_int64_t	txno;$/;"	m	struct:__anon43
txno	../netcache/mdb.c	/^	mdb_tx_info_t		txno;$/;"	m	struct:tag_nc_mdb_handle	file:
txno_done	../netcache/mdb.c	/^	mdb_tx_info_t		txno_done;$/;"	m	struct:tag_nc_mdb_handle	file:
type	../include/asio.h	/^	nc_apcop_t				type;$/;"	m	struct:__anon23
type	../include/asio.h	/^	nc_apcop_t 			type; 				\/* APC_RUN_VECTOR, APC_READ_VECTOR_DONE 두가지 값을 가짐 *\/$/;"	m	struct:nc_asio_vector
type	../include/netcache.h	/^	nc_apcop_t 				type; 			$/;"	m	struct:apc_open_context
type	../include/netcache.h	/^	nc_apcop_t 				type; 			$/;"	m	struct:apc_read_context
type	../include/netcache.h	/^	nc_apcop_t 			type; 			$/;"	m	struct:tag_close_context
type	../include/netcache.h	/^	nc_apcop_t 			type; 			$/;"	m	struct:tag_dio_done_context
type	../include/netcache.h	/^	nc_apcop_t 			type; 			$/;"	m	struct:tag_nio_done_context
type	../include/netcache.h	/^	nc_apcop_t 		type; 			$/;"	m	struct:apc_remove_context
type	../include/netcache_types.h	/^	apc_overlapped_type_t		type;$/;"	m	struct:tag_apc_overlapped
type	../netcache/cfs_apix.c	/^	int		type;$/;"	m	struct:__anon2	file:
type	../netcache/util.c	/^	char 	type[8];$/;"	m	struct:__anon14	file:
typecheck	../include/wb_timer.h	39;"	d
u	../include/cfs_driver.h	/^	} u;$/;"	m	struct:tag_nc_open_cc_quark	typeref:union:tag_nc_open_cc_quark::__anon29
u	../include/cyclic_lfu.h	/^	} u;$/;"	m	struct:__anon32	typeref:union:__anon32::__anon33
u	../include/netcache.h	/^	} u;$/;"	m	struct:apc_open_context	typeref:union:apc_open_context::__anon49
u	../include/netcache.h	/^	} u;$/;"	m	struct:tag_opaque	typeref:union:tag_opaque::__anon47
u	../include/netcache_types.h	/^	} u;$/;"	m	struct:tag_apc_overlapped	typeref:union:tag_apc_overlapped::__anon62
u	../include/netcache_types.h	/^	} u;$/;"	m	struct:tag_link_node	typeref:union:tag_link_node::__anon56
u	../test/test_kv.c	/^	} u;$/;"	m	struct:tag_option	typeref:union:tag_option::__anon18	file:
u	../test/test_path.c	/^	} u;$/;"	m	struct:tag_option	typeref:union:tag_option::__anon19	file:
u_	../include/block.h	/^	} u_;$/;"	m	struct:tag_fc_blk	typeref:union:tag_fc_blk::__anon25
u_CR_t	../include/lock.h	/^typedef struct __CRITICAL_SECTION *u_CR_t;$/;"	t	typeref:struct:__CRITICAL_SECTION
u_boolean_t	../include/hash.h	/^} u_boolean_t;$/;"	t	typeref:enum:__anon34
u_hash_destroy_func_t	../include/hash.h	/^typedef void 				(*u_hash_destroy_func_t)(void *);$/;"	t
u_hash_equal_func_cb_t	../include/hash.h	/^typedef u_boolean_t 		(*u_hash_equal_func_cb_t)(void *, void *, void *cb);$/;"	t
u_hash_equal_func_t	../include/hash.h	/^typedef u_boolean_t 		(*u_hash_equal_func_t)(void *, void *);$/;"	t
u_hash_func_cb_t	../include/hash.h	/^typedef unsigned long 		(*u_hash_func_cb_t)(void *, void *);$/;"	t
u_hash_func_t	../include/hash.h	/^typedef unsigned long 		(*u_hash_func_t)(void *);$/;"	t
u_hash_node	../netcache/hash.c	/^struct u_hash_node {$/;"	s	file:
u_hash_node_callback_t	../include/hash.h	/^typedef int 				(*u_hash_node_callback_t)(void *key, void *value, void *userdata);$/;"	t
u_hash_node_t	../netcache/hash.c	/^typedef struct u_hash_node	u_hash_node_t;$/;"	t	typeref:struct:u_hash_node	file:
u_hash_remove_callback_t	../include/hash.h	/^typedef u_boolean_t 		(*u_hash_remove_callback_t)(void *key, void *value, void *userdata);$/;"	t
u_hash_table	../netcache/hash.c	/^struct u_hash_table {$/;"	s	file:
u_hash_table_lock	../netcache/hash.c	/^static int u_hash_table_lock(struct u_hash_table *tbl, int bexcl)$/;"	f	file:
u_hash_table_t	../include/hash.h	/^typedef struct u_hash_table	u_hash_table_t;$/;"	t	typeref:struct:u_hash_table
u_hash_table_unlock	../netcache/hash.c	/^static int u_hash_table_unlock(struct u_hash_table *tbl)$/;"	f	file:
u_ht_direct_equal	../netcache/hash.c	/^u_ht_direct_equal(void *v1, void *v2)$/;"	f
u_ht_direct_equal_x	../netcache/hash.c	/^u_ht_direct_equal_x(void *v1, void *v2, void *ud)$/;"	f
u_ht_direct_hash	../netcache/hash.c	/^u_ht_direct_hash(void *v)$/;"	f
u_ht_direct_hash_x	../netcache/hash.c	/^u_ht_direct_hash_x(void *v, void *ud)$/;"	f
u_ht_foreach	../netcache/hash.c	/^u_ht_foreach(	u_hash_table_t *ht,$/;"	f
u_ht_insert	../netcache/hash.c	/^u_ht_insert(u_hash_table_t *ht, void *key, void *value, int replacable)$/;"	f
u_ht_insert2	../netcache/hash.c	/^u_ht_insert2(u_hash_table_t *ht, void *key, void *value, int replacable)$/;"	f
u_ht_insert2_dbg	../netcache/hash.c	/^u_ht_insert2_dbg(u_hash_table_t *ht, void *key, void *value, int replacable, const char *f, int l)$/;"	f
u_ht_insert_dbg	../netcache/hash.c	/^u_ht_insert_dbg(u_hash_table_t *ht, void *key, void *value, int replacable, const char *f, int l)$/;"	f
u_ht_lookup	../netcache/hash.c	/^u_ht_lookup(u_hash_table_t *ht, void *key)$/;"	f
u_ht_lookup_and_run	../netcache/hash.c	/^u_ht_lookup_and_run(u_hash_table_t *ht, void *key, void (*func)(void *v))$/;"	f
u_ht_lookup_extended	../netcache/hash.c	/^u_ht_lookup_extended(	u_hash_table_t *ht,$/;"	f
u_ht_lookup_node_internal	../netcache/hash.c	/^u_ht_lookup_node_internal(u_hash_table_t *ht, void *key)$/;"	f	file:
u_ht_node_free	../netcache/hash.c	/^u_ht_node_free(	u_hash_node_t *u_hash_node,$/;"	f	file:
u_ht_node_new	../netcache/hash.c	/^u_ht_node_new(void *key, void *value, int raw, int category)$/;"	f	file:
u_ht_node_new_dbg	../netcache/hash.c	/^u_ht_node_new_dbg(void *key, void *value, int raw, int category, const char *f, int l)$/;"	f	file:
u_ht_nodes_free	../netcache/hash.c	/^u_ht_nodes_free(u_hash_table_t *ht, $/;"	f	file:
u_ht_remove	../netcache/hash.c	/^u_ht_remove(u_hash_table_t *ht, void *key)$/;"	f
u_ht_remove_II	../netcache/hash.c	/^u_ht_remove_II(u_hash_table_t *ht, void *key)$/;"	f
u_ht_remove_foreach	../netcache/hash.c	/^u_ht_remove_foreach(	u_hash_table_t *ht, $/;"	f
u_ht_remove_or_steal_foreach_internal	../netcache/hash.c	/^u_ht_remove_or_steal_foreach_internal(u_hash_table_t *ht, $/;"	f	file:
u_ht_replace	../netcache/hash.c	/^u_ht_replace(	u_hash_table_t *ht,$/;"	f
u_ht_resize	../netcache/hash.c	/^u_ht_resize(u_hash_table_t *ht)$/;"	f	file:
u_ht_set_alloc_category	../netcache/hash.c	/^u_ht_set_alloc_category(u_hash_table_t *ht, int cat)$/;"	f
u_ht_size	../netcache/hash.c	/^u_ht_size(u_hash_table_t *ht)$/;"	f
u_ht_steal	../netcache/hash.c	/^u_ht_steal(u_hash_table_t *ht, void *key)$/;"	f
u_ht_steal_foreach	../netcache/hash.c	/^u_ht_steal_foreach(	u_hash_table_t *ht, $/;"	f
u_ht_table_debug	../netcache/hash.c	/^u_ht_table_debug(u_hash_table_t *ht, int onoff)$/;"	f
u_ht_table_free	../netcache/hash.c	/^u_ht_table_free(u_hash_table_t *ht)$/;"	f
u_ht_table_lock_mode	../netcache/hash.c	/^u_ht_table_lock_mode(u_hash_table_t *ht, u_boolean_t b)$/;"	f
u_ht_table_new	../netcache/hash.c	/^u_ht_table_new(u_hash_func_t proc_hash, u_hash_equal_func_t proc_key_equal, $/;"	f
u_ht_table_new_raw	../netcache/hash.c	/^u_ht_table_new_raw(u_hash_func_t proc_hash, u_hash_equal_func_t proc_key_equal, $/;"	f
u_ht_table_new_withlock	../netcache/hash.c	/^u_ht_table_new_withlock(pthread_mutex_t *lock, $/;"	f
u_ht_table_new_withlock_x	../netcache/hash.c	/^u_ht_table_new_withlock_x(	pthread_mutex_t *lock, $/;"	f
u_ht_table_new_withrwlock_x	../netcache/hash.c	/^u_ht_table_new_withrwlock_x(	pthread_rwlock_t *lock, $/;"	f
u_ht_table_new_x	../netcache/hash.c	/^u_ht_table_new_x(	void *cb, $/;"	f
u_rwl	../include/cyclic_lfu.h	73;"	d
u_uint32	../include/lock.h	/^typedef unsigned int	u_uint32;$/;"	t
u_xl	../include/cyclic_lfu.h	72;"	d
ub	../include/netcache.h	309;"	d
ub16	../include/netcache.h	312;"	d
ub32	../include/netcache.h	311;"	d
ub64	../include/netcache.h	310;"	d
ucallback	../include/netcache_types.h	/^		} ucallback;$/;"	m	union:tag_apc_overlapped::__anon62	typeref:struct:tag_apc_overlapped::__anon62::__anon63
ud	../include/netcache_types.h	/^			void 					*ud;$/;"	m	struct:tag_apc_overlapped::__anon62::__anon63
uevent	../include/netcache_types.h	/^		} uevent;$/;"	m	union:tag_apc_overlapped::__anon62	typeref:struct:tag_apc_overlapped::__anon62::__anon64
uid	../include/netcache.h	/^  	nc_uint32_t						uid; 				\/* unique id for tracing *\/$/;"	m	struct:tag_fc_inode_info
uint32_t	../netcache/crc32.c	/^typedef unsigned __int32 uint32_t;$/;"	t	file:
uint8_t	../netcache/crc32.c	/^typedef unsigned __int8 uint8_t;$/;"	t	file:
unbind_context	../include/cfs_driver.h	/^	int 							(*unbind_context)(struct cfs_origin_driver *drv, int ctx_type);$/;"	m	struct:cfs_origin_driver
unhex	../netcache/bitmap.c	249;"	d	file:
unitdump	../netcache/util.c	/^unitdump(char *buf, int buflen, long num)$/;"	f
unlikely	../include/util.h	130;"	d
unlikely	../include/util.h	136;"	d
unlink	../include/cfs_driver.h	/^	int								(*unlink)(struct cfs_origin_driver *drv, char *path, nc_xtra_options_t *req_option, nc_xtra_options_t **res);$/;"	m	struct:cfs_origin_driver
unload	../include/cfs_driver.h	/^	void 							(*unload)(void); \/* 드라이버 모듈 전체가 unload되기 전에 실행해야할 작업 호출 *\/$/;"	m	struct:cfs_origin_driver
unroll	../include/glru.h	/^	int 			(*unroll)(void *map, glru_node_t *node);$/;"	m	struct:tag_glru
unroll	../include/glru.h	/^	int 			(*unroll)(void *map, glru_node_t *node);$/;"	m	struct:tag_glru_operations
update_ml_stat	../netcache/util.c	/^update_ml_stat(mls_t *found, double msec)$/;"	f	file:
upgradable	../include/netcache_types.h	/^				nc_uint64_t      	upgradable:1;		\/* cold caching일 때만 해석 *\/$/;"	m	struct:__anon65::bitefields
upgraded	../include/netcache_types.h	/^				nc_uint64_t      	upgraded:1;			\/* cold caching일 때만 해석 *\/$/;"	m	struct:__anon65::bitefields
uptr	../include/netcache.h	313;"	d
url	../include/ncapi.h	/^	char 				*url;$/;"	m	struct:__anon39
user	../include/ncapi.h	/^	char 			user[NC_MAX_STRINGLEN];$/;"	m	struct:tag_origin_info
user_callback	../netcache/fhops.c	/^	nc_apc_open_callback_t 			user_callback; $/;"	m	struct:fio_open_sync_info	file:
user_data	../netcache/fhops.c	/^	void 							*user_data;$/;"	m	struct:fio_open_sync_info	file:
user_data_back	../netcache/fhops.c	/^	void 				*user_data_back; \/* 김현호 차장의 user_data corrupt주장에 대한 검증용 *\/$/;"	m	struct:fio_open_sync_info	file:
utimens	../include/cfs_driver.h	/^	int 							(*utimens)(struct cfs_origin_driver *drv, char *path, struct nc_timespec ts[]);$/;"	m	struct:cfs_origin_driver
uuid	../include/netcache.h	/^	uuid_t							uuid;				\/* disk캐싱 객체에 대해서만 uuid생성. 이 값을 이용해서 cache file명 생성*\/$/;"	m	struct:tag_fc_inode_info
uuid	../include/netcache.h	/^	uuid_t				uuid;$/;"	m	struct:tag_nc_mdb_inode_info
uuid	../include/netcache.h	/^	uuid_t 				uuid;$/;"	m	struct:purge_info
uuid	../include/netcache.h	/^  	uuid_t				uuid;$/;"	m	struct:tag_fc_header_info_v30
uuid	../netcache/diskcache.c	/^	uuid_t				uuid;$/;"	m	struct:__anon5	file:
uuid	../netcache/mdb.c	/^	uuid_t			uuid;$/;"	m	struct:mdb_inserti_tag	file:
uuid	../netcache/mdb.c	/^	uuid_t			uuid;$/;"	m	struct:mdb_remove_rowi_tag	file:
uuid	../netcache/mdb.c	/^	uuid_t			uuid;$/;"	m	struct:mdb_removei_tag	file:
uuid	../netcache/mdb.c	/^	uuid_t			uuid;$/;"	m	struct:mdb_update_rowi_tag	file:
uuid	../test/uuid_test.c	/^uuid_t		uuid;$/;"	v
uuid2string	../netcache/util.c	/^uuid2string(uuid_t uuid, char *buf, int l)$/;"	f
uuid_equal	../test/uuid_test.c	/^uuid_equal(void *a, void *b)$/;"	f	file:
uuid_generator	../test/uuid_test.c	/^uuid_generator(void *u)$/;"	f
uuid_hash	../test/uuid_test.c	/^uuid_hash(void *u)$/;"	f	file:
uuid_ht	../test/uuid_test.c	/^static u_hash_table_t *uuid_ht = NULL;$/;"	v	file:
uuid_t	../include/win_uuidwrap.h	/^typedef unsigned char uuid_t[UUID_B_LEN];$/;"	t
uuid_t	../include/win_uuidwrap.h	9;"	d
valid	../include/netcache.h	/^	int				valid;$/;"	m	struct:tag_part_element
valid	../netcache/part_mgr.c	/^	int 					valid;$/;"	m	struct:tag_query_inode_inode_quark	file:
valid_context	../include/cfs_driver.h	/^	int 							(*valid_context)(struct cfs_origin_driver *drv, nc_origin_session_t ctx, char *path, nc_off_t *off, nc_size_t *len);$/;"	m	struct:cfs_origin_driver
valid_time	../include/ncapi.h	/^	nc_time_t 	 		valid_time; 		\/* 캐시 만료시간 , UTC time*\/$/;"	m	struct:nc_object_info_tag
validuuid	../include/netcache_types.h	/^				nc_uint64_t 		validuuid:1;		\/* UUID 가  valid && caching-file 존재 *\/$/;"	m	struct:__anon65::bitefields
valsize	../test/test_kv.c	/^	int	valsize;$/;"	m	struct:tag_option	file:
valsize	../test/test_path.c	/^	int	valsize;$/;"	m	struct:tag_option	file:
value	../include/kv.h	/^	char 			*value;$/;"	m	struct:__anon36
value	../include/netcache.h	/^	char 			*value;$/;"	m	struct:tag_nc_kv_node
value	../netcache/hash.c	/^	void *			value;$/;"	m	struct:u_hash_node	file:
value	../test/list_test.c	/^	int					value;$/;"	m	struct:N	file:
value	../test/sorteddll.c	/^	int			value;$/;"	m	struct:__anon17	file:
vary	../include/ncapi.h	/^	nc_uint32_t 		vary:1;				\/* 객체가 vary 객체인 경우 1, 아니면 0 *\/$/;"	m	struct:nc_object_info_tag
vary	../include/netcache.h	/^			nc_uint32_t    			vary:1;			\/* URL should be vary *\/$/;"	m	struct:apc_open_context::__anon49::__anon50
vary	../include/netcache_types.h	/^			  	nc_uint64_t			vary:1;				\/* 대상 객체가 vary 객체임 *\/$/;"	m	struct:__anon65::bitefields
vavg	../netcache/clfu.c	/^	double		vavg;$/;"	m	struct:tag_bl_t	file:
vavg	../netcache/util.c	/^	double		vavg;$/;"	m	struct:tag_mls_t	file:
vavg	../netcache/volumeops.c	/^	double		vavg;$/;"	m	struct:tag_pls_t	file:
vbase	../include/netcache.h	/^  	char	      		vbase[0];$/;"	m	struct:tag_fc_header_info_v30
vec	../netcache/wb_timer.c	/^	struct list_head vec[TVN_SIZE];$/;"	m	struct:tvec_s	typeref:struct:tvec_s::list_head	file:
vec	../netcache/wb_timer.c	/^	struct list_head vec[TVR_SIZE];$/;"	m	struct:tvec_root_s	typeref:struct:tvec_root_s::list_head	file:
vector	../include/asio.h	/^	struct nc_asio_vector	*vector;		\/* vector pointer *\/$/;"	m	struct:nc_asio_context	typeref:struct:nc_asio_context::nc_asio_vector
vector	../include/asio.h	/^	struct nc_asio_vector 	*vector;$/;"	m	struct:__anon23	typeref:struct:__anon23::nc_asio_vector
vector	../netcache/disk_io_ops.c	/^	nc_asio_vector_t 	*vector;$/;"	m	struct:nc_iocb_xtra	file:
verify	../test/driver_test.c	/^int 			verify = 0;$/;"	v
verify	../test/volume_test.c	/^int 			verify = 0;$/;"	v
version	../include/cfs_driver.h	/^	nc_uint32_t						version; 		\/* caching version(age) *\/$/;"	m	struct:nc_volume_context
vfree	../netcache/mdb.c	/^	char 		*vfree;$/;"	m	struct:property_pack_info	file:
viewcount	../include/netcache.h	/^	nc_uint32_t			viewcount;$/;"	m	struct:tag_nc_mdb_inode_info
viewcount	../include/netcache.h	/^	nc_uint32_t 					viewcount;		\/**<캐싱된 이후 view count (즉,  open 횟수)*\/$/;"	m	struct:tag_fc_inode_info
viewcount	../netcache/mdb.c	/^	int				viewcount;$/;"	m	struct:mdb_inserti_tag	file:
viewindex	../include/netcache.h	/^	nc_int32_t			viewindex;$/;"	m	struct:tag_nc_mdb_inode_info
viewindex	../netcache/mdb.c	/^	int				viewindex;$/;"	m	struct:mdb_inserti_tag	file:
vlen	../include/netcache.h	/^  	nc_uint32_t	     	vlen; 			\/* 가변 헤더 정보 크기, 압축된 경우엔 압축된 크기  *\/$/;"	m	struct:tag_fc_header_info_v30
vmax	../include/util.h	/^	double 	vmin, vmax;$/;"	m	struct:__anon68
vmax	../netcache/clfu.c	/^	double		vmax;$/;"	m	struct:tag_bl_t	file:
vmax	../netcache/util.c	/^	double		vmax;$/;"	m	struct:tag_mls_t	file:
vmax	../netcache/volumeops.c	/^	double		vmax;$/;"	m	struct:tag_pls_t	file:
vmin	../include/util.h	/^	double 	vmin, vmax;$/;"	m	struct:__anon68
vmin	../netcache/clfu.c	/^	double		vmin;$/;"	m	struct:tag_bl_t	file:
vmin	../netcache/util.c	/^	double		vmin;$/;"	m	struct:tag_mls_t	file:
vmin	../netcache/volumeops.c	/^	double		vmin;$/;"	m	struct:tag_pls_t	file:
vol_signature	../include/netcache.h	/^	char				*vol_signature;$/;"	m	struct:purge_info
vol_signature	../include/netcache.h	/^	char				*vol_signature;$/;"	m	struct:tag_nc_mdb_inode_info
vollock	../netcache/mdb.c	/^	mdb_rwlock_t 		vollock;$/;"	m	struct:tag_nc_mdb_handle	file:
volume	../include/cfs_driver.h	/^	struct nc_volume_context 	*volume;$/;"	m	struct:nc_path_lock_tag	typeref:struct:nc_path_lock_tag::nc_volume_context
volume	../include/fio.h	/^	nc_volume_context_t *volume;$/;"	m	struct:tag_nc_file_ref
volume	../include/netcache.h	/^	nc_volume_context_t		*volume;$/;"	m	struct:apc_open_context
volume	../include/netcache.h	/^	nc_volume_context_t 		*volume;$/;"	m	struct:tag_nc_file_ref
volume	../include/netcache.h	/^	nc_volume_context_t * 			volume;		$/;"	m	struct:tag_fc_inode_info
volume	../include/netcache.h	/^	nc_volume_context_t *volume;$/;"	m	struct:__anon53
volume	../include/netcache.h	/^	nc_volume_context_t *volume;$/;"	m	struct:__anon54
volume	../netcache/fhops.c	/^	nc_volume_context_t	*volume;$/;"	m	struct:fio_open_sync_info	file:
volume	../netcache/volumeops.c	/^	nc_volume_context_t 	*volume;$/;"	m	struct:orphanize_info	file:
volume	../netcache/volumeops.c	/^	nc_volume_context_t 	*volume;$/;"	m	struct:tag_purge_volume_context	file:
volume	../netcache/volumeops.c	/^	nc_volume_context_t *volume;$/;"	m	struct:tag_PL_oi	file:
volume	../test/test_kv.c	/^nc_volume_context_t 	*volume = NULL;$/;"	v
volume	../test/test_path.c	/^nc_volume_context_t 	*volume = NULL;$/;"	v
volumes	../netcache/mdb.c	/^	mdb_session_t 		*volumes;$/;"	m	struct:tag_nc_mdb_handle	file:
vstring_pack	../netcache/util.c	/^vstring_pack(char *ptr, int capa, char *str, int len)$/;"	f
vstring_size	../netcache/util.c	/^vstring_size(char *ptr)$/;"	f
vstring_size2	../netcache/util.c	/^vstring_size2(int len)$/;"	f
vstring_unpack	../netcache/util.c	/^vstring_unpack(char *ptr, char **str, int *len)$/;"	f
vtime	../include/netcache.h	/^	nc_time_t			vtime; 				\/* 다음 원본 신선도 체크 시각(UTC?) *\/$/;"	m	struct:tag_fc_header_info_v30
vtime	../include/netcache.h	/^	nc_time_t			vtime;$/;"	m	struct:tag_nc_mdb_inode_info
vtime	../include/netcache.h	/^  	nc_time_t      					vtime;			\/**<cache 가 유효한 시간, xfv=1이면 무조건 이후에 삭제됨 *\/$/;"	m	struct:tag_fc_inode_info
vtime	../netcache/mdb.c	/^	nc_time_t		vtime;$/;"	m	struct:mdb_inserti_tag	file:
vtime	../netcache/mdb.c	/^	nc_time_t		vtime;$/;"	m	struct:mdb_update_rowi_tag	file:
vtrace	../netcache/trace.c	/^vtrace(char *fmt, va_list ap)$/;"	f
w	../rwtest/rwtest.c	/^pthread_t	w;$/;"	v
w_cnt	../rwtest/rwtest.c	/^int		w_cnt = 0;$/;"	v
w_worker	../rwtest/rwtest.c	/^void *w_worker(void *d)$/;"	f
wait	../test/gprof-helper.c	/^	pthread_cond_t wait;$/;"	m	struct:wrapper_s	file:
wait_queue	../netcache/threadpool.c	/^	tlc_queue_t			wait_queue;$/;"	m	struct:tag_threadpool	file:
waitable	../include/tlc_queue.h	/^	int					waitable; \/* default 0 *\/$/;"	m	struct:tlcqueue
waitcond	../include/tlc_queue.h	/^    pthread_cond_t      waitcond;$/;"	m	struct:tlcqueue
waiter	../include/block.h	/^	int					waiter;$/;"	m	struct:tag_blk_apc_read_info
waiter	../include/glru.h	/^	int 			waiter;$/;"	m	struct:tag_glru_node
waiters	../include/cfs_driver.h	/^	link_list_t					waiters;$/;"	m	struct:nc_path_lock_tag
waiters	../netcache/mdb.c	/^	int 				waiters;$/;"	m	struct:mdb_rwlock	file:
wall_jiffies	../netcache/wb_timer.c	/^unsigned long wall_jiffies = 0;$/;"	v
wall_to_monotonic	../netcache/wb_timer.c	/^struct timespec wall_to_monotonic __attribute__ ((aligned(16)));$/;"	v	typeref:struct:timespec
wanted	../include/netcache.h	/^	nc_blkno_t				wanted;$/;"	m	struct:apc_read_context
wb_timer_info_t	../include/wb_timer.h	/^} wb_timer_info_t;$/;"	t	typeref:struct:__anon70
wcnt	../include/cfs_driver.h	/^	int			wcnt;   \/* write count *\/$/;"	m	struct:cfs_iov
weight	../include/netcache.h	/^	int				weight;$/;"	m	struct:tag_part_element
wfx	../netcache/ringbuffer.c	/^	int				wfx;		\/* write offset *\/$/;"	m	struct:tag_nc_ringbuffer	file:
wheel	../netcache/bt_timer.c	/^	struct				timeout_list	wheel[WHEEL_NUM][WHEEL_LEN];$/;"	m	struct:timerwheels	typeref:struct:timerwheels::timeout_list	file:
wheel_t	../netcache/bt_timer.c	/^typedef		uint64_t		wheel_t;$/;"	t	file:
whint_map	../include/netcache.h	/^	unsigned long					*whint_map; \/* wait hint *\/$/;"	m	struct:tag_fc_inode_info
wloop	../test/rb_test.c	/^int				wloop = 1000000;$/;"	v
wmamode	../test/driver_test.c	/^int 			wmamode = 0;$/;"	v
wmamode	../test/volume_test.c	/^int 			wmamode = 0;$/;"	v
wmsmode	../test/driver_test.c	/^int 			wmsmode = 0;$/;"	v
wmsmode	../test/volume_test.c	/^int 			wmsmode = 0;$/;"	v
wooinit	../test/gprof-helper.c	/^void wooinit(void)$/;"	f
wrapper_routine	../test/gprof-helper.c	/^static void *wrapper_routine(void *data)$/;"	f	file:
wrapper_s	../test/gprof-helper.c	/^typedef struct wrapper_s {$/;"	s	file:
wrapper_t	../test/gprof-helper.c	/^} wrapper_t;$/;"	t	typeref:struct:wrapper_s	file:
writable	../include/cfs_driver.h	/^	nc_uint32_t 					writable:1;$/;"	m	struct:nc_volume_context
writable	../include/netcache.h	/^  	nc_uint8_t      				writable;			\/* >= 1 if the file opened with write mode*\/$/;"	m	struct:tag_fc_inode_info
write	../include/cfs_driver.h	/^	int 							(*write)(nc_asio_vector_t *vector);$/;"	m	struct:cfs_origin_driver
write_log	../netcache/log.c	/^int write_log(LOG_HANDLE * plog, char *fmt, ...)$/;"	f
write_monitor_file	../test/driver_test.c	/^write_monitor_file(void * cb, const char * method, const char * origin, const char * request, const char * reply, double elapsed, double sentb, double receivedb)$/;"	f
write_stream	../include/cfs_driver.h	/^	int 							(*write_stream)(struct dev_file_handle *, char *buf, nc_size_t len);$/;"	m	struct:cfs_origin_driver
writeback_blocks	../include/cfs_driver.h	/^	nc_uint16_t 					writeback_blocks;$/;"	m	struct:nc_volume_context
writer	../netcache/mdb.c	/^	int 				writer;$/;"	m	struct:mdb_rwlock	file:
writerlock	../netcache/mdb.c	/^	pthread_mutex_t 	writerlock;$/;"	m	struct:tag_nc_mdb_handle	file:
writers	../netcache/mdb.c	/^	mdb_session_t 		*writers[2];$/;"	m	struct:tag_nc_mdb_handle	file:
writersignal	../netcache/mdb.c	/^	pthread_cond_t 		writersignal;$/;"	m	struct:tag_nc_mdb_handle	file:
wt	../test/rb_test.c	/^int 			wt = 1;$/;"	v
xbyte	../include/netcache_types.h	/^		nc_uint64_t			xbyte;$/;"	m	union:tag_link_node::__anon56
xferbytes	../include/block.h	/^	int					xferbytes;	\/* 총 copy된 바이트 수 *\/$/;"	m	struct:tag_blk_apc_read_info
xfered	../netcache/disk_io_ops.c	/^	int				xfered;$/;"	m	struct:nc_iocb	file:
xfiles	../test/driver_test.c	/^char 			xfiles[1000][128];$/;"	v
xfv	../include/netcache_types.h	/^				nc_uint64_t 		xfv:1; 				\/* 1 : expire after st_vtime < now *\/$/;"	m	struct:__anon65::bitefields
xl	../include/cyclic_lfu.h	/^		nc_lock_t		*xl;$/;"	m	union:__anon32::__anon33
xo_file	../netcache/mdb.c	/^	char				xo_file[128];$/;"	m	struct:mdb_rwlock	file:
xo_line	../netcache/mdb.c	/^	int					xo_line;$/;"	m	struct:mdb_rwlock	file:
xtime	../include/netcache.h	/^	nc_time_t			xtime;$/;"	m	struct:tag_nc_mdb_inode_info
xtime	../netcache/wb_timer.c	/^struct timespec xtime __attribute__ ((aligned(16)));$/;"	v	typeref:struct:timespec
zpolicy	../include/cfs_driver.h	/^	char							*zpolicy;$/;"	m	struct:nc_volume_context
